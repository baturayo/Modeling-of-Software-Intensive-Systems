{
	"csm": {
		"nodes": {
			"0": {
				"typename": {
					"type": "string",
					"value": "CompositeStateIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						30.893748170267685,
						77
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						6.9783534544756,
						3.321782513015829
					]
				},
				"mapper": {
					"type": "code",
					"value": ""
				},
				"parser": {
					"type": "code",
					"value": ""
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"10": {
								"width": {
									"type": "double",
									"value": 400
								},
								"height": {
									"type": "double",
									"value": 400
								},
								"cornerRadius": {
									"type": "double",
									"value": 20
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "blue",
										"fill": "#ffffff",
										"fill-opacity": 0.01,
										"stroke-width": 2
									}
								},
								"mapper": {
									"type": "code",
									"value": "var style = { \"stroke\": \"blue\",\n\t\t    \"fill\": \"#ffffff\",\n\t\t    \"fill-opacity\": 0.01,\n   \t\t    \"stroke-width\": 2};\n\nif( getAttr('isStart') )\n\tstyle['stroke'] = 'green';\n\n({'style' : style})"
								},
								"parser": {
									"type": "code",
									"value": ""
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Rectangle",
								"position": {
									"type": "list<double>",
									"value": [
										2,
										0
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"11": {
								"textContent": {
									"type": "string",
									"value": "main"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 0.75,
										"font-size": "13px",
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": "({'textContent':getAttr('name')})"
								},
								"parser": {
									"type": "code",
									"value": "({'name':getAttr('textContent')})"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										11,
										404
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"12": {
								"distance": {
									"type": "double",
									"value": 10
								},
								"alignment": {
									"type": "ENUM(\"right\",\"left\",\"center\")",
									"value": "\"center\""
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Below",
								"position": {
									"type": "list<double>",
									"value": [
										77.06940657361247,
										379.3658354276615
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ff00",
										"stroke-dasharray": "",
										"stroke-opacity": 1,
										"arrow-start": "none",
										"arrow-end": "classic-wide-long"
									}
								}
							}
						},
						"edges": [
							{
								"src": "11",
								"dest": "12"
							},
							{
								"src": "12",
								"dest": "10"
							}
						]
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/SCCD/SCCD/CompositeState/0.instance"
				},
				"$type": "/Formalisms/SCCD/SCCD.defaultIcons/CompositeStateIcon"
			},
			"92": {
				"typename": {
					"type": "string",
					"value": "ClassIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						315,
						1464
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"75": {
								"textContent": {
									"type": "string",
									"value": ""
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"font-size": "14px",
										"font-style": "normal",
										"font-weight": "bold",
										"line-height": "100%",
										"letter-spacing": "0px",
										"word-spacing": "0px",
										"fill": "#000000",
										"fill-opacity": "1",
										"stroke": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "var filenames = getAttr('attributes').map(\n            function(attr)\n            {\n                var s = '+ '+attr['name'] + ' : ' + attr['type'] + ' = ' + attr['default'];\n                return s;\n            });\n\n({'textContent': filenames.join('\\n')})"
								},
								"parser": {
									"type": "code",
									"value": ""
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										10,
										41
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"77": {
								"textContent": {
									"type": "string",
									"value": "Train"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"font-size": "18px",
										"font-style": "normal",
										"font-weight": "bold",
										"line-height": "100%",
										"letter-spacing": "0px",
										"word-spacing": "0px",
										"fill": "#000000",
										"fill-opacity": "1",
										"stroke": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "var style = \n{\n   \"font-size\": \"18px\",\n   \"font-style\": \"normal\",\n   \"font-weight\": \"bold\",\n   \"line-height\": \"100%\",\n   \"letter-spacing\": \"0px\",\n   \"word-spacing\": \"0px\",\n   \"fill\": \"#000000\",\n   \"fill-opacity\": \"1\",\n   \"stroke\": \"none\",\n       \"font-style\": (getAttr('abstract') ? 'italic' : 'normal')\n};\n\n({'textContent': getAttr('name'), 'style':style})\n\n\n"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({'name': getAttr('textContent')})"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										8,
										8
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"80": {
								"segments": {
									"type": "string",
									"value": "m0,0l197,0"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 0.75,
										"font-size": "20px",
										"stroke-width": 2,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										6,
										36
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"81": {
								"width": {
									"type": "double",
									"value": 200
								},
								"height": {
									"type": "double",
									"value": 125
								},
								"cornerRadius": {
									"type": "double",
									"value": 0
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 0.75,
										"stroke-width": 2
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Rectangle",
								"position": {
									"type": "list<double>",
									"value": [
										4,
										3
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"83": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										12.5,
										27
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							},
							"84": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										53.75,
										20
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							},
							"85": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										68.5,
										36.5
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							}
						},
						"edges": [
							{
								"src": "81",
								"dest": "83"
							},
							{
								"src": "83",
								"dest": "75"
							},
							{
								"src": "81",
								"dest": "84"
							},
							{
								"src": "84",
								"dest": "80"
							},
							{
								"src": "81",
								"dest": "85"
							},
							{
								"src": "85",
								"dest": "77"
							}
						]
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/SCCD/SCCD/Class/92.instance"
				},
				"$type": "/Formalisms/SCCD/SCCD.defaultIcons/ClassIcon"
			},
			"93": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "-",
						"stroke-opacity": 1,
						"stroke-width": 1
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "behaviourLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						530.5280082923254,
						1433.3752004605901
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"92": {
								"textContent": {
									"type": "string",
									"value": "<<behaviour>>"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 0.75,
										"font-size": "13px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-90.57426244909163,0%",
										"0;12.601020389373843,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-18.649538754051406"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 0.34355828220858897,
										"yoffset": -16.5
									}
								}
							},
							"281": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;54.86534572733433,91.57882087939491%",
										"0;-29.038353295766,-40.16614950850655%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-23.68208772453845"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/SCCD/SCCD/behaviour/93.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/SCCD/SCCD.defaultIcons/ClassIcon/92.instance--/Formalisms/SCCD/SCCD.defaultIcons/behaviourLink/93.instance": "M370,1487L530,1433",
						"/Formalisms/SCCD/SCCD.defaultIcons/behaviourLink/93.instance--/Formalisms/SCCD/SCCD.defaultIcons/CompositeStateIcon/0.instance": "M530,1433L587,1408"
					}
				},
				"$type": "/Formalisms/SCCD/SCCD.defaultIcons/behaviourLink"
			},
			"118": {
				"typename": {
					"type": "string",
					"value": "OrthogonalComponentIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						144.99423125185194,
						148
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						2.59144884263893,
						3.1528084861822525
					]
				},
				"mapper": {
					"type": "code",
					"value": ""
				},
				"parser": {
					"type": "code",
					"value": ""
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"18": {
								"textContent": {
									"type": "string",
									"value": "Velocity"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 0.75,
										"font-size": "13px",
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": "({'textContent':getAttr('name')})"
								},
								"parser": {
									"type": "code",
									"value": "({'name':getAttr('textContent')})"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										9,
										203
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"20": {
								"width": {
									"type": "double",
									"value": 300
								},
								"height": {
									"type": "double",
									"value": 200
								},
								"cornerRadius": {
									"type": "double",
									"value": 20
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "gray",
										"fill": "#ffffff",
										"fill-opacity": 0.01,
										"stroke-width": 2,
										"stroke-dasharray": "- "
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": ""
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Rectangle",
								"position": {
									"type": "list<double>",
									"value": [
										2,
										0
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"21": {
								"distance": {
									"type": "double",
									"value": 10
								},
								"alignment": {
									"type": "ENUM(\"right\",\"left\",\"center\")",
									"value": "\"center\""
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Below",
								"position": {
									"type": "list<double>",
									"value": [
										77.06940657361247,
										379.3658354276615
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ff00",
										"stroke-dasharray": "",
										"stroke-opacity": 1,
										"arrow-start": "none",
										"arrow-end": "classic-wide-long"
									}
								}
							}
						},
						"edges": [
							{
								"src": "18",
								"dest": "21"
							},
							{
								"src": "21",
								"dest": "20"
							}
						]
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/SCCD/SCCD/OrthogonalComponent/118.instance"
				},
				"$type": "/Formalisms/SCCD/SCCD.defaultIcons/OrthogonalComponentIcon"
			},
			"120": {
				"typename": {
					"type": "string",
					"value": "CompositeStateIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						165,
						170
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1.828636728125,
						1.4701670644391407
					]
				},
				"mapper": {
					"type": "code",
					"value": ""
				},
				"parser": {
					"type": "code",
					"value": ""
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"10": {
								"width": {
									"type": "double",
									"value": 400
								},
								"height": {
									"type": "double",
									"value": 400
								},
								"cornerRadius": {
									"type": "double",
									"value": 20
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "green",
										"fill": "#ffffff",
										"fill-opacity": 0.01,
										"stroke-width": 2
									}
								},
								"mapper": {
									"type": "code",
									"value": "var style = { \"stroke\": \"blue\",\n\t\t    \"fill\": \"#ffffff\",\n\t\t    \"fill-opacity\": 0.01,\n   \t\t    \"stroke-width\": 2};\n\nif( getAttr('isStart') )\n\tstyle['stroke'] = 'green';\n\n({'style' : style})"
								},
								"parser": {
									"type": "code",
									"value": ""
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Rectangle",
								"position": {
									"type": "list<double>",
									"value": [
										2,
										0
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"11": {
								"textContent": {
									"type": "string",
									"value": "Velocity"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 0.75,
										"font-size": "13px",
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": "({'textContent':getAttr('name')})"
								},
								"parser": {
									"type": "code",
									"value": "({'name':getAttr('textContent')})"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										11,
										404
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"12": {
								"distance": {
									"type": "double",
									"value": 10
								},
								"alignment": {
									"type": "ENUM(\"right\",\"left\",\"center\")",
									"value": "\"center\""
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Below",
								"position": {
									"type": "list<double>",
									"value": [
										77.06940657361247,
										379.3658354276615
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ff00",
										"stroke-dasharray": "",
										"stroke-opacity": 1,
										"arrow-start": "none",
										"arrow-end": "classic-wide-long"
									}
								}
							}
						},
						"edges": [
							{
								"src": "11",
								"dest": "12"
							},
							{
								"src": "12",
								"dest": "10"
							}
						]
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/SCCD/SCCD/CompositeState/120.instance"
				},
				"$type": "/Formalisms/SCCD/SCCD.defaultIcons/CompositeStateIcon"
			},
			"124": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#ffff00",
						"stroke-dasharray": "",
						"stroke-opacity": 0.75,
						"stroke-width": 1
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "ocContainLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						419.5001561994136,
						473.87330382469565
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/SCCD/SCCD/ocContain/124.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/SCCD/SCCD.defaultIcons/OrthogonalComponentIcon/118.instance--/Formalisms/SCCD/SCCD.defaultIcons/ocContainLink/124.instance": "M375,412L419.5001561994136,473.87330382469577",
						"/Formalisms/SCCD/SCCD.defaultIcons/ocContainLink/124.instance--/Formalisms/SCCD/SCCD.defaultIcons/CompositeStateIcon/120.instance": "M419.49992552546973,473.87298309415837L458.8245390560077,443.5022112613019"
					}
				},
				"$type": "/Formalisms/SCCD/SCCD.defaultIcons/ocContainLink"
			},
			"125": {
				"typename": {
					"type": "string",
					"value": "BasicStateIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						274,
						299
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": ""
				},
				"parser": {
					"type": "code",
					"value": ""
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"4": {
								"r": {
									"type": "double",
									"value": 20
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#20B2AA",
										"fill": "#E6E6FA",
										"fill-opacity": 0.75,
										"stroke-width": 2
									}
								},
								"mapper": {
									"type": "code",
									"value": "var style = { \"stroke\": \"#20B2AA\",\n\t\t    \"fill\": \"#E6E6FA\",\n\t\t    \"fill-opacity\": 0.75,\n   \t\t    \"stroke-width\": 2};\n\nif( getAttr('isStart') )\n\tstyle['stroke-width'] = 4;\n\nif( getAttr('isCurrent') )\n\tstyle['fill'] = 'green';\n\n({'style' : style})"
								},
								"parser": {
									"type": "code",
									"value": ""
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										3,
										3
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"5": {
								"textContent": {
									"type": "string",
									"value": "Accelerate"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 0.75,
										"font-size": "13px",
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": "({'textContent':getAttr('name')})"
								},
								"parser": {
									"type": "code",
									"value": "({'name':getAttr('textContent')})"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										2,
										44
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"6": {
								"distance": {
									"type": "double",
									"value": 10
								},
								"alignment": {
									"type": "ENUM(\"right\",\"left\",\"center\")",
									"value": "\"center\""
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Below",
								"position": {
									"type": "list<double>",
									"value": [
										32.99899850809555,
										45.99899850809561
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ff00",
										"stroke-dasharray": "",
										"stroke-opacity": 1,
										"arrow-start": "none",
										"arrow-end": "classic-wide-long"
									}
								}
							}
						},
						"edges": [
							{
								"src": "5",
								"dest": "6"
							},
							{
								"src": "6",
								"dest": "4"
							}
						]
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/SCCD/SCCD/BasicState/125.instance"
				},
				"$type": "/Formalisms/SCCD/SCCD.defaultIcons/BasicStateIcon"
			},
			"127": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 1
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "transitionLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						295.10008333333326,
						275
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"16": {
								"textContent": {
									"type": "string",
									"value": "SliderChanged"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 0.75,
										"font-size": "13px",
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": "({'textContent':getAttr('display')})"
								},
								"parser": {
									"type": "code",
									"value": "({'display':getAttr('textContent')})"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-10.272042362128161,0%",
										"0;-16.282768861148043,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-1.2453642667683475"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 0.44785276073619634,
										"yoffset": -16.5
									}
								}
							},
							"281": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;18.684500010961756,-71.7900393451055%",
										"0;34.87160157380424,69.614583607375%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;135.88140399658215"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/SCCD/SCCD/transition/127.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/SCCD/SCCD.defaultIcons/BasicStateIcon/125.instance--/Formalisms/SCCD/SCCD.defaultIcons/transitionLink/127.instance": "M284,310L249,276L295,275",
						"/Formalisms/SCCD/SCCD.defaultIcons/transitionLink/127.instance--/Formalisms/SCCD/SCCD.defaultIcons/BasicStateIcon/125.instance": "M295,275L344,275L311,307"
					}
				},
				"$type": "/Formalisms/SCCD/SCCD.defaultIcons/transitionLink"
			},
			"128": {
				"typename": {
					"type": "string",
					"value": "CompositeStateIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						109.4697165799439,
						97
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						4.1670620676521155,
						3.0535004630338016
					]
				},
				"mapper": {
					"type": "code",
					"value": ""
				},
				"parser": {
					"type": "code",
					"value": ""
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"10": {
								"width": {
									"type": "double",
									"value": 400
								},
								"height": {
									"type": "double",
									"value": 400
								},
								"cornerRadius": {
									"type": "double",
									"value": 20
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "green",
										"fill": "#ffffff",
										"fill-opacity": 0.01,
										"stroke-width": 2
									}
								},
								"mapper": {
									"type": "code",
									"value": "var style = { \"stroke\": \"blue\",\n\t\t    \"fill\": \"#ffffff\",\n\t\t    \"fill-opacity\": 0.01,\n   \t\t    \"stroke-width\": 2};\n\nif( getAttr('isStart') )\n\tstyle['stroke'] = 'green';\n\n({'style' : style})"
								},
								"parser": {
									"type": "code",
									"value": ""
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Rectangle",
								"position": {
									"type": "list<double>",
									"value": [
										2,
										0
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"11": {
								"textContent": {
									"type": "string",
									"value": "TrainSystem"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 0.75,
										"font-size": "13px",
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": "({'textContent':getAttr('name')})"
								},
								"parser": {
									"type": "code",
									"value": "({'name':getAttr('textContent')})"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										11,
										404
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"12": {
								"distance": {
									"type": "double",
									"value": 10
								},
								"alignment": {
									"type": "ENUM(\"right\",\"left\",\"center\")",
									"value": "\"center\""
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Below",
								"position": {
									"type": "list<double>",
									"value": [
										77.06940657361247,
										379.3658354276615
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ff00",
										"stroke-dasharray": "",
										"stroke-opacity": 1,
										"arrow-start": "none",
										"arrow-end": "classic-wide-long"
									}
								}
							}
						},
						"edges": [
							{
								"src": "11",
								"dest": "12"
							},
							{
								"src": "12",
								"dest": "10"
							}
						]
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/SCCD/SCCD/CompositeState/128.instance"
				},
				"$type": "/Formalisms/SCCD/SCCD.defaultIcons/CompositeStateIcon"
			},
			"129": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#ffff00",
						"stroke-dasharray": "",
						"stroke-opacity": 0.75,
						"stroke-width": 1
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "containLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						535.2810628871243,
						331.509868999475
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/SCCD/SCCD/contain/129.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/SCCD/SCCD.defaultIcons/CompositeStateIcon/0.instance--/Formalisms/SCCD/SCCD.defaultIcons/containLink/129.instance": "M40.2738560272,188.0611999999999L535.2810628871243,331.509868999475",
						"/Formalisms/SCCD/SCCD.defaultIcons/containLink/129.instance--/Formalisms/SCCD/SCCD.defaultIcons/CompositeStateIcon/128.instance": "M535.2087855458852,331.48892367129406L1033.999300542574,401.87479730348286"
					}
				},
				"$type": "/Formalisms/SCCD/SCCD.defaultIcons/containLink"
			},
			"130": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#ffff00",
						"stroke-dasharray": "",
						"stroke-opacity": 0.75,
						"stroke-width": 1
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "containOCLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						824.3664166666667,
						370.11008381203976
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/SCCD/SCCD/containOC/130.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/SCCD/SCCD.defaultIcons/CompositeStateIcon/128.instance--/Formalisms/SCCD/SCCD.defaultIcons/containOCLink/130.instance": "M836,193.00000000000003L824.3664166666667,370.1100838120399",
						"/Formalisms/SCCD/SCCD.defaultIcons/containOCLink/130.instance--/Formalisms/SCCD/SCCD.defaultIcons/OrthogonalComponentIcon/118.instance": "M824.3615038924502,370.18487606033796L462.7328834353616,522.219404869031"
					}
				},
				"$type": "/Formalisms/SCCD/SCCD.defaultIcons/containOCLink"
			},
			"144": {
				"typename": {
					"type": "string",
					"value": "BasicStateIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						522,
						256
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": ""
				},
				"parser": {
					"type": "code",
					"value": ""
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"4": {
								"r": {
									"type": "double",
									"value": 20
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#20B2AA",
										"fill": "#E6E6FA",
										"fill-opacity": 0.75,
										"stroke-width": 2
									}
								},
								"mapper": {
									"type": "code",
									"value": "var style = { \"stroke\": \"#20B2AA\",\n\t\t    \"fill\": \"#E6E6FA\",\n\t\t    \"fill-opacity\": 0.75,\n   \t\t    \"stroke-width\": 2};\n\nif( getAttr('isStart') )\n\tstyle['stroke-width'] = 4;\n\nif( getAttr('isCurrent') )\n\tstyle['fill'] = 'green';\n\n({'style' : style})"
								},
								"parser": {
									"type": "code",
									"value": ""
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										3,
										3
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"5": {
								"textContent": {
									"type": "string",
									"value": "Maxspeed"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 0.75,
										"font-size": "13px",
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": "({'textContent':getAttr('name')})"
								},
								"parser": {
									"type": "code",
									"value": "({'name':getAttr('textContent')})"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										2,
										44
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"6": {
								"distance": {
									"type": "double",
									"value": 10
								},
								"alignment": {
									"type": "ENUM(\"right\",\"left\",\"center\")",
									"value": "\"center\""
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Below",
								"position": {
									"type": "list<double>",
									"value": [
										32.99899850809555,
										45.99899850809561
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ff00",
										"stroke-dasharray": "",
										"stroke-opacity": 1,
										"arrow-start": "none",
										"arrow-end": "classic-wide-long"
									}
								}
							}
						},
						"edges": [
							{
								"src": "5",
								"dest": "6"
							},
							{
								"src": "6",
								"dest": "4"
							}
						]
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/SCCD/SCCD/BasicState/144.instance"
				},
				"$type": "/Formalisms/SCCD/SCCD.defaultIcons/BasicStateIcon"
			},
			"146": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 1
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "transitionLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						439,
						315.5
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"16": {
								"textContent": {
									"type": "string",
									"value": "Maxspeed"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 0.75,
										"font-size": "13px",
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": "({'textContent':getAttr('display')})"
								},
								"parser": {
									"type": "code",
									"value": "({'display':getAttr('textContent')})"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-25.326924495010076,0%",
										"0;-17.008836330230565,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-2.3662479914557863"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 0.44785276073619634,
										"yoffset": -16.5
									}
								}
							},
							"281": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;88.67305848752142,94.33724815277448%",
										"0;-37.27348992611098,-33.17353781196465%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-19.37413976865759"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/SCCD/SCCD/transition/146.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/SCCD/SCCD.defaultIcons/BasicStateIcon/125.instance--/Formalisms/SCCD/SCCD.defaultIcons/transitionLink/146.instance": "M317,319L438,314",
						"/Formalisms/SCCD/SCCD.defaultIcons/transitionLink/146.instance--/Formalisms/SCCD/SCCD.defaultIcons/BasicStateIcon/144.instance": "M438,314L529,282"
					}
				},
				"$type": "/Formalisms/SCCD/SCCD.defaultIcons/transitionLink"
			},
			"147": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 1
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "transitionLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						411.6043827858173,
						269.2363043699287
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"16": {
								"textContent": {
									"type": "string",
									"value": "Slowdown"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 0.75,
										"font-size": "13px",
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": "({'textContent':getAttr('display')})"
								},
								"parser": {
									"type": "code",
									"value": "({'display':getAttr('textContent')})"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										"0;11.786185388260492,0%",
										"0;17.173787175492038,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-175.985824304589"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 0.44785276073619634,
										"yoffset": -16.5
									}
								}
							},
							"281": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-95.97982892160348,-91.38115486202572%",
										"0;48.41894182455235,40.61384660534474%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;156.03751102542182"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/SCCD/SCCD/transition/147.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/SCCD/SCCD.defaultIcons/BasicStateIcon/144.instance--/Formalisms/SCCD/SCCD.defaultIcons/transitionLink/147.instance": "M525,277L411,269",
						"/Formalisms/SCCD/SCCD.defaultIcons/transitionLink/147.instance--/Formalisms/SCCD/SCCD.defaultIcons/BasicStateIcon/125.instance": "M411,269L413,270L314,314"
					}
				},
				"$type": "/Formalisms/SCCD/SCCD.defaultIcons/transitionLink"
			},
			"149": {
				"typename": {
					"type": "string",
					"value": "BasicStateIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						239,
						487
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": ""
				},
				"parser": {
					"type": "code",
					"value": ""
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"4": {
								"r": {
									"type": "double",
									"value": 20
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#20B2AA",
										"fill": "#E6E6FA",
										"fill-opacity": 0.75,
										"stroke-width": 4
									}
								},
								"mapper": {
									"type": "code",
									"value": "var style = { \"stroke\": \"#20B2AA\",\n\t\t    \"fill\": \"#E6E6FA\",\n\t\t    \"fill-opacity\": 0.75,\n   \t\t    \"stroke-width\": 2};\n\nif( getAttr('isStart') )\n\tstyle['stroke-width'] = 4;\n\nif( getAttr('isCurrent') )\n\tstyle['fill'] = 'green';\n\n({'style' : style})"
								},
								"parser": {
									"type": "code",
									"value": ""
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										3,
										3
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"5": {
								"textContent": {
									"type": "string",
									"value": "Minspeed"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 0.75,
										"font-size": "13px",
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": "({'textContent':getAttr('name')})"
								},
								"parser": {
									"type": "code",
									"value": "({'name':getAttr('textContent')})"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										2,
										44
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"6": {
								"distance": {
									"type": "double",
									"value": 10
								},
								"alignment": {
									"type": "ENUM(\"right\",\"left\",\"center\")",
									"value": "\"center\""
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Below",
								"position": {
									"type": "list<double>",
									"value": [
										32.99899850809555,
										45.99899850809561
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ff00",
										"stroke-dasharray": "",
										"stroke-opacity": 1,
										"arrow-start": "none",
										"arrow-end": "classic-wide-long"
									}
								}
							}
						},
						"edges": [
							{
								"src": "5",
								"dest": "6"
							},
							{
								"src": "6",
								"dest": "4"
							}
						]
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/SCCD/SCCD/BasicState/149.instance"
				},
				"$type": "/Formalisms/SCCD/SCCD.defaultIcons/BasicStateIcon"
			},
			"152": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 1
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "transitionLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						250.66616842338544,
						398.13134461816594
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"16": {
								"textContent": {
									"type": "string",
									"value": "Minspeed"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 0.75,
										"font-size": "13px",
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": "({'textContent':getAttr('display')})"
								},
								"parser": {
									"type": "code",
									"value": "({'display':getAttr('textContent')})"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										"0;15.066313578099766,0%",
										"0;1.1461906642081203,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;83.86274405073802"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 0.44785276073619634,
										"yoffset": -16.5
									}
								}
							},
							"281": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;12.310906124167701,10.69106061170201%",
										"0;92.44101295736596,99.42686368882865%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;83.86274405073802"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/SCCD/SCCD/transition/152.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/SCCD/SCCD.defaultIcons/BasicStateIcon/125.instance--/Formalisms/SCCD/SCCD.defaultIcons/transitionLink/152.instance": "M284,337L249,398",
						"/Formalisms/SCCD/SCCD.defaultIcons/transitionLink/152.instance--/Formalisms/SCCD/SCCD.defaultIcons/BasicStateIcon/149.instance": "M249,398L249,398L259,491"
					}
				},
				"$type": "/Formalisms/SCCD/SCCD.defaultIcons/transitionLink"
			},
			"153": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 1
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "transitionLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						308.04384620991254,
						425.664502915452
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"16": {
								"textContent": {
									"type": "string",
									"value": "Speedup"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 0.75,
										"font-size": "13px",
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": "({'textContent':getAttr('display')})"
								},
								"parser": {
									"type": "code",
									"value": "({'display':getAttr('textContent')})"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-16.419271628256467,0%",
										"0;-3.882054379725048,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-63.1130658075233"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 0.44785276073619634,
										"yoffset": -16.5
									}
								}
							},
							"281": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-14.015126711518462,-11.96168825784913%",
										"0;-83.18603538513798,-99.28201254014765%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-96.86999230821426"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/SCCD/SCCD/transition/153.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/SCCD/SCCD.defaultIcons/BasicStateIcon/149.instance--/Formalisms/SCCD/SCCD.defaultIcons/transitionLink/153.instance": "M273,495L309,424L308,425",
						"/Formalisms/SCCD/SCCD.defaultIcons/transitionLink/153.instance--/Formalisms/SCCD/SCCD.defaultIcons/BasicStateIcon/125.instance": "M308,425L298,342"
					}
				},
				"$type": "/Formalisms/SCCD/SCCD.defaultIcons/transitionLink"
			},
			"154": {
				"typename": {
					"type": "string",
					"value": "OrthogonalComponentIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						942.5882518192351,
						121
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						2.70303785833336,
						3.2896523182889377
					]
				},
				"mapper": {
					"type": "code",
					"value": ""
				},
				"parser": {
					"type": "code",
					"value": ""
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"18": {
								"textContent": {
									"type": "string",
									"value": "Doors"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 0.75,
										"font-size": "13px",
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": "({'textContent':getAttr('name')})"
								},
								"parser": {
									"type": "code",
									"value": "({'name':getAttr('textContent')})"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										9,
										203
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"20": {
								"width": {
									"type": "double",
									"value": 300
								},
								"height": {
									"type": "double",
									"value": 200
								},
								"cornerRadius": {
									"type": "double",
									"value": 20
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "gray",
										"fill": "#ffffff",
										"fill-opacity": 0.01,
										"stroke-width": 2,
										"stroke-dasharray": "- "
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": ""
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Rectangle",
								"position": {
									"type": "list<double>",
									"value": [
										2,
										0
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"21": {
								"distance": {
									"type": "double",
									"value": 10
								},
								"alignment": {
									"type": "ENUM(\"right\",\"left\",\"center\")",
									"value": "\"center\""
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Below",
								"position": {
									"type": "list<double>",
									"value": [
										77.06940657361247,
										379.3658354276615
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ff00",
										"stroke-dasharray": "",
										"stroke-opacity": 1,
										"arrow-start": "none",
										"arrow-end": "classic-wide-long"
									}
								}
							}
						},
						"edges": [
							{
								"src": "18",
								"dest": "21"
							},
							{
								"src": "21",
								"dest": "20"
							}
						]
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/SCCD/SCCD/OrthogonalComponent/154.instance"
				},
				"$type": "/Formalisms/SCCD/SCCD.defaultIcons/OrthogonalComponentIcon"
			},
			"155": {
				"typename": {
					"type": "string",
					"value": "CompositeStateIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1055,
						229
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": ""
				},
				"parser": {
					"type": "code",
					"value": ""
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"10": {
								"width": {
									"type": "double",
									"value": 400
								},
								"height": {
									"type": "double",
									"value": 400
								},
								"cornerRadius": {
									"type": "double",
									"value": 20
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "green",
										"fill": "#ffffff",
										"fill-opacity": 0.01,
										"stroke-width": 2
									}
								},
								"mapper": {
									"type": "code",
									"value": "var style = { \"stroke\": \"blue\",\n\t\t    \"fill\": \"#ffffff\",\n\t\t    \"fill-opacity\": 0.01,\n   \t\t    \"stroke-width\": 2};\n\nif( getAttr('isStart') )\n\tstyle['stroke'] = 'green';\n\n({'style' : style})"
								},
								"parser": {
									"type": "code",
									"value": ""
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Rectangle",
								"position": {
									"type": "list<double>",
									"value": [
										2,
										0
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"11": {
								"textContent": {
									"type": "string",
									"value": "Doors"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 0.75,
										"font-size": "13px",
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": "({'textContent':getAttr('name')})"
								},
								"parser": {
									"type": "code",
									"value": "({'name':getAttr('textContent')})"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										11,
										404
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"12": {
								"distance": {
									"type": "double",
									"value": 10
								},
								"alignment": {
									"type": "ENUM(\"right\",\"left\",\"center\")",
									"value": "\"center\""
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Below",
								"position": {
									"type": "list<double>",
									"value": [
										77.06940657361247,
										379.3658354276615
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ff00",
										"stroke-dasharray": "",
										"stroke-opacity": 1,
										"arrow-start": "none",
										"arrow-end": "classic-wide-long"
									}
								}
							}
						},
						"edges": [
							{
								"src": "11",
								"dest": "12"
							},
							{
								"src": "12",
								"dest": "10"
							}
						]
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/SCCD/SCCD/CompositeState/155.instance"
				},
				"$type": "/Formalisms/SCCD/SCCD.defaultIcons/CompositeStateIcon"
			},
			"158": {
				"typename": {
					"type": "string",
					"value": "BasicStateIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1156,
						278
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": ""
				},
				"parser": {
					"type": "code",
					"value": ""
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"4": {
								"r": {
									"type": "double",
									"value": 20
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#20B2AA",
										"fill": "#E6E6FA",
										"fill-opacity": 0.75,
										"stroke-width": 4
									}
								},
								"mapper": {
									"type": "code",
									"value": "var style = { \"stroke\": \"#20B2AA\",\n\t\t    \"fill\": \"#E6E6FA\",\n\t\t    \"fill-opacity\": 0.75,\n   \t\t    \"stroke-width\": 2};\n\nif( getAttr('isStart') )\n\tstyle['stroke-width'] = 4;\n\nif( getAttr('isCurrent') )\n\tstyle['fill'] = 'green';\n\n({'style' : style})"
								},
								"parser": {
									"type": "code",
									"value": ""
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										3,
										3
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"5": {
								"textContent": {
									"type": "string",
									"value": "Closed"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 0.75,
										"font-size": "13px",
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": "({'textContent':getAttr('name')})"
								},
								"parser": {
									"type": "code",
									"value": "({'name':getAttr('textContent')})"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										2,
										44
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"6": {
								"distance": {
									"type": "double",
									"value": 10
								},
								"alignment": {
									"type": "ENUM(\"right\",\"left\",\"center\")",
									"value": "\"center\""
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Below",
								"position": {
									"type": "list<double>",
									"value": [
										32.99899850809555,
										45.99899850809561
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ff00",
										"stroke-dasharray": "",
										"stroke-opacity": 1,
										"arrow-start": "none",
										"arrow-end": "classic-wide-long"
									}
								}
							}
						},
						"edges": [
							{
								"src": "5",
								"dest": "6"
							},
							{
								"src": "6",
								"dest": "4"
							}
						]
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/SCCD/SCCD/BasicState/158.instance"
				},
				"$type": "/Formalisms/SCCD/SCCD.defaultIcons/BasicStateIcon"
			},
			"159": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#ffff00",
						"stroke-dasharray": "",
						"stroke-opacity": 0.75,
						"stroke-width": 1
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "containLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1116.75,
						267.5
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/SCCD/SCCD/contain/159.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/SCCD/SCCD.defaultIcons/CompositeStateIcon/155.instance--/Formalisms/SCCD/SCCD.defaultIcons/containLink/159.instance": "M1057,229L1116.75,267.5",
						"/Formalisms/SCCD/SCCD.defaultIcons/containLink/159.instance--/Formalisms/SCCD/SCCD.defaultIcons/BasicStateIcon/158.instance": "M1116.8758767273898,267.5811088536318L1176.4992894993447,305.9995421878625"
					}
				},
				"$type": "/Formalisms/SCCD/SCCD.defaultIcons/containLink"
			},
			"162": {
				"typename": {
					"type": "string",
					"value": "BasicStateIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1343,
						522
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": ""
				},
				"parser": {
					"type": "code",
					"value": ""
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"4": {
								"r": {
									"type": "double",
									"value": 20
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#20B2AA",
										"fill": "#E6E6FA",
										"fill-opacity": 0.75,
										"stroke-width": 2
									}
								},
								"mapper": {
									"type": "code",
									"value": "var style = { \"stroke\": \"#20B2AA\",\n\t\t    \"fill\": \"#E6E6FA\",\n\t\t    \"fill-opacity\": 0.75,\n   \t\t    \"stroke-width\": 2};\n\nif( getAttr('isStart') )\n\tstyle['stroke-width'] = 4;\n\nif( getAttr('isCurrent') )\n\tstyle['fill'] = 'green';\n\n({'style' : style})"
								},
								"parser": {
									"type": "code",
									"value": ""
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										3,
										3
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"5": {
								"textContent": {
									"type": "string",
									"value": "Open"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 0.75,
										"font-size": "13px",
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": "({'textContent':getAttr('name')})"
								},
								"parser": {
									"type": "code",
									"value": "({'name':getAttr('textContent')})"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										2,
										44
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"6": {
								"distance": {
									"type": "double",
									"value": 10
								},
								"alignment": {
									"type": "ENUM(\"right\",\"left\",\"center\")",
									"value": "\"center\""
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Below",
								"position": {
									"type": "list<double>",
									"value": [
										32.99899850809555,
										45.99899850809561
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ff00",
										"stroke-dasharray": "",
										"stroke-opacity": 1,
										"arrow-start": "none",
										"arrow-end": "classic-wide-long"
									}
								}
							}
						},
						"edges": [
							{
								"src": "5",
								"dest": "6"
							},
							{
								"src": "6",
								"dest": "4"
							}
						]
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/SCCD/SCCD/BasicState/162.instance"
				},
				"$type": "/Formalisms/SCCD/SCCD.defaultIcons/BasicStateIcon"
			},
			"163": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#ffff00",
						"stroke-dasharray": "",
						"stroke-opacity": 0.75,
						"stroke-width": 1
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "containLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1203.25,
						306.5
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/SCCD/SCCD/contain/163.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/SCCD/SCCD.defaultIcons/CompositeStateIcon/155.instance--/Formalisms/SCCD/SCCD.defaultIcons/containLink/163.instance": "M1057,229L1203.25,306.5",
						"/Formalisms/SCCD/SCCD.defaultIcons/containLink/163.instance--/Formalisms/SCCD/SCCD.defaultIcons/BasicStateIcon/162.instance": "M1203.3160361559449,306.534993518535L1363.4992796042307,549.9996182518141"
					}
				},
				"$type": "/Formalisms/SCCD/SCCD.defaultIcons/containLink"
			},
			"168": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 1
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "transitionLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1267,
						336
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"16": {
								"textContent": {
									"type": "string",
									"value": "closeDoors()"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 0.75,
										"font-size": "13px",
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": "({'textContent':getAttr('display')})"
								},
								"parser": {
									"type": "code",
									"value": "({'display':getAttr('textContent')})"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										"0;18.33476410701178,0%",
										"0;84.66786832922105,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-113.198590514371"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 0.44785276073619634,
										"yoffset": -16.5
									}
								}
							},
							"281": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-68.58889202312912,-91.77221168073156%",
										"0;-25.329111532770753,-39.7223005782268%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-156.59531044896784"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/SCCD/SCCD/transition/168.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/SCCD/SCCD.defaultIcons/BasicStateIcon/162.instance--/Formalisms/SCCD/SCCD.defaultIcons/transitionLink/168.instance": "M1351.0000000029272,532L1267.0000000000005,336",
						"/Formalisms/SCCD/SCCD.defaultIcons/transitionLink/168.instance--/Formalisms/SCCD/SCCD.defaultIcons/BasicStateIcon/158.instance": "M1266.8622057577736,335.94094532476015L1200,307"
					}
				},
				"$type": "/Formalisms/SCCD/SCCD.defaultIcons/transitionLink"
			},
			"169": {
				"typename": {
					"type": "string",
					"value": "OrthogonalComponentIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1177,
						831
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1.4666666666666668,
						2.1055045871559637
					]
				},
				"mapper": {
					"type": "code",
					"value": ""
				},
				"parser": {
					"type": "code",
					"value": ""
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"18": {
								"textContent": {
									"type": "string",
									"value": "Update"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 0.75,
										"font-size": "13px",
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": "({'textContent':getAttr('name')})"
								},
								"parser": {
									"type": "code",
									"value": "({'name':getAttr('textContent')})"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										9,
										203
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"20": {
								"width": {
									"type": "double",
									"value": 300
								},
								"height": {
									"type": "double",
									"value": 200
								},
								"cornerRadius": {
									"type": "double",
									"value": 20
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "gray",
										"fill": "#ffffff",
										"fill-opacity": 0.01,
										"stroke-width": 2,
										"stroke-dasharray": "- "
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": ""
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Rectangle",
								"position": {
									"type": "list<double>",
									"value": [
										2,
										0
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"21": {
								"distance": {
									"type": "double",
									"value": 10
								},
								"alignment": {
									"type": "ENUM(\"right\",\"left\",\"center\")",
									"value": "\"center\""
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Below",
								"position": {
									"type": "list<double>",
									"value": [
										77.06940657361247,
										379.3658354276615
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ff00",
										"stroke-dasharray": "",
										"stroke-opacity": 1,
										"arrow-start": "none",
										"arrow-end": "classic-wide-long"
									}
								}
							}
						},
						"edges": [
							{
								"src": "18",
								"dest": "21"
							},
							{
								"src": "21",
								"dest": "20"
							}
						]
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/SCCD/SCCD/OrthogonalComponent/169.instance"
				},
				"$type": "/Formalisms/SCCD/SCCD.defaultIcons/OrthogonalComponentIcon"
			},
			"170": {
				"typename": {
					"type": "string",
					"value": "CompositeStateIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1199,
						846
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": ""
				},
				"parser": {
					"type": "code",
					"value": ""
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"10": {
								"width": {
									"type": "double",
									"value": 400
								},
								"height": {
									"type": "double",
									"value": 400
								},
								"cornerRadius": {
									"type": "double",
									"value": 20
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "green",
										"fill": "#ffffff",
										"fill-opacity": 0.01,
										"stroke-width": 2
									}
								},
								"mapper": {
									"type": "code",
									"value": "var style = { \"stroke\": \"blue\",\n\t\t    \"fill\": \"#ffffff\",\n\t\t    \"fill-opacity\": 0.01,\n   \t\t    \"stroke-width\": 2};\n\nif( getAttr('isStart') )\n\tstyle['stroke'] = 'green';\n\n({'style' : style})"
								},
								"parser": {
									"type": "code",
									"value": ""
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Rectangle",
								"position": {
									"type": "list<double>",
									"value": [
										2,
										0
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"11": {
								"textContent": {
									"type": "string",
									"value": "Update"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 0.75,
										"font-size": "13px",
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": "({'textContent':getAttr('name')})"
								},
								"parser": {
									"type": "code",
									"value": "({'name':getAttr('textContent')})"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										11,
										404
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"12": {
								"distance": {
									"type": "double",
									"value": 10
								},
								"alignment": {
									"type": "ENUM(\"right\",\"left\",\"center\")",
									"value": "\"center\""
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Below",
								"position": {
									"type": "list<double>",
									"value": [
										77.06940657361247,
										379.3658354276615
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ff00",
										"stroke-dasharray": "",
										"stroke-opacity": 1,
										"arrow-start": "none",
										"arrow-end": "classic-wide-long"
									}
								}
							}
						},
						"edges": [
							{
								"src": "11",
								"dest": "12"
							},
							{
								"src": "12",
								"dest": "10"
							}
						]
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/SCCD/SCCD/CompositeState/170.instance"
				},
				"$type": "/Formalisms/SCCD/SCCD.defaultIcons/CompositeStateIcon"
			},
			"171": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#ffff00",
						"stroke-dasharray": "",
						"stroke-opacity": 0.75,
						"stroke-width": 1
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "ocContainLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1295,
						956.75
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/SCCD/SCCD/ocContain/171.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/SCCD/SCCD.defaultIcons/OrthogonalComponentIcon/169.instance--/Formalisms/SCCD/SCCD.defaultIcons/ocContainLink/171.instance": "M1190.9999999999998,853L1295.0000000000002,956.75",
						"/Formalisms/SCCD/SCCD.defaultIcons/ocContainLink/171.instance--/Formalisms/SCCD/SCCD.defaultIcons/CompositeStateIcon/170.instance": "M1295.0530242614905,956.8028967993234L1398.9993462746738,1055.499347846129"
					}
				},
				"$type": "/Formalisms/SCCD/SCCD.defaultIcons/ocContainLink"
			},
			"172": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#ffff00",
						"stroke-dasharray": "",
						"stroke-opacity": 0.75,
						"stroke-width": 1
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "containOCLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						571.1746011831074,
						530.7114422549314
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/SCCD/SCCD/containOC/172.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/SCCD/SCCD.defaultIcons/CompositeStateIcon/128.instance--/Formalisms/SCCD/SCCD.defaultIcons/containOCLink/172.instance": "M121.10923149714196,193.00000000000003L571.1746011831078,530.7114422549316",
						"/Formalisms/SCCD/SCCD.defaultIcons/containOCLink/172.instance--/Formalisms/SCCD/SCCD.defaultIcons/OrthogonalComponentIcon/169.instance": "M571.1743452141859,530.711250185869L1396.999232366245,1060.2422437574915"
					}
				},
				"$type": "/Formalisms/SCCD/SCCD.defaultIcons/containOCLink"
			},
			"173": {
				"typename": {
					"type": "string",
					"value": "BasicStateIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1267,
						950
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": ""
				},
				"parser": {
					"type": "code",
					"value": ""
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"4": {
								"r": {
									"type": "double",
									"value": 20
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#20B2AA",
										"fill": "#E6E6FA",
										"fill-opacity": 0.75,
										"stroke-width": 4
									}
								},
								"mapper": {
									"type": "code",
									"value": "var style = { \"stroke\": \"#20B2AA\",\n\t\t    \"fill\": \"#E6E6FA\",\n\t\t    \"fill-opacity\": 0.75,\n   \t\t    \"stroke-width\": 2};\n\nif( getAttr('isStart') )\n\tstyle['stroke-width'] = 4;\n\nif( getAttr('isCurrent') )\n\tstyle['fill'] = 'green';\n\n({'style' : style})"
								},
								"parser": {
									"type": "code",
									"value": ""
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										3,
										3
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"5": {
								"textContent": {
									"type": "string",
									"value": "Update"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 0.75,
										"font-size": "13px",
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": "({'textContent':getAttr('name')})"
								},
								"parser": {
									"type": "code",
									"value": "({'name':getAttr('textContent')})"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										2,
										44
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"6": {
								"distance": {
									"type": "double",
									"value": 10
								},
								"alignment": {
									"type": "ENUM(\"right\",\"left\",\"center\")",
									"value": "\"center\""
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Below",
								"position": {
									"type": "list<double>",
									"value": [
										32.99899850809555,
										45.99899850809561
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ff00",
										"stroke-dasharray": "",
										"stroke-opacity": 1,
										"arrow-start": "none",
										"arrow-end": "classic-wide-long"
									}
								}
							}
						},
						"edges": [
							{
								"src": "5",
								"dest": "6"
							},
							{
								"src": "6",
								"dest": "4"
							}
						]
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/SCCD/SCCD/BasicState/173.instance"
				},
				"$type": "/Formalisms/SCCD/SCCD.defaultIcons/BasicStateIcon"
			},
			"174": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#ffff00",
						"stroke-dasharray": "",
						"stroke-opacity": 0.75,
						"stroke-width": 1
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "containLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1244.25,
						912
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/SCCD/SCCD/contain/174.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/SCCD/SCCD.defaultIcons/CompositeStateIcon/170.instance--/Formalisms/SCCD/SCCD.defaultIcons/containLink/174.instance": "M1201.0000000000002,846L1244.2500000000002,912",
						"/Formalisms/SCCD/SCCD.defaultIcons/containLink/174.instance--/Formalisms/SCCD/SCCD.defaultIcons/BasicStateIcon/173.instance": "M1244.3324327115297,912.1257932707733L1287.4995792452141,977.9993579233328"
					}
				},
				"$type": "/Formalisms/SCCD/SCCD.defaultIcons/containLink"
			},
			"177": {
				"typename": {
					"type": "string",
					"value": "BasicStateIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1149,
						536
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": ""
				},
				"parser": {
					"type": "code",
					"value": ""
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"4": {
								"r": {
									"type": "double",
									"value": 20
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#20B2AA",
										"fill": "#E6E6FA",
										"fill-opacity": 0.75,
										"stroke-width": 2
									}
								},
								"mapper": {
									"type": "code",
									"value": "var style = { \"stroke\": \"#20B2AA\",\n\t\t    \"fill\": \"#E6E6FA\",\n\t\t    \"fill-opacity\": 0.75,\n   \t\t    \"stroke-width\": 2};\n\nif( getAttr('isStart') )\n\tstyle['stroke-width'] = 4;\n\nif( getAttr('isCurrent') )\n\tstyle['fill'] = 'green';\n\n({'style' : style})"
								},
								"parser": {
									"type": "code",
									"value": ""
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										3,
										3
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"5": {
								"textContent": {
									"type": "string",
									"value": "DoorsOpened"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 0.75,
										"font-size": "13px",
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": "({'textContent':getAttr('name')})"
								},
								"parser": {
									"type": "code",
									"value": "({'name':getAttr('textContent')})"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										2,
										44
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"6": {
								"distance": {
									"type": "double",
									"value": 10
								},
								"alignment": {
									"type": "ENUM(\"right\",\"left\",\"center\")",
									"value": "\"center\""
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Below",
								"position": {
									"type": "list<double>",
									"value": [
										32.99899850809555,
										45.99899850809561
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ff00",
										"stroke-dasharray": "",
										"stroke-opacity": 1,
										"arrow-start": "none",
										"arrow-end": "classic-wide-long"
									}
								}
							}
						},
						"edges": [
							{
								"src": "5",
								"dest": "6"
							},
							{
								"src": "6",
								"dest": "4"
							}
						]
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/SCCD/SCCD/BasicState/177.instance"
				},
				"$type": "/Formalisms/SCCD/SCCD.defaultIcons/BasicStateIcon"
			},
			"178": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#ffff00",
						"stroke-dasharray": "",
						"stroke-opacity": 0.75,
						"stroke-width": 1
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "containLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1123.25,
						350.5
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/SCCD/SCCD/contain/178.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/SCCD/SCCD.defaultIcons/CompositeStateIcon/155.instance--/Formalisms/SCCD/SCCD.defaultIcons/containLink/178.instance": "M1057,229L1123.25,350.5",
						"/Formalisms/SCCD/SCCD.defaultIcons/containLink/178.instance--/Formalisms/SCCD/SCCD.defaultIcons/BasicStateIcon/177.instance": "M1123.2858488878587,350.565745507545L1188.4995307071372,563.9991393292307"
					}
				},
				"$type": "/Formalisms/SCCD/SCCD.defaultIcons/containLink"
			},
			"180": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 1
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "transitionLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1259.5,
						557.5
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"16": {
								"textContent": {
									"type": "string",
									"value": "DoorscanClose"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 0.75,
										"font-size": "13px",
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": "({'textContent':getAttr('display')})"
								},
								"parser": {
									"type": "code",
									"value": "({'display':getAttr('textContent')})"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										"0;1.3723648472391687,0%",
										"0;-17.073415903511204,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-1.9525090495942905"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 0.44785276073619634,
										"yoffset": -16.5
									}
								}
							},
							"281": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;87.36371553485333,99.94194109756828%",
										"0;-7.497677643902762,-3.4071116286661733%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-1.9525090495942905"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/SCCD/SCCD/transition/180.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/SCCD/SCCD.defaultIcons/BasicStateIcon/177.instance--/Formalisms/SCCD/SCCD.defaultIcons/transitionLink/180.instance": "M1192,558L1259.0000000087812,557",
						"/Formalisms/SCCD/SCCD.defaultIcons/transitionLink/180.instance--/Formalisms/SCCD/SCCD.defaultIcons/BasicStateIcon/162.instance": "M1259.0000000087812,557L1347,554"
					}
				},
				"$type": "/Formalisms/SCCD/SCCD.defaultIcons/transitionLink"
			},
			"181": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 1
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "transitionLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1314.6429635629565,
						911.8205964254721
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"16": {
								"textContent": {
									"type": "string",
									"value": "updateState()"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 0.75,
										"font-size": "13px",
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": "({'textContent':getAttr('display')})"
								},
								"parser": {
									"type": "code",
									"value": "({'display':getAttr('textContent')})"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										"0;0.9121025319402634,0%",
										"0;-17.235890255317713,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;20.09523119190497"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 0.44785276073619634,
										"yoffset": -16.5
									}
								}
							},
							"281": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-5.511283732313814,-62.224412557536425%",
										"0;49.66789344285871,78.28232547561105%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;128.48019824834276"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/SCCD/SCCD/transition/181.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/SCCD/SCCD.defaultIcons/BasicStateIcon/173.instance--/Formalisms/SCCD/SCCD.defaultIcons/transitionLink/181.instance": "M1294,954L1296.0000000000002,905L1314.6429635629565,911.8205964254719",
						"/Formalisms/SCCD/SCCD.defaultIcons/transitionLink/181.instance--/Formalisms/SCCD/SCCD.defaultIcons/BasicStateIcon/173.instance": "M1314.6429635629565,911.8205964254719L1337.0000000000002,920L1306.0003868116182,958.9995133660293"
					}
				},
				"$type": "/Formalisms/SCCD/SCCD.defaultIcons/transitionLink"
			},
			"187": {
				"typename": {
					"type": "string",
					"value": "BasicStateIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1143,
						413
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": ""
				},
				"parser": {
					"type": "code",
					"value": ""
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"4": {
								"r": {
									"type": "double",
									"value": 20
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#20B2AA",
										"fill": "#E6E6FA",
										"fill-opacity": 0.75,
										"stroke-width": 2
									}
								},
								"mapper": {
									"type": "code",
									"value": "var style = { \"stroke\": \"#20B2AA\",\n\t\t    \"fill\": \"#E6E6FA\",\n\t\t    \"fill-opacity\": 0.75,\n   \t\t    \"stroke-width\": 2};\n\nif( getAttr('isStart') )\n\tstyle['stroke-width'] = 4;\n\nif( getAttr('isCurrent') )\n\tstyle['fill'] = 'green';\n\n({'style' : style})"
								},
								"parser": {
									"type": "code",
									"value": ""
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										3,
										3
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"5": {
								"textContent": {
									"type": "string",
									"value": "InStation"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 0.75,
										"font-size": "13px",
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": "({'textContent':getAttr('name')})"
								},
								"parser": {
									"type": "code",
									"value": "({'name':getAttr('textContent')})"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										2,
										44
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"6": {
								"distance": {
									"type": "double",
									"value": 10
								},
								"alignment": {
									"type": "ENUM(\"right\",\"left\",\"center\")",
									"value": "\"center\""
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Below",
								"position": {
									"type": "list<double>",
									"value": [
										32.99899850809555,
										45.99899850809561
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ff00",
										"stroke-dasharray": "",
										"stroke-opacity": 1,
										"arrow-start": "none",
										"arrow-end": "classic-wide-long"
									}
								}
							}
						},
						"edges": [
							{
								"src": "5",
								"dest": "6"
							},
							{
								"src": "6",
								"dest": "4"
							}
						]
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/SCCD/SCCD/BasicState/187.instance"
				},
				"$type": "/Formalisms/SCCD/SCCD.defaultIcons/BasicStateIcon"
			},
			"188": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#ffff00",
						"stroke-dasharray": "",
						"stroke-opacity": 0.75,
						"stroke-width": 1
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "containLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1082.5259321994167,
						374.6479660790246
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/SCCD/SCCD/contain/188.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/SCCD/SCCD.defaultIcons/CompositeStateIcon/155.instance--/Formalisms/SCCD/SCCD.defaultIcons/containLink/188.instance": "M1057,229L1082.5259321994167,374.6479660790246",
						"/Formalisms/SCCD/SCCD.defaultIcons/containLink/188.instance--/Formalisms/SCCD/SCCD.defaultIcons/BasicStateIcon/187.instance": "M1082.5129133577398,374.57368210004483L1168.9998418768814,440.99909776808727"
					}
				},
				"$type": "/Formalisms/SCCD/SCCD.defaultIcons/containLink"
			},
			"189": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 1
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "transitionLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1144.4953125067818,
						368.149999782986
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"16": {
								"textContent": {
									"type": "string",
									"value": "EnterStation"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 0.75,
										"font-size": "13px",
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": "({'textContent':getAttr('display')})"
								},
								"parser": {
									"type": "code",
									"value": "({'display':getAttr('textContent')})"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										"0;16.069234948789926,0%",
										"0;4.224694674617126,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;120.41108126883617"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 0.44785276073619634,
										"yoffset": -16.5
									}
								}
							},
							"281": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;27.110784989862168,43.27334071979383%",
										"0;48.11875430523622,90.15219344502181%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;64.35884548283263"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/SCCD/SCCD/transition/189.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/SCCD/SCCD.defaultIcons/BasicStateIcon/158.instance--/Formalisms/SCCD/SCCD.defaultIcons/transitionLink/189.instance": "M1171.0000000018467,322L1144,368",
						"/Formalisms/SCCD/SCCD.defaultIcons/transitionLink/189.instance--/Formalisms/SCCD/SCCD.defaultIcons/BasicStateIcon/187.instance": "M1144,368L1168.0000097588431,417.999687717014"
					}
				},
				"$type": "/Formalisms/SCCD/SCCD.defaultIcons/transitionLink"
			},
			"190": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 1
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "transitionLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1170.0071428436454,
						481.14999971655334
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"16": {
								"textContent": {
									"type": "string",
									"value": "openDoors()"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 0.75,
										"font-size": "13px",
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": "({'textContent':getAttr('display')})"
								},
								"parser": {
									"type": "code",
									"value": "({'display':getAttr('textContent')})"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										"0;16.905082253660794,0%",
										"0;11.097754045999807,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;87.95459151111277"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 0.44785276073619634,
										"yoffset": -16.5
									}
								}
							},
							"281": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;5.990308573744869,3.5691530512412597%",
										"0;55.707234161397025,99.93628543475495%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;87.95459151111277"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/SCCD/SCCD/transition/190.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/SCCD/SCCD.defaultIcons/BasicStateIcon/187.instance--/Formalisms/SCCD/SCCD.defaultIcons/transitionLink/190.instance": "M1170,457L1170,481",
						"/Formalisms/SCCD/SCCD.defaultIcons/transitionLink/190.instance--/Formalisms/SCCD/SCCD.defaultIcons/BasicStateIcon/177.instance": "M1170,481L1172,537"
					}
				},
				"$type": "/Formalisms/SCCD/SCCD.defaultIcons/transitionLink"
			},
			"191": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 1
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "transitionLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1204.6571694616423,
						373.75708410553943
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"16": {
								"textContent": {
									"type": "string",
									"value": "leaveStation"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 0.75,
										"font-size": "13px",
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": "({'textContent':getAttr('display')})"
								},
								"parser": {
									"type": "code",
									"value": "({'display':getAttr('textContent')})"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-17.508537913443888,0%",
										"0;-1.3345796792298756,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-65.63754698468762"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 0.44785276073619634,
										"yoffset": -16.5
									}
								}
							},
							"281": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-25.340828257279327,-38.96399908366933%",
										"0;-51.198027285414184,-92.09672510685608%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-112.9321004375895"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/SCCD/SCCD/transition/191.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/SCCD/SCCD.defaultIcons/BasicStateIcon/187.instance--/Formalisms/SCCD/SCCD.defaultIcons/transitionLink/191.instance": "M1181,426L1204.6571694616428,373.75708410553943",
						"/Formalisms/SCCD/SCCD.defaultIcons/transitionLink/191.instance--/Formalisms/SCCD/SCCD.defaultIcons/BasicStateIcon/158.instance": "M1204.6571694616428,373.75708410553943L1205,373L1183.0002102086373,321.00049685677845"
					}
				},
				"$type": "/Formalisms/SCCD/SCCD.defaultIcons/transitionLink"
			},
			"208": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#ffff00",
						"stroke-dasharray": "",
						"stroke-opacity": 0.75,
						"stroke-width": 1
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "containOCLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						669.7084669606252,
						334.09260895769694
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/SCCD/SCCD/containOC/208.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/SCCD/SCCD.defaultIcons/CompositeStateIcon/128.instance--/Formalisms/SCCD/SCCD.defaultIcons/containOCLink/208.instance": "M121.6162459258521,193.00000000000003L669.7084669606252,334.09260895769694",
						"/Formalisms/SCCD/SCCD.defaultIcons/containOCLink/208.instance--/Formalisms/SCCD/SCCD.defaultIcons/OrthogonalComponentIcon/154.instance": "M669.6356021984207,334.07385175041327L1210.5093576429585,503.11022221591725"
					}
				},
				"$type": "/Formalisms/SCCD/SCCD.defaultIcons/containOCLink"
			},
			"302": {
				"typename": {
					"type": "string",
					"value": "HistoryStateIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1565,
						1257
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"28": {
								"r": {
									"type": "double",
									"value": 25
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "blue",
										"stroke-dasharray": "",
										"fill": "blue",
										"fill-opacity": 0.75,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										1.9480458933757916,
										3
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										0.30351398,
										0.30351398
									]
								}
							},
							"31": {
								"textContent": {
									"type": "string",
									"value": "H*"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 0.75,
										"font-size": "13px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "if (getAttr('type') == \"deep\") {\n    ({'textContent':getAttr('name')+\"*\"})\n}\nelse {\n    ({'textContent':getAttr('name')})\n}"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										11,
										18
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/SCCD/SCCD/HistoryState/301.instance"
				},
				"$type": "/Formalisms/SCCD/SCCD.defaultIcons/HistoryStateIcon"
			},
			"303": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#ffff00",
						"stroke-dasharray": "",
						"stroke-opacity": 0.75,
						"stroke-width": 1
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "includesLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						841.2634767212903,
						694.095469082794
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/SCCD/SCCD/includes/302.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/SCCD/SCCD.defaultIcons/CompositeStateIcon/128.instance--/Formalisms/SCCD/SCCD.defaultIcons/includesLink/303.instance": "M117.29544418613159,144.00000000000003L841.2634767212903,694.095469082794",
						"/Formalisms/SCCD/SCCD.defaultIcons/includesLink/303.instance--/Formalisms/SCCD/SCCD.defaultIcons/HistoryStateIcon/302.instance": "M841.2054266392406,694.0475920503643L1589.9993954620613,1281.9995014049684"
					}
				},
				"$type": "/Formalisms/SCCD/SCCD.defaultIcons/includesLink"
			},
			"304": {
				"typename": {
					"type": "string",
					"value": "BasicStateIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1846,
						1185
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": ""
				},
				"parser": {
					"type": "code",
					"value": ""
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"4": {
								"r": {
									"type": "double",
									"value": 20
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#20B2AA",
										"fill": "#E6E6FA",
										"fill-opacity": 0.75,
										"stroke-width": 2
									}
								},
								"mapper": {
									"type": "code",
									"value": "var style = { \"stroke\": \"#20B2AA\",\n\t\t    \"fill\": \"#E6E6FA\",\n\t\t    \"fill-opacity\": 0.75,\n   \t\t    \"stroke-width\": 2};\n\nif( getAttr('isStart') )\n\tstyle['stroke-width'] = 4;\n\nif( getAttr('isCurrent') )\n\tstyle['fill'] = 'green';\n\n({'style' : style})"
								},
								"parser": {
									"type": "code",
									"value": ""
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										3,
										3
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"5": {
								"textContent": {
									"type": "string",
									"value": "paused"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 0.75,
										"font-size": "13px",
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": "({'textContent':getAttr('name')})"
								},
								"parser": {
									"type": "code",
									"value": "({'name':getAttr('textContent')})"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										2,
										44
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"6": {
								"distance": {
									"type": "double",
									"value": 10
								},
								"alignment": {
									"type": "ENUM(\"right\",\"left\",\"center\")",
									"value": "\"center\""
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Below",
								"position": {
									"type": "list<double>",
									"value": [
										32.99899850809555,
										45.99899850809561
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ff00",
										"stroke-dasharray": "",
										"stroke-opacity": 1,
										"arrow-start": "none",
										"arrow-end": "classic-wide-long"
									}
								}
							}
						},
						"edges": [
							{
								"src": "5",
								"dest": "6"
							},
							{
								"src": "6",
								"dest": "4"
							}
						]
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/SCCD/SCCD/BasicState/303.instance"
				},
				"$type": "/Formalisms/SCCD/SCCD.defaultIcons/BasicStateIcon"
			},
			"305": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#ffff00",
						"stroke-dasharray": "",
						"stroke-opacity": 0.75,
						"stroke-width": 1
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "containLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						911.0143348042182,
						691.5792439021876
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/SCCD/SCCD/contain/304.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/SCCD/SCCD.defaultIcons/CompositeStateIcon/0.instance--/Formalisms/SCCD/SCCD.defaultIcons/containLink/305.instance": "M40.2738560272,150.00000000000003L911.0143348042182,691.5792439021876",
						"/Formalisms/SCCD/SCCD.defaultIcons/containLink/305.instance--/Formalisms/SCCD/SCCD.defaultIcons/BasicStateIcon/304.instance": "M911.0140862056039,691.5790892799405L1866.49920469139,1212.9995053375303"
					}
				},
				"$type": "/Formalisms/SCCD/SCCD.defaultIcons/containLink"
			},
			"306": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 1
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "transitionLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1765.6158535564336,
						1124.596341378508
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"16": {
								"textContent": {
									"type": "string",
									"value": "pause"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 0.75,
										"font-size": "13px",
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": "({'textContent':getAttr('display')})"
								},
								"parser": {
									"type": "code",
									"value": "({'display':getAttr('textContent')})"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										"0;4.003974975066512,0%",
										"0;-18.003469672560414,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;38.491043559497435"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 0.44785276073619634,
										"yoffset": -16.5
									}
								}
							},
							"281": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;94.72152995344959,81.13691765481995%",
										"0;63.1575559834082,58.453405319749905%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;35.77007982434318"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/SCCD/SCCD/transition/305.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/SCCD/SCCD.defaultIcons/CompositeStateIcon/128.instance--/Formalisms/SCCD/SCCD.defaultIcons/transitionLink/306.instance": "M1682,1058L1765,1124",
						"/Formalisms/SCCD/SCCD.defaultIcons/transitionLink/306.instance--/Formalisms/SCCD/SCCD.defaultIcons/BasicStateIcon/304.instance": "M1765,1124L1857.9992472970932,1190.999374068109"
					}
				},
				"$type": "/Formalisms/SCCD/SCCD.defaultIcons/transitionLink"
			},
			"307": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 1
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "transitionLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1740.8787879200122,
						1247.0893939089908
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"16": {
								"textContent": {
									"type": "string",
									"value": "continue"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 0.75,
										"font-size": "13px",
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": "({'textContent':getAttr('display')})"
								},
								"parser": {
									"type": "code",
									"value": "({'display':getAttr('textContent')})"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										"0;9.64414184558791,0%",
										"0;14.162967884645013,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;164.91364599153488"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 0.44785276073619634,
										"yoffset": -16.5
									}
								}
							},
							"281": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-127.85141457192913,-96.6485559589982%",
										"0;37.77618738495903,25.67209829835481%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;165.12441456122397"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/SCCD/SCCD/transition/306.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/SCCD/SCCD.defaultIcons/BasicStateIcon/304.instance--/Formalisms/SCCD/SCCD.defaultIcons/transitionLink/307.instance": "M1855,1216L1740,1247",
						"/Formalisms/SCCD/SCCD.defaultIcons/transitionLink/307.instance--/Formalisms/SCCD/SCCD.defaultIcons/HistoryStateIcon/302.instance": "M1740,1247L1612.0004894161489,1280.99963905559"
					}
				},
				"$type": "/Formalisms/SCCD/SCCD.defaultIcons/transitionLink"
			},
			"314": {
				"typename": {
					"type": "string",
					"value": "CompositeStateIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						219,
						215
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1.4128375336738352,
						1.0598444045481747
					]
				},
				"mapper": {
					"type": "code",
					"value": ""
				},
				"parser": {
					"type": "code",
					"value": ""
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"10": {
								"width": {
									"type": "double",
									"value": 400
								},
								"height": {
									"type": "double",
									"value": 400
								},
								"cornerRadius": {
									"type": "double",
									"value": 20
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "green",
										"fill": "#ffffff",
										"fill-opacity": 0.01,
										"stroke-width": 2
									}
								},
								"mapper": {
									"type": "code",
									"value": "var style = { \"stroke\": \"blue\",\n\t\t    \"fill\": \"#ffffff\",\n\t\t    \"fill-opacity\": 0.01,\n   \t\t    \"stroke-width\": 2};\n\nif( getAttr('isStart') )\n\tstyle['stroke'] = 'green';\n\n({'style' : style})"
								},
								"parser": {
									"type": "code",
									"value": ""
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Rectangle",
								"position": {
									"type": "list<double>",
									"value": [
										2,
										0
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"11": {
								"textContent": {
									"type": "string",
									"value": "Accelerator"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 0.75,
										"font-size": "13px",
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": "({'textContent':getAttr('name')})"
								},
								"parser": {
									"type": "code",
									"value": "({'name':getAttr('textContent')})"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										11,
										404
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"12": {
								"distance": {
									"type": "double",
									"value": 10
								},
								"alignment": {
									"type": "ENUM(\"right\",\"left\",\"center\")",
									"value": "\"center\""
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Below",
								"position": {
									"type": "list<double>",
									"value": [
										77.06940657361247,
										379.3658354276615
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ff00",
										"stroke-dasharray": "",
										"stroke-opacity": 1,
										"arrow-start": "none",
										"arrow-end": "classic-wide-long"
									}
								}
							}
						},
						"edges": [
							{
								"src": "11",
								"dest": "12"
							},
							{
								"src": "12",
								"dest": "10"
							}
						]
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/SCCD/SCCD/CompositeState/313.instance"
				},
				"$type": "/Formalisms/SCCD/SCCD.defaultIcons/CompositeStateIcon"
			},
			"315": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#ffff00",
						"stroke-dasharray": "",
						"stroke-opacity": 0.75,
						"stroke-width": 1
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "containLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						286.8831472070809,
						279.03931073448945
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/SCCD/SCCD/contain/314.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/SCCD/SCCD.defaultIcons/CompositeStateIcon/120.instance--/Formalisms/SCCD/SCCD.defaultIcons/containLink/315.instance": "M168.54530874999998,170L286.8831472070809,279.0393107344895",
						"/Formalisms/SCCD/SCCD.defaultIcons/containLink/315.instance--/Formalisms/SCCD/SCCD.defaultIcons/CompositeStateIcon/314.instance": "M286.8276942677372,278.98821507174046L418.9993807999804,448.87442945431303"
					}
				},
				"$type": "/Formalisms/SCCD/SCCD.defaultIcons/containLink"
			},
			"316": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#ffff00",
						"stroke-dasharray": "",
						"stroke-opacity": 0.75,
						"stroke-width": 1
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "containLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						382,
						273.7916669845581
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/SCCD/SCCD/contain/315.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/SCCD/SCCD.defaultIcons/CompositeStateIcon/314.instance--/Formalisms/SCCD/SCCD.defaultIcons/containLink/316.instance": "M221,240.00000000000003L382,273.7916669845581",
						"/Formalisms/SCCD/SCCD.defaultIcons/containLink/316.instance--/Formalisms/SCCD/SCCD.defaultIcons/BasicStateIcon/144.instance": "M382.07313651719755,273.8070173251392L551.9991972806151,283.5831654894507"
					}
				},
				"$type": "/Formalisms/SCCD/SCCD.defaultIcons/containLink"
			},
			"317": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#ffff00",
						"stroke-dasharray": "",
						"stroke-opacity": 0.75,
						"stroke-width": 1
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "containLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						260.8125,
						273.5
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/SCCD/SCCD/contain/316.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/SCCD/SCCD.defaultIcons/CompositeStateIcon/314.instance--/Formalisms/SCCD/SCCD.defaultIcons/containLink/317.instance": "M221,240.00000000000003L260.8125,273.5",
						"/Formalisms/SCCD/SCCD.defaultIcons/containLink/317.instance--/Formalisms/SCCD/SCCD.defaultIcons/BasicStateIcon/125.instance": "M260.8698114307226,273.54822437498797L304.62477928820726,326.9998142833267"
					}
				},
				"$type": "/Formalisms/SCCD/SCCD.defaultIcons/containLink"
			},
			"318": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#ffff00",
						"stroke-dasharray": "",
						"stroke-opacity": 0.75,
						"stroke-width": 1
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "containLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						301.0625,
						356.7916669845581
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/SCCD/SCCD/contain/317.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/SCCD/SCCD.defaultIcons/CompositeStateIcon/314.instance--/Formalisms/SCCD/SCCD.defaultIcons/containLink/318.instance": "M221,240.00000000000003L301.0625,356.7916669845581",
						"/Formalisms/SCCD/SCCD.defaultIcons/containLink/318.instance--/Formalisms/SCCD/SCCD.defaultIcons/BasicStateIcon/149.instance": "M301.10475601187864,356.8533082031987L267.1244605601753,514.5825470579362"
					}
				},
				"$type": "/Formalisms/SCCD/SCCD.defaultIcons/containLink"
			},
			"319": {
				"typename": {
					"type": "string",
					"value": "BasicStateIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						813,
						239
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": ""
				},
				"parser": {
					"type": "code",
					"value": ""
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"4": {
								"r": {
									"type": "double",
									"value": 20
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#20B2AA",
										"fill": "#E6E6FA",
										"fill-opacity": 0.75,
										"stroke-width": 2
									}
								},
								"mapper": {
									"type": "code",
									"value": "var style = { \"stroke\": \"#20B2AA\",\n\t\t    \"fill\": \"#E6E6FA\",\n\t\t    \"fill-opacity\": 0.75,\n   \t\t    \"stroke-width\": 2};\n\nif( getAttr('isStart') )\n\tstyle['stroke-width'] = 4;\n\nif( getAttr('isCurrent') )\n\tstyle['fill'] = 'green';\n\n({'style' : style})"
								},
								"parser": {
									"type": "code",
									"value": ""
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										3,
										3
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"5": {
								"textContent": {
									"type": "string",
									"value": "emergency"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 0.75,
										"font-size": "13px",
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": "({'textContent':getAttr('name')})"
								},
								"parser": {
									"type": "code",
									"value": "({'name':getAttr('textContent')})"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										2,
										44
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"6": {
								"distance": {
									"type": "double",
									"value": 10
								},
								"alignment": {
									"type": "ENUM(\"right\",\"left\",\"center\")",
									"value": "\"center\""
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Below",
								"position": {
									"type": "list<double>",
									"value": [
										32.99899850809555,
										45.99899850809561
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ff00",
										"stroke-dasharray": "",
										"stroke-opacity": 1,
										"arrow-start": "none",
										"arrow-end": "classic-wide-long"
									}
								}
							}
						},
						"edges": [
							{
								"src": "5",
								"dest": "6"
							},
							{
								"src": "6",
								"dest": "4"
							}
						]
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/SCCD/SCCD/BasicState/318.instance"
				},
				"$type": "/Formalisms/SCCD/SCCD.defaultIcons/BasicStateIcon"
			},
			"320": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#ffff00",
						"stroke-dasharray": "",
						"stroke-opacity": 0.75,
						"stroke-width": 1
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "containLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						462.71123282785885,
						325.7577349602884
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/SCCD/SCCD/contain/319.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/SCCD/SCCD.defaultIcons/CompositeStateIcon/120.instance--/Formalisms/SCCD/SCCD.defaultIcons/containLink/320.instance": "M168.65727345625,170L462.71123282785885,325.7577349602884",
						"/Formalisms/SCCD/SCCD.defaultIcons/containLink/320.instance--/Formalisms/SCCD/SCCD.defaultIcons/BasicStateIcon/319.instance": "M462.71099355671583,325.757608220518L833.4993621994233,266.37466216277653"
					}
				},
				"$type": "/Formalisms/SCCD/SCCD.defaultIcons/containLink"
			},
			"323": {
				"typename": {
					"type": "string",
					"value": "CompositeStateIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						215,
						853
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": ""
				},
				"parser": {
					"type": "code",
					"value": ""
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"10": {
								"width": {
									"type": "double",
									"value": 400
								},
								"height": {
									"type": "double",
									"value": 400
								},
								"cornerRadius": {
									"type": "double",
									"value": 20
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "green",
										"fill": "#ffffff",
										"fill-opacity": 0.01,
										"stroke-width": 2
									}
								},
								"mapper": {
									"type": "code",
									"value": "var style = { \"stroke\": \"blue\",\n\t\t    \"fill\": \"#ffffff\",\n\t\t    \"fill-opacity\": 0.01,\n   \t\t    \"stroke-width\": 2};\n\nif( getAttr('isStart') )\n\tstyle['stroke'] = 'green';\n\n({'style' : style})"
								},
								"parser": {
									"type": "code",
									"value": ""
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Rectangle",
								"position": {
									"type": "list<double>",
									"value": [
										2,
										0
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"11": {
								"textContent": {
									"type": "string",
									"value": "emergency"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 0.75,
										"font-size": "13px",
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": "({'textContent':getAttr('name')})"
								},
								"parser": {
									"type": "code",
									"value": "({'name':getAttr('textContent')})"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										11,
										404
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"12": {
								"distance": {
									"type": "double",
									"value": 10
								},
								"alignment": {
									"type": "ENUM(\"right\",\"left\",\"center\")",
									"value": "\"center\""
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Below",
								"position": {
									"type": "list<double>",
									"value": [
										77.06940657361247,
										379.3658354276615
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ff00",
										"stroke-dasharray": "",
										"stroke-opacity": 1,
										"arrow-start": "none",
										"arrow-end": "classic-wide-long"
									}
								}
							}
						},
						"edges": [
							{
								"src": "11",
								"dest": "12"
							},
							{
								"src": "12",
								"dest": "10"
							}
						]
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/SCCD/SCCD/CompositeState/322.instance"
				},
				"$type": "/Formalisms/SCCD/SCCD.defaultIcons/CompositeStateIcon"
			},
			"324": {
				"typename": {
					"type": "string",
					"value": "OrthogonalComponentIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						193,
						833
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1.466666666666667,
						2.111880046136102
					]
				},
				"mapper": {
					"type": "code",
					"value": ""
				},
				"parser": {
					"type": "code",
					"value": ""
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"18": {
								"textContent": {
									"type": "string",
									"value": "emergency"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 0.75,
										"font-size": "13px",
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": "({'textContent':getAttr('name')})"
								},
								"parser": {
									"type": "code",
									"value": "({'name':getAttr('textContent')})"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										9,
										203
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"20": {
								"width": {
									"type": "double",
									"value": 300
								},
								"height": {
									"type": "double",
									"value": 200
								},
								"cornerRadius": {
									"type": "double",
									"value": 20
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "gray",
										"fill": "#ffffff",
										"fill-opacity": 0.01,
										"stroke-width": 2,
										"stroke-dasharray": "- "
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": ""
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Rectangle",
								"position": {
									"type": "list<double>",
									"value": [
										2,
										0
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"21": {
								"distance": {
									"type": "double",
									"value": 10
								},
								"alignment": {
									"type": "ENUM(\"right\",\"left\",\"center\")",
									"value": "\"center\""
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Below",
								"position": {
									"type": "list<double>",
									"value": [
										77.06940657361247,
										379.3658354276615
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ff00",
										"stroke-dasharray": "",
										"stroke-opacity": 1,
										"arrow-start": "none",
										"arrow-end": "classic-wide-long"
									}
								}
							}
						},
						"edges": [
							{
								"src": "18",
								"dest": "21"
							},
							{
								"src": "21",
								"dest": "20"
							}
						]
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/SCCD/SCCD/OrthogonalComponent/323.instance"
				},
				"$type": "/Formalisms/SCCD/SCCD.defaultIcons/OrthogonalComponentIcon"
			},
			"325": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#ffff00",
						"stroke-dasharray": "",
						"stroke-opacity": 0.75,
						"stroke-width": 1
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "ocContainLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						346,
						971.4375
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/SCCD/SCCD/ocContain/324.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/SCCD/SCCD.defaultIcons/OrthogonalComponentIcon/324.instance--/Formalisms/SCCD/SCCD.defaultIcons/ocContainLink/325.instance": "M277.0000000000001,881L346,971.4375",
						"/Formalisms/SCCD/SCCD.defaultIcons/ocContainLink/325.instance--/Formalisms/SCCD/SCCD.defaultIcons/CompositeStateIcon/323.instance": "M346.0910287176263,971.5568102847872L414.99967881633404,1061.8745790282928"
					}
				},
				"$type": "/Formalisms/SCCD/SCCD.defaultIcons/ocContainLink"
			},
			"326": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#ffff00",
						"stroke-dasharray": "",
						"stroke-opacity": 0.75,
						"stroke-width": 1
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "containOCLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						340.21115253193636,
						575.2056137626863
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/SCCD/SCCD/containOC/325.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/SCCD/SCCD.defaultIcons/CompositeStateIcon/128.instance--/Formalisms/SCCD/SCCD.defaultIcons/containOCLink/326.instance": "M117.29544418613139,97L340.21115253193636,575.2056137626863",
						"/Formalisms/SCCD/SCCD.defaultIcons/containOCLink/326.instance--/Formalisms/SCCD/SCCD.defaultIcons/OrthogonalComponentIcon/324.instance": "M340.1793470417632,575.1373836497787L412.9996991917485,1062.1384363768775"
					}
				},
				"$type": "/Formalisms/SCCD/SCCD.defaultIcons/containOCLink"
			},
			"327": {
				"typename": {
					"type": "string",
					"value": "BasicStateIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						273,
						947
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": ""
				},
				"parser": {
					"type": "code",
					"value": ""
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"4": {
								"r": {
									"type": "double",
									"value": 20
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#20B2AA",
										"fill": "#E6E6FA",
										"fill-opacity": 0.75,
										"stroke-width": 4
									}
								},
								"mapper": {
									"type": "code",
									"value": "var style = { \"stroke\": \"#20B2AA\",\n\t\t    \"fill\": \"#E6E6FA\",\n\t\t    \"fill-opacity\": 0.75,\n   \t\t    \"stroke-width\": 2};\n\nif( getAttr('isStart') )\n\tstyle['stroke-width'] = 4;\n\nif( getAttr('isCurrent') )\n\tstyle['fill'] = 'green';\n\n({'style' : style})"
								},
								"parser": {
									"type": "code",
									"value": ""
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										3,
										3
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"5": {
								"textContent": {
									"type": "string",
									"value": "v"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 0.75,
										"font-size": "13px",
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": "({'textContent':getAttr('name')})"
								},
								"parser": {
									"type": "code",
									"value": "({'name':getAttr('textContent')})"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										2,
										44
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"6": {
								"distance": {
									"type": "double",
									"value": 10
								},
								"alignment": {
									"type": "ENUM(\"right\",\"left\",\"center\")",
									"value": "\"center\""
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Below",
								"position": {
									"type": "list<double>",
									"value": [
										32.99899850809555,
										45.99899850809561
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ff00",
										"stroke-dasharray": "",
										"stroke-opacity": 1,
										"arrow-start": "none",
										"arrow-end": "classic-wide-long"
									}
								}
							}
						},
						"edges": [
							{
								"src": "5",
								"dest": "6"
							},
							{
								"src": "6",
								"dest": "4"
							}
						]
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/SCCD/SCCD/BasicState/326.instance"
				},
				"$type": "/Formalisms/SCCD/SCCD.defaultIcons/BasicStateIcon"
			},
			"328": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#ffff00",
						"stroke-dasharray": "",
						"stroke-opacity": 0.75,
						"stroke-width": 1
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "containLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						256.30528167389434,
						952.3272006631693
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/SCCD/SCCD/contain/327.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/SCCD/SCCD.defaultIcons/CompositeStateIcon/323.instance--/Formalisms/SCCD/SCCD.defaultIcons/containLink/328.instance": "M217.00000000000003,853L256.30528167389434,952.3272006631693",
						"/Formalisms/SCCD/SCCD.defaultIcons/containLink/328.instance--/Formalisms/SCCD/SCCD.defaultIcons/BasicStateIcon/327.instance": "M256.30517785860513,952.3269383146596L293.49979249921125,974.3744756309684"
					}
				},
				"$type": "/Formalisms/SCCD/SCCD.defaultIcons/containLink"
			},
			"329": {
				"typename": {
					"type": "string",
					"value": "BasicStateIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						501,
						1070
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": ""
				},
				"parser": {
					"type": "code",
					"value": ""
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"4": {
								"r": {
									"type": "double",
									"value": 20
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#20B2AA",
										"fill": "#E6E6FA",
										"fill-opacity": 0.75,
										"stroke-width": 2
									}
								},
								"mapper": {
									"type": "code",
									"value": "var style = { \"stroke\": \"#20B2AA\",\n\t\t    \"fill\": \"#E6E6FA\",\n\t\t    \"fill-opacity\": 0.75,\n   \t\t    \"stroke-width\": 2};\n\nif( getAttr('isStart') )\n\tstyle['stroke-width'] = 4;\n\nif( getAttr('isCurrent') )\n\tstyle['fill'] = 'green';\n\n({'style' : style})"
								},
								"parser": {
									"type": "code",
									"value": ""
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										3,
										3
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"5": {
								"textContent": {
									"type": "string",
									"value": "SlowDown"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 0.75,
										"font-size": "13px",
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": "({'textContent':getAttr('name')})"
								},
								"parser": {
									"type": "code",
									"value": "({'name':getAttr('textContent')})"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										2,
										44
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"6": {
								"distance": {
									"type": "double",
									"value": 10
								},
								"alignment": {
									"type": "ENUM(\"right\",\"left\",\"center\")",
									"value": "\"center\""
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Below",
								"position": {
									"type": "list<double>",
									"value": [
										32.99899850809555,
										45.99899850809561
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ff00",
										"stroke-dasharray": "",
										"stroke-opacity": 1,
										"arrow-start": "none",
										"arrow-end": "classic-wide-long"
									}
								}
							}
						},
						"edges": [
							{
								"src": "5",
								"dest": "6"
							},
							{
								"src": "6",
								"dest": "4"
							}
						]
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/SCCD/SCCD/BasicState/328.instance"
				},
				"$type": "/Formalisms/SCCD/SCCD.defaultIcons/BasicStateIcon"
			},
			"330": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#ffff00",
						"stroke-dasharray": "",
						"stroke-opacity": 0.75,
						"stroke-width": 1
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "containLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						367.37626049099265,
						950.2691701595231
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/SCCD/SCCD/contain/329.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/SCCD/SCCD.defaultIcons/CompositeStateIcon/323.instance--/Formalisms/SCCD/SCCD.defaultIcons/containLink/330.instance": "M217.00000000000003,853L367.37626049099265,950.2691701595231",
						"/Formalisms/SCCD/SCCD.defaultIcons/containLink/330.instance--/Formalisms/SCCD/SCCD.defaultIcons/BasicStateIcon/329.instance": "M367.3129180479383,950.2281978221896L521.4993637490586,1097.3745884483303"
					}
				},
				"$type": "/Formalisms/SCCD/SCCD.defaultIcons/containLink"
			},
			"331": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 1
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "transitionLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						449.5657870370371,
						1082.5376227709191
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"16": {
								"textContent": {
									"type": "string",
									"value": "redLight"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 0.75,
										"font-size": "13px",
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": "({'textContent':getAttr('display')})"
								},
								"parser": {
									"type": "code",
									"value": "({'display':getAttr('textContent')})"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-104.68361141629009,0%",
										"0;-18.48529502352062,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;0.795723552739274"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 0.44785276073619634,
										"yoffset": -16.5
									}
								}
							},
							"281": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;55.42093008550262,96.90971739229421%",
										"0;9.585988533389127,24.667928063493072%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;14.281095735970823"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/SCCD/SCCD/transition/330.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/SCCD/SCCD.defaultIcons/BasicStateIcon/327.instance--/Formalisms/SCCD/SCCD.defaultIcons/transitionLink/331.instance": "M303,989L305,1080L449,1082",
						"/Formalisms/SCCD/SCCD.defaultIcons/transitionLink/331.instance--/Formalisms/SCCD/SCCD.defaultIcons/BasicStateIcon/329.instance": "M449,1082L504,1096"
					}
				},
				"$type": "/Formalisms/SCCD/SCCD.defaultIcons/transitionLink"
			},
			"333": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 1
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "transitionLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						800,
						321
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"16": {
								"textContent": {
									"type": "string",
									"value": "emergencyBrake"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 0.75,
										"font-size": "13px",
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": "({'textContent':getAttr('display')})"
								},
								"parser": {
									"type": "code",
									"value": "({'display':getAttr('textContent')})"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-18.32925702616774,0%",
										"0;-15.614958138387635,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-2.827124578161273"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 0.44785276073619634,
										"yoffset": -16.5
									}
								}
							},
							"281": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;24.44812693952406,46.03063773357191%",
										"0;-55.84122550934285,-88.77601246868811%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-62.59312076190688"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/SCCD/SCCD/transition/332.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/SCCD/SCCD.defaultIcons/CompositeStateIcon/314.instance--/Formalisms/SCCD/SCCD.defaultIcons/transitionLink/333.instance": "M719,325L800,321",
						"/Formalisms/SCCD/SCCD.defaultIcons/transitionLink/333.instance--/Formalisms/SCCD/SCCD.defaultIcons/BasicStateIcon/319.instance": "M800,321L827.9991674382716,267"
					}
				},
				"$type": "/Formalisms/SCCD/SCCD.defaultIcons/transitionLink"
			},
			"338": {
				"typename": {
					"type": "string",
					"value": "BasicStateIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						493,
						933
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": ""
				},
				"parser": {
					"type": "code",
					"value": ""
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"4": {
								"r": {
									"type": "double",
									"value": 20
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#20B2AA",
										"fill": "#E6E6FA",
										"fill-opacity": 0.75,
										"stroke-width": 2
									}
								},
								"mapper": {
									"type": "code",
									"value": "var style = { \"stroke\": \"#20B2AA\",\n\t\t    \"fill\": \"#E6E6FA\",\n\t\t    \"fill-opacity\": 0.75,\n   \t\t    \"stroke-width\": 2};\n\nif( getAttr('isStart') )\n\tstyle['stroke-width'] = 4;\n\nif( getAttr('isCurrent') )\n\tstyle['fill'] = 'green';\n\n({'style' : style})"
								},
								"parser": {
									"type": "code",
									"value": ""
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										3,
										3
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"5": {
								"textContent": {
									"type": "string",
									"value": "inCooldown"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 0.75,
										"font-size": "13px",
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": "({'textContent':getAttr('name')})"
								},
								"parser": {
									"type": "code",
									"value": "({'name':getAttr('textContent')})"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										2,
										44
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"6": {
								"distance": {
									"type": "double",
									"value": 10
								},
								"alignment": {
									"type": "ENUM(\"right\",\"left\",\"center\")",
									"value": "\"center\""
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Below",
								"position": {
									"type": "list<double>",
									"value": [
										32.99899850809555,
										45.99899850809561
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ff00",
										"stroke-dasharray": "",
										"stroke-opacity": 1,
										"arrow-start": "none",
										"arrow-end": "classic-wide-long"
									}
								}
							}
						},
						"edges": [
							{
								"src": "5",
								"dest": "6"
							},
							{
								"src": "6",
								"dest": "4"
							}
						]
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/SCCD/SCCD/BasicState/337.instance"
				},
				"$type": "/Formalisms/SCCD/SCCD.defaultIcons/BasicStateIcon"
			},
			"339": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#ffff00",
						"stroke-dasharray": "",
						"stroke-opacity": 0.75,
						"stroke-width": 1
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "containLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						372.017087138246,
						906.7367545810142
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/SCCD/SCCD/contain/338.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/SCCD/SCCD.defaultIcons/CompositeStateIcon/323.instance--/Formalisms/SCCD/SCCD.defaultIcons/containLink/339.instance": "M217.00000000000003,853L372.017087138246,906.7367545810142",
						"/Formalisms/SCCD/SCCD.defaultIcons/containLink/339.instance--/Formalisms/SCCD/SCCD.defaultIcons/BasicStateIcon/338.instance": "M371.9457828654133,906.7120369174294L526.7492183472339,960.3747290396585"
					}
				},
				"$type": "/Formalisms/SCCD/SCCD.defaultIcons/containLink"
			},
			"340": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 1
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "transitionLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						525.9951219555186,
						1023.3500001321964
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"16": {
								"textContent": {
									"type": "string",
									"value": "goCd"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 0.75,
										"font-size": "13px",
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": "({'textContent':getAttr('display')})"
								},
								"parser": {
									"type": "code",
									"value": "({'display':getAttr('textContent')})"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-16.362919599797124,0%",
										"0;7.073078777419369,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-91.13657884918045"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 0.44785276073619634,
										"yoffset": -16.5
									}
								}
							},
							"281": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-5.991575854494613,-4.209827294511288%",
										"0;-47.181607040416,-99.91134747440046%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-92.41276639947604"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/SCCD/SCCD/transition/339.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/SCCD/SCCD.defaultIcons/BasicStateIcon/329.instance--/Formalisms/SCCD/SCCD.defaultIcons/transitionLink/340.instance": "M527,1074L525.9951219555187,1023.3500001321964",
						"/Formalisms/SCCD/SCCD.defaultIcons/transitionLink/340.instance--/Formalisms/SCCD/SCCD.defaultIcons/BasicStateIcon/338.instance": "M525.9951378190501,1023.3504879357889L524,976"
					}
				},
				"$type": "/Formalisms/SCCD/SCCD.defaultIcons/transitionLink"
			},
			"342": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 1
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "transitionLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						405.5,
						959
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"16": {
								"textContent": {
									"type": "string",
									"value": "resumeNormal"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 0.75,
										"font-size": "13px",
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": "({'textContent':getAttr('display')})"
								},
								"parser": {
									"type": "code",
									"value": "({'display':getAttr('textContent')})"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										"0;9.441540580552385,0%",
										"0;16.287777957849016,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;178.75463573323165"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 0.44785276073619634,
										"yoffset": -16.5
									}
								}
							},
							"281": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-92.36963450955119,-99.94687601077146%",
										"0;6.997875040430813,3.259137261220814%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;178.13232116056582"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/SCCD/SCCD/transition/341.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/SCCD/SCCD.defaultIcons/BasicStateIcon/338.instance--/Formalisms/SCCD/SCCD.defaultIcons/transitionLink/342.instance": "M497,957L405,959",
						"/Formalisms/SCCD/SCCD.defaultIcons/transitionLink/342.instance--/Formalisms/SCCD/SCCD.defaultIcons/BasicStateIcon/327.instance": "M405,959L313,962"
					}
				},
				"$type": "/Formalisms/SCCD/SCCD.defaultIcons/transitionLink"
			},
			"343": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 1
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "transitionLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						519.9020295857988,
						1164.7017279244424
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"16": {
								"textContent": {
									"type": "string",
									"value": "CheckAcceleration"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 0.75,
										"font-size": "13px",
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": "({'textContent':getAttr('display')})"
								},
								"parser": {
									"type": "code",
									"value": "({'display':getAttr('textContent')})"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										"0;12.339208646883208,0%",
										"0;15.389638024649685,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;174.50767544287268"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 0.44785276073619634,
										"yoffset": -16.5
									}
								}
							},
							"281": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-8.65908928096178,34.3192952923539%",
										"0;-51.07449973613643,-93.92649237907384%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-69.92847413546127"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/SCCD/SCCD/transition/342.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/SCCD/SCCD.defaultIcons/BasicStateIcon/329.instance--/Formalisms/SCCD/SCCD.defaultIcons/transitionLink/343.instance": "M539,1107L548,1162L519.9020295857988,1164.7017279244424",
						"/Formalisms/SCCD/SCCD.defaultIcons/transitionLink/343.instance--/Formalisms/SCCD/SCCD.defaultIcons/BasicStateIcon/329.instance": "M519.9020295857988,1164.7017279244424L496,1167L515,1115"
					}
				},
				"$type": "/Formalisms/SCCD/SCCD.defaultIcons/transitionLink"
			},
			"344": {
				"typename": {
					"type": "string",
					"value": "HistoryStateIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						679,
						235
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"28": {
								"r": {
									"type": "double",
									"value": 25
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "blue",
										"stroke-dasharray": "",
										"fill": "blue",
										"fill-opacity": 0.75,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										1.9480458933757916,
										3
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										0.30351398,
										0.30351398
									]
								}
							},
							"31": {
								"textContent": {
									"type": "string",
									"value": "BacktoSpeed"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 0.75,
										"font-size": "13px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "if (getAttr('type') == \"deep\") {\n    ({'textContent':getAttr('name')+\"*\"})\n}\nelse {\n    ({'textContent':getAttr('name')})\n}"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										11,
										18
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/SCCD/SCCD/HistoryState/343.instance"
				},
				"$type": "/Formalisms/SCCD/SCCD.defaultIcons/HistoryStateIcon"
			},
			"345": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#ffff00",
						"stroke-dasharray": "",
						"stroke-opacity": 0.75,
						"stroke-width": 1
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "includesLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						390.5,
						277
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/SCCD/SCCD/includes/344.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/SCCD/SCCD.defaultIcons/CompositeStateIcon/314.instance--/Formalisms/SCCD/SCCD.defaultIcons/includesLink/345.instance": "M220.99999999999997,240L390.5,277",
						"/Formalisms/SCCD/SCCD.defaultIcons/includesLink/345.instance--/Formalisms/SCCD/SCCD.defaultIcons/HistoryStateIcon/344.instance": "M390.5732278037823,277.0159848303242L703.9992358824845,259.99983320148635"
					}
				},
				"$type": "/Formalisms/SCCD/SCCD.defaultIcons/includesLink"
			},
			"347": {
				"typename": {
					"type": "string",
					"value": "BasicStateIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1540,
						465
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": ""
				},
				"parser": {
					"type": "code",
					"value": ""
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"4": {
								"r": {
									"type": "double",
									"value": 20
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#20B2AA",
										"fill": "#E6E6FA",
										"fill-opacity": 0.75,
										"stroke-width": 2
									}
								},
								"mapper": {
									"type": "code",
									"value": "var style = { \"stroke\": \"#20B2AA\",\n\t\t    \"fill\": \"#E6E6FA\",\n\t\t    \"fill-opacity\": 0.75,\n   \t\t    \"stroke-width\": 2};\n\nif( getAttr('isStart') )\n\tstyle['stroke-width'] = 4;\n\nif( getAttr('isCurrent') )\n\tstyle['fill'] = 'green';\n\n({'style' : style})"
								},
								"parser": {
									"type": "code",
									"value": ""
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										3,
										3
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"5": {
								"textContent": {
									"type": "string",
									"value": "dooremergency"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 0.75,
										"font-size": "13px",
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": "({'textContent':getAttr('name')})"
								},
								"parser": {
									"type": "code",
									"value": "({'name':getAttr('textContent')})"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										2,
										44
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"6": {
								"distance": {
									"type": "double",
									"value": 10
								},
								"alignment": {
									"type": "ENUM(\"right\",\"left\",\"center\")",
									"value": "\"center\""
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Below",
								"position": {
									"type": "list<double>",
									"value": [
										32.99899850809555,
										45.99899850809561
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ff00",
										"stroke-dasharray": "",
										"stroke-opacity": 1,
										"arrow-start": "none",
										"arrow-end": "classic-wide-long"
									}
								}
							}
						},
						"edges": [
							{
								"src": "5",
								"dest": "6"
							},
							{
								"src": "6",
								"dest": "4"
							}
						]
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/SCCD/SCCD/BasicState/346.instance"
				},
				"$type": "/Formalisms/SCCD/SCCD.defaultIcons/BasicStateIcon"
			},
			"355": {
				"typename": {
					"type": "string",
					"value": "CompositeStateIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						991.4556444444445,
						142
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1.815494222222222,
						1.5031393987336126
					]
				},
				"mapper": {
					"type": "code",
					"value": ""
				},
				"parser": {
					"type": "code",
					"value": ""
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"10": {
								"width": {
									"type": "double",
									"value": 400
								},
								"height": {
									"type": "double",
									"value": 400
								},
								"cornerRadius": {
									"type": "double",
									"value": 20
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "green",
										"fill": "#ffffff",
										"fill-opacity": 0.01,
										"stroke-width": 2
									}
								},
								"mapper": {
									"type": "code",
									"value": "var style = { \"stroke\": \"blue\",\n\t\t    \"fill\": \"#ffffff\",\n\t\t    \"fill-opacity\": 0.01,\n   \t\t    \"stroke-width\": 2};\n\nif( getAttr('isStart') )\n\tstyle['stroke'] = 'green';\n\n({'style' : style})"
								},
								"parser": {
									"type": "code",
									"value": ""
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Rectangle",
								"position": {
									"type": "list<double>",
									"value": [
										2,
										0
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"11": {
								"textContent": {
									"type": "string",
									"value": "Doors"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 0.75,
										"font-size": "13px",
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": "({'textContent':getAttr('name')})"
								},
								"parser": {
									"type": "code",
									"value": "({'name':getAttr('textContent')})"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										11,
										404
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"12": {
								"distance": {
									"type": "double",
									"value": 10
								},
								"alignment": {
									"type": "ENUM(\"right\",\"left\",\"center\")",
									"value": "\"center\""
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Below",
								"position": {
									"type": "list<double>",
									"value": [
										77.06940657361247,
										379.3658354276615
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ff00",
										"stroke-dasharray": "",
										"stroke-opacity": 1,
										"arrow-start": "none",
										"arrow-end": "classic-wide-long"
									}
								}
							}
						},
						"edges": [
							{
								"src": "11",
								"dest": "12"
							},
							{
								"src": "12",
								"dest": "10"
							}
						]
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/SCCD/SCCD/CompositeState/354.instance"
				},
				"$type": "/Formalisms/SCCD/SCCD.defaultIcons/CompositeStateIcon"
			},
			"358": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#ffff00",
						"stroke-dasharray": "",
						"stroke-opacity": 0.75,
						"stroke-width": 1
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "containLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1125.1422682254545,
						290.23848796204925
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/SCCD/SCCD/contain/357.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/SCCD/SCCD.defaultIcons/CompositeStateIcon/355.instance--/Formalisms/SCCD/SCCD.defaultIcons/containLink/358.instance": "M995.086632888889,142L1125.1422682254547,290.23848796204925",
						"/Formalisms/SCCD/SCCD.defaultIcons/containLink/358.instance--/Formalisms/SCCD/SCCD.defaultIcons/CompositeStateIcon/155.instance": "M1125.0926416501425,290.18192318138404L1254.9995481654614,438.2508888038524"
					}
				},
				"$type": "/Formalisms/SCCD/SCCD.defaultIcons/containLink"
			},
			"359": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#ffff00",
						"stroke-dasharray": "",
						"stroke-opacity": 0.75,
						"stroke-width": 1
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "ocContainLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1153.483609479244,
						302.1720248481269
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/SCCD/SCCD/ocContain/358.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/SCCD/SCCD.defaultIcons/OrthogonalComponentIcon/154.instance--/Formalisms/SCCD/SCCD.defaultIcons/ocContainLink/359.instance": "M966.4127300695993,145L1153.483609479244,302.17202484812697",
						"/Formalisms/SCCD/SCCD.defaultIcons/ocContainLink/359.instance--/Formalisms/SCCD/SCCD.defaultIcons/CompositeStateIcon/355.instance": "M1153.5983292694004,302.268409393738L1354.553735185631,456.3434164546312"
					}
				},
				"$type": "/Formalisms/SCCD/SCCD.defaultIcons/ocContainLink"
			},
			"360": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#ffff00",
						"stroke-dasharray": "",
						"stroke-opacity": 0.75,
						"stroke-width": 1
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "containLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1290.172306244094,
						317.26411260715884
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/SCCD/SCCD/contain/359.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/SCCD/SCCD.defaultIcons/CompositeStateIcon/355.instance--/Formalisms/SCCD/SCCD.defaultIcons/containLink/360.instance": "M995.086632888889,142L1290.172306244094,317.26411260715884",
						"/Formalisms/SCCD/SCCD.defaultIcons/containLink/360.instance--/Formalisms/SCCD/SCCD.defaultIcons/BasicStateIcon/347.instance": "M1290.1720806059734,317.26397859094396L1584.9993985321912,492.3746427623187"
					}
				},
				"$type": "/Formalisms/SCCD/SCCD.defaultIcons/containLink"
			},
			"361": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 1
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "transitionLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1492.1499998886165,
						491.9932835870768
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"16": {
								"textContent": {
									"type": "string",
									"value": "emergencyBrake"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 0.75,
										"font-size": "13px",
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": "({'textContent':getAttr('display')})"
								},
								"parser": {
									"type": "code",
									"value": "({'display':getAttr('textContent')})"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-15.493817367919291,0%",
										"0;-15.8227791335122,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-2.5637702114650622"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 0.44785276073619634,
										"yoffset": -16.5
									}
								}
							},
							"281": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;49.69018530619451,99.92015321008316%",
										"0;-5.99008971548011,-3.9953701297259823%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-2.2897879334270237"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/SCCD/SCCD/transition/360.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/SCCD/SCCD.defaultIcons/CompositeStateIcon/155.instance--/Formalisms/SCCD/SCCD.defaultIcons/transitionLink/361.instance": "M1425,495L1492.1499998886165,491.9932835870768",
						"/Formalisms/SCCD/SCCD.defaultIcons/transitionLink/361.instance--/Formalisms/SCCD/SCCD.defaultIcons/BasicStateIcon/347.instance": "M1492.1495521284169,491.993303636041L1542,490"
					}
				},
				"$type": "/Formalisms/SCCD/SCCD.defaultIcons/transitionLink"
			},
			"368": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 1
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "transitionLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1554.6106223297386,
						363.20638599368567
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"16": {
								"textContent": {
									"type": "string",
									"value": "resume"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 0.75,
										"font-size": "13px",
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": "({'textContent':getAttr('display')})"
								},
								"parser": {
									"type": "code",
									"value": "({'display':getAttr('textContent')})"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										"0;4.165206503556647,0%",
										"0;16.005096623665338,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;169.30778784471642"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 0.44785276073619634,
										"yoffset": -16.5
									}
								}
							},
							"281": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-135.86767469514007,-98.26380239286745%",
										"0;29.724012141473054,18.5533053469051%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;169.30778784471593"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/SCCD/SCCD/transition/367.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/SCCD/SCCD.defaultIcons/BasicStateIcon/347.instance--/Formalisms/SCCD/SCCD.defaultIcons/transitionLink/368.instance": "M1569,470L1561,362L1554.6106223297386,363.20638599368567",
						"/Formalisms/SCCD/SCCD.defaultIcons/transitionLink/368.instance--/Formalisms/SCCD/SCCD.defaultIcons/CompositeStateIcon/155.instance": "M1554.6274190090355,363.20321459269957L1418.0008154207223,388.99984603944404"
					}
				},
				"$type": "/Formalisms/SCCD/SCCD.defaultIcons/transitionLink"
			},
			"369": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 1
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "transitionLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						783.8953736831476,
						264.8921708367134
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"16": {
								"textContent": {
									"type": "string",
									"value": "resume"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 0.75,
										"font-size": "13px",
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": "({'textContent':getAttr('display')})"
								},
								"parser": {
									"type": "code",
									"value": "({'display':getAttr('textContent')})"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-6.498179039535785,0%",
										"0;15.534640592012664,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-179.23662192568756"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 0.44785276073619634,
										"yoffset": -16.5
									}
								}
							},
							"281": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-75.94799622249514,-99.99112440086674%",
										"0;2.1081643684407254,-1.3323066652962285%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-179.23662192568756"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/SCCD/SCCD/transition/368.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/SCCD/SCCD.defaultIcons/BasicStateIcon/319.instance--/Formalisms/SCCD/SCCD.defaultIcons/transitionLink/369.instance": "M834,261L783,264",
						"/Formalisms/SCCD/SCCD.defaultIcons/transitionLink/369.instance--/Formalisms/SCCD/SCCD.defaultIcons/HistoryStateIcon/344.instance": "M783,264L708.0006697272643,263.0006902291194"
					}
				},
				"$type": "/Formalisms/SCCD/SCCD.defaultIcons/transitionLink"
			},
			"371": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 1
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "transitionLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						337.24449798126943,
						1107.5450902965324
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"16": {
								"textContent": {
									"type": "string",
									"value": "BadYellow"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 0.75,
										"font-size": "13px",
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": "({'textContent':getAttr('display')})"
								},
								"parser": {
									"type": "code",
									"value": "({'display':getAttr('textContent')})"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-11.940058296045947,0%",
										"0;-16.65543878036715,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;0.7392593554077103"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 0.44785276073619634,
										"yoffset": -16.5
									}
								}
							},
							"281": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;168.25882800384306,99.22778767136678%",
										"0;-9.514134918820673,-12.403473458920695%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-7.1250163489017115"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/SCCD/SCCD/transition/370.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/SCCD/SCCD.defaultIcons/BasicStateIcon/327.instance--/Formalisms/SCCD/SCCD.defaultIcons/transitionLink/371.instance": "M294,990L295,1107L337.24449798126943,1107.5450902965324",
						"/Formalisms/SCCD/SCCD.defaultIcons/transitionLink/371.instance--/Formalisms/SCCD/SCCD.defaultIcons/BasicStateIcon/329.instance": "M337.24449798126943,1107.5450902965324L450,1109L505.9994649234693,1102.0000668845664"
					}
				},
				"$type": "/Formalisms/SCCD/SCCD.defaultIcons/transitionLink"
			},
			"372": {
				"typename": {
					"type": "string",
					"value": "CompositeStateIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						710,
						861
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": ""
				},
				"parser": {
					"type": "code",
					"value": ""
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"10": {
								"width": {
									"type": "double",
									"value": 400
								},
								"height": {
									"type": "double",
									"value": 400
								},
								"cornerRadius": {
									"type": "double",
									"value": 20
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "green",
										"fill": "#ffffff",
										"fill-opacity": 0.01,
										"stroke-width": 2
									}
								},
								"mapper": {
									"type": "code",
									"value": "var style = { \"stroke\": \"blue\",\n\t\t    \"fill\": \"#ffffff\",\n\t\t    \"fill-opacity\": 0.01,\n   \t\t    \"stroke-width\": 2};\n\nif( getAttr('isStart') )\n\tstyle['stroke'] = 'green';\n\n({'style' : style})"
								},
								"parser": {
									"type": "code",
									"value": ""
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Rectangle",
								"position": {
									"type": "list<double>",
									"value": [
										2,
										0
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"11": {
								"textContent": {
									"type": "string",
									"value": "deadmansButton"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 0.75,
										"font-size": "13px",
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": "({'textContent':getAttr('name')})"
								},
								"parser": {
									"type": "code",
									"value": "({'name':getAttr('textContent')})"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										11,
										404
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"12": {
								"distance": {
									"type": "double",
									"value": 10
								},
								"alignment": {
									"type": "ENUM(\"right\",\"left\",\"center\")",
									"value": "\"center\""
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Below",
								"position": {
									"type": "list<double>",
									"value": [
										77.06940657361247,
										379.3658354276615
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ff00",
										"stroke-dasharray": "",
										"stroke-opacity": 1,
										"arrow-start": "none",
										"arrow-end": "classic-wide-long"
									}
								}
							}
						},
						"edges": [
							{
								"src": "11",
								"dest": "12"
							},
							{
								"src": "12",
								"dest": "10"
							}
						]
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/SCCD/SCCD/CompositeState/371.instance"
				},
				"$type": "/Formalisms/SCCD/SCCD.defaultIcons/CompositeStateIcon"
			},
			"373": {
				"typename": {
					"type": "string",
					"value": "OrthogonalComponentIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						688,
						841
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1.4666666666666666,
						2.1118800461361014
					]
				},
				"mapper": {
					"type": "code",
					"value": ""
				},
				"parser": {
					"type": "code",
					"value": ""
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"18": {
								"textContent": {
									"type": "string",
									"value": "Deadman"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 0.75,
										"font-size": "13px",
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": "({'textContent':getAttr('name')})"
								},
								"parser": {
									"type": "code",
									"value": "({'name':getAttr('textContent')})"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										9,
										203
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"20": {
								"width": {
									"type": "double",
									"value": 300
								},
								"height": {
									"type": "double",
									"value": 200
								},
								"cornerRadius": {
									"type": "double",
									"value": 20
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "gray",
										"fill": "#ffffff",
										"fill-opacity": 0.01,
										"stroke-width": 2,
										"stroke-dasharray": "- "
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": ""
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Rectangle",
								"position": {
									"type": "list<double>",
									"value": [
										2,
										0
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"21": {
								"distance": {
									"type": "double",
									"value": 10
								},
								"alignment": {
									"type": "ENUM(\"right\",\"left\",\"center\")",
									"value": "\"center\""
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Below",
								"position": {
									"type": "list<double>",
									"value": [
										77.06940657361247,
										379.3658354276615
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ff00",
										"stroke-dasharray": "",
										"stroke-opacity": 1,
										"arrow-start": "none",
										"arrow-end": "classic-wide-long"
									}
								}
							}
						},
						"edges": [
							{
								"src": "18",
								"dest": "21"
							},
							{
								"src": "21",
								"dest": "20"
							}
						]
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/SCCD/SCCD/OrthogonalComponent/372.instance"
				},
				"$type": "/Formalisms/SCCD/SCCD.defaultIcons/OrthogonalComponentIcon"
			},
			"374": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#ffff00",
						"stroke-dasharray": "",
						"stroke-opacity": 0.75,
						"stroke-width": 1
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "ocContainLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						853,
						1019.4375
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/SCCD/SCCD/ocContain/373.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/SCCD/SCCD.defaultIcons/OrthogonalComponentIcon/373.instance--/Formalisms/SCCD/SCCD.defaultIcons/ocContainLink/374.instance": "M796,969L853,1019.4375",
						"/Formalisms/SCCD/SCCD.defaultIcons/ocContainLink/374.instance--/Formalisms/SCCD/SCCD.defaultIcons/CompositeStateIcon/372.instance": "M853.112203882956,1019.5367856727473L909.9994084141276,1069.8744765243432"
					}
				},
				"$type": "/Formalisms/SCCD/SCCD.defaultIcons/ocContainLink"
			},
			"375": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#ffff00",
						"stroke-dasharray": "",
						"stroke-opacity": 0.75,
						"stroke-width": 1
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "containOCLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						510.4957685033577,
						586.9178049051352
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/SCCD/SCCD/containOC/374.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/SCCD/SCCD.defaultIcons/CompositeStateIcon/128.instance--/Formalisms/SCCD/SCCD.defaultIcons/containOCLink/375.instance": "M117.80384071524814,97L510.4957685033577,586.9178049051352",
						"/Formalisms/SCCD/SCCD.defaultIcons/containOCLink/375.instance--/Formalisms/SCCD/SCCD.defaultIcons/OrthogonalComponentIcon/373.instance": "M510.4955890328032,586.9175809997939L907.999461759928,1070.6007706348933"
					}
				},
				"$type": "/Formalisms/SCCD/SCCD.defaultIcons/containOCLink"
			},
			"376": {
				"typename": {
					"type": "string",
					"value": "BasicStateIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						746,
						1039
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": ""
				},
				"parser": {
					"type": "code",
					"value": ""
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"4": {
								"r": {
									"type": "double",
									"value": 20
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#20B2AA",
										"fill": "#E6E6FA",
										"fill-opacity": 0.75,
										"stroke-width": 4
									}
								},
								"mapper": {
									"type": "code",
									"value": "var style = { \"stroke\": \"#20B2AA\",\n\t\t    \"fill\": \"#E6E6FA\",\n\t\t    \"fill-opacity\": 0.75,\n   \t\t    \"stroke-width\": 2};\n\nif( getAttr('isStart') )\n\tstyle['stroke-width'] = 4;\n\nif( getAttr('isCurrent') )\n\tstyle['fill'] = 'green';\n\n({'style' : style})"
								},
								"parser": {
									"type": "code",
									"value": ""
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										3,
										3
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"5": {
								"textContent": {
									"type": "string",
									"value": "Alive"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 0.75,
										"font-size": "13px",
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": "({'textContent':getAttr('name')})"
								},
								"parser": {
									"type": "code",
									"value": "({'name':getAttr('textContent')})"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										2,
										44
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"6": {
								"distance": {
									"type": "double",
									"value": 10
								},
								"alignment": {
									"type": "ENUM(\"right\",\"left\",\"center\")",
									"value": "\"center\""
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Below",
								"position": {
									"type": "list<double>",
									"value": [
										32.99899850809555,
										45.99899850809561
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ff00",
										"stroke-dasharray": "",
										"stroke-opacity": 1,
										"arrow-start": "none",
										"arrow-end": "classic-wide-long"
									}
								}
							}
						},
						"edges": [
							{
								"src": "5",
								"dest": "6"
							},
							{
								"src": "6",
								"dest": "4"
							}
						]
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/SCCD/SCCD/BasicState/375.instance"
				},
				"$type": "/Formalisms/SCCD/SCCD.defaultIcons/BasicStateIcon"
			},
			"377": {
				"typename": {
					"type": "string",
					"value": "BasicStateIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						988,
						1028
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": ""
				},
				"parser": {
					"type": "code",
					"value": ""
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"4": {
								"r": {
									"type": "double",
									"value": 20
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#20B2AA",
										"fill": "#E6E6FA",
										"fill-opacity": 0.75,
										"stroke-width": 2
									}
								},
								"mapper": {
									"type": "code",
									"value": "var style = { \"stroke\": \"#20B2AA\",\n\t\t    \"fill\": \"#E6E6FA\",\n\t\t    \"fill-opacity\": 0.75,\n   \t\t    \"stroke-width\": 2};\n\nif( getAttr('isStart') )\n\tstyle['stroke-width'] = 4;\n\nif( getAttr('isCurrent') )\n\tstyle['fill'] = 'green';\n\n({'style' : style})"
								},
								"parser": {
									"type": "code",
									"value": ""
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										3,
										3
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"5": {
								"textContent": {
									"type": "string",
									"value": "Polling"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 0.75,
										"font-size": "13px",
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": "({'textContent':getAttr('name')})"
								},
								"parser": {
									"type": "code",
									"value": "({'name':getAttr('textContent')})"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										2,
										44
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"6": {
								"distance": {
									"type": "double",
									"value": 10
								},
								"alignment": {
									"type": "ENUM(\"right\",\"left\",\"center\")",
									"value": "\"center\""
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Below",
								"position": {
									"type": "list<double>",
									"value": [
										32.99899850809555,
										45.99899850809561
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ff00",
										"stroke-dasharray": "",
										"stroke-opacity": 1,
										"arrow-start": "none",
										"arrow-end": "classic-wide-long"
									}
								}
							}
						},
						"edges": [
							{
								"src": "5",
								"dest": "6"
							},
							{
								"src": "6",
								"dest": "4"
							}
						]
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/SCCD/SCCD/BasicState/376.instance"
				},
				"$type": "/Formalisms/SCCD/SCCD.defaultIcons/BasicStateIcon"
			},
			"378": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 1
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "transitionLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						325.7390267790041,
						1138.2247737533273
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"16": {
								"textContent": {
									"type": "string",
									"value": "DeadDriver"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 0.75,
										"font-size": "13px",
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": "({'textContent':getAttr('display')})"
								},
								"parser": {
									"type": "code",
									"value": "({'display':getAttr('textContent')})"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-16.24344522534551,0%",
										"0;-16.602486361664887,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;0.3603460633876427"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 0.44785276073619634,
										"yoffset": -16.5
									}
								}
							},
							"281": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;181.37862027981942,88.23529411764707%",
										"0;-34.75418551803318,-47.05882352941176%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-28.072486935852954"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/SCCD/SCCD/transition/377.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/SCCD/SCCD.defaultIcons/BasicStateIcon/327.instance--/Formalisms/SCCD/SCCD.defaultIcons/transitionLink/378.instance": "M289,989L290,1138L325.7390267790041,1138.2247737533273",
						"/Formalisms/SCCD/SCCD.defaultIcons/transitionLink/378.instance--/Formalisms/SCCD/SCCD.defaultIcons/BasicStateIcon/329.instance": "M325.7390267790041,1138.2247737533273L449,1139L509,1107"
					}
				},
				"$type": "/Formalisms/SCCD/SCCD.defaultIcons/transitionLink"
			},
			"379": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#ffff00",
						"stroke-dasharray": "",
						"stroke-opacity": 0.75,
						"stroke-width": 1
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "containLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						739.2885613093149,
						963.8328124568907
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/SCCD/SCCD/contain/378.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/SCCD/SCCD.defaultIcons/CompositeStateIcon/372.instance--/Formalisms/SCCD/SCCD.defaultIcons/containLink/379.instance": "M712,861L739.2885613093149,963.8328124568907",
						"/Formalisms/SCCD/SCCD.defaultIcons/containLink/379.instance--/Formalisms/SCCD/SCCD.defaultIcons/BasicStateIcon/376.instance": "M739.2884885521705,963.8325382826062L766.4998545771005,1066.374451995817"
					}
				},
				"$type": "/Formalisms/SCCD/SCCD.defaultIcons/containLink"
			},
			"380": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#ffff00",
						"stroke-dasharray": "",
						"stroke-opacity": 0.75,
						"stroke-width": 1
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "containLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						860.375635579853,
						958.2698622793724
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/SCCD/SCCD/contain/379.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/SCCD/SCCD.defaultIcons/CompositeStateIcon/372.instance--/Formalisms/SCCD/SCCD.defaultIcons/containLink/380.instance": "M712,861L860.375635579853,958.2698622793724",
						"/Formalisms/SCCD/SCCD.defaultIcons/containLink/380.instance--/Formalisms/SCCD/SCCD.defaultIcons/BasicStateIcon/377.instance": "M860.3126048532728,958.228541545885L1008.4993615358678,1055.3745814453098"
					}
				},
				"$type": "/Formalisms/SCCD/SCCD.defaultIcons/containLink"
			},
			"381": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 1
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "transitionLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						889.7499832034399,
						1106.9877051933863
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"16": {
								"textContent": {
									"type": "string",
									"value": "TimetoPoll"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 0.75,
										"font-size": "13px",
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": "({'textContent':getAttr('display')})"
								},
								"parser": {
									"type": "code",
									"value": "({'display':getAttr('textContent')})"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-10.495417043069779,0%",
										"0;-16.330160979887296,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-0.9391909457354987"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 0.44785276073619634,
										"yoffset": -16.5
									}
								}
							},
							"281": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;105.72764629618223,77.61140001162654%",
										"0;-43.092161193851325,-63.059262509446576%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-39.093858886229505"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/SCCD/SCCD/transition/380.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/SCCD/SCCD.defaultIcons/BasicStateIcon/376.instance--/Formalisms/SCCD/SCCD.defaultIcons/transitionLink/381.instance": "M783,1075L828,1108L889.7499832034399,1106.9877051933863",
						"/Formalisms/SCCD/SCCD.defaultIcons/transitionLink/381.instance--/Formalisms/SCCD/SCCD.defaultIcons/BasicStateIcon/377.instance": "M889.7499832034399,1106.9877051933863L950,1106L998,1067"
					}
				},
				"$type": "/Formalisms/SCCD/SCCD.defaultIcons/transitionLink"
			},
			"382": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 1
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "transitionLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						887.1498181818181,
						1001.5136348610066
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"16": {
								"textContent": {
									"type": "string",
									"value": "awake"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 0.75,
										"font-size": "13px",
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": "({'textContent':getAttr('display')})"
								},
								"parser": {
									"type": "code",
									"value": "({'display':getAttr('textContent')})"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										"0;11.12679672214631,0%",
										"0;16.59252047418306,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-179.52649194126494"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 0.44785276073619634,
										"yoffset": -16.5
									}
								}
							},
							"281": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-103.28979150576583,-69.91176319238787%",
										"0;47.282835666688925,71.50066690130576%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;134.35625428582463"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/SCCD/SCCD/transition/381.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/SCCD/SCCD.defaultIcons/BasicStateIcon/377.instance--/Formalisms/SCCD/SCCD.defaultIcons/transitionLink/382.instance": "M997,1039L946,1002L887.1498181818181,1001.5136348610066",
						"/Formalisms/SCCD/SCCD.defaultIcons/transitionLink/382.instance--/Formalisms/SCCD/SCCD.defaultIcons/BasicStateIcon/376.instance": "M887.1498181818181,1001.5136348610066L825,1001L781,1046"
					}
				},
				"$type": "/Formalisms/SCCD/SCCD.defaultIcons/transitionLink"
			},
			"383": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 1
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "transitionLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						888.9000022038189,
						950.0149377044693
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"16": {
								"textContent": {
									"type": "string",
									"value": "DriverSleeps"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 0.75,
										"font-size": "13px",
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": "({'textContent':getAttr('display')})"
								},
								"parser": {
									"type": "code",
									"value": "({'display':getAttr('textContent')})"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										"0;21.214383164514174,0%",
										"0;15.97695383923201,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;178.5738436644055"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 0.44785276073619634,
										"yoffset": -16.5
									}
								}
							},
							"281": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-115.90000220381887,6.123233995736766e-15%",
										"0;91.98506229553072,100%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/SCCD/SCCD/transition/382.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/SCCD/SCCD.defaultIcons/BasicStateIcon/377.instance--/Formalisms/SCCD/SCCD.defaultIcons/transitionLink/383.instance": "M1012,1033L1010,947L888.9000022038189,950.0149377044693",
						"/Formalisms/SCCD/SCCD.defaultIcons/transitionLink/383.instance--/Formalisms/SCCD/SCCD.defaultIcons/BasicStateIcon/376.instance": "M888.9000022038189,950.0149377044693L769,953L769,1042"
					}
				},
				"$type": "/Formalisms/SCCD/SCCD.defaultIcons/transitionLink"
			},
			"384": {
				"typename": {
					"type": "string",
					"value": "BasicStateIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						608,
						520
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": ""
				},
				"parser": {
					"type": "code",
					"value": ""
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"4": {
								"r": {
									"type": "double",
									"value": 20
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#20B2AA",
										"fill": "#E6E6FA",
										"fill-opacity": 0.75,
										"stroke-width": 2
									}
								},
								"mapper": {
									"type": "code",
									"value": "var style = { \"stroke\": \"#20B2AA\",\n\t\t    \"fill\": \"#E6E6FA\",\n\t\t    \"fill-opacity\": 0.75,\n   \t\t    \"stroke-width\": 2};\n\nif( getAttr('isStart') )\n\tstyle['stroke-width'] = 4;\n\nif( getAttr('isCurrent') )\n\tstyle['fill'] = 'green';\n\n({'style' : style})"
								},
								"parser": {
									"type": "code",
									"value": ""
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										3,
										3
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"5": {
								"textContent": {
									"type": "string",
									"value": "limitedSpeed"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 0.75,
										"font-size": "13px",
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": "({'textContent':getAttr('name')})"
								},
								"parser": {
									"type": "code",
									"value": "({'name':getAttr('textContent')})"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										2,
										44
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"6": {
								"distance": {
									"type": "double",
									"value": 10
								},
								"alignment": {
									"type": "ENUM(\"right\",\"left\",\"center\")",
									"value": "\"center\""
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Below",
								"position": {
									"type": "list<double>",
									"value": [
										32.99899850809555,
										45.99899850809561
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ff00",
										"stroke-dasharray": "",
										"stroke-opacity": 1,
										"arrow-start": "none",
										"arrow-end": "classic-wide-long"
									}
								}
							}
						},
						"edges": [
							{
								"src": "5",
								"dest": "6"
							},
							{
								"src": "6",
								"dest": "4"
							}
						]
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/SCCD/SCCD/BasicState/383.instance"
				},
				"$type": "/Formalisms/SCCD/SCCD.defaultIcons/BasicStateIcon"
			},
			"385": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#ffff00",
						"stroke-dasharray": "",
						"stroke-opacity": 0.75,
						"stroke-width": 1
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "containLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						309.8095048904419,
						325.1875
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/SCCD/SCCD/contain/384.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/SCCD/SCCD.defaultIcons/CompositeStateIcon/314.instance--/Formalisms/SCCD/SCCD.defaultIcons/containLink/385.instance": "M221.1190097808838,240L309.8095048904419,325.1875",
						"/Formalisms/SCCD/SCCD.defaultIcons/containLink/385.instance--/Formalisms/SCCD/SCCD.defaultIcons/BasicStateIcon/384.instance": "M309.9179281655808,325.2916408973925L628.4996455787627,547.374659577285"
					}
				},
				"$type": "/Formalisms/SCCD/SCCD.defaultIcons/containLink"
			},
			"386": {
				"typename": {
					"type": "string",
					"value": "BasicStateIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						607,
						329
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": ""
				},
				"parser": {
					"type": "code",
					"value": ""
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"4": {
								"r": {
									"type": "double",
									"value": 20
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#20B2AA",
										"fill": "#E6E6FA",
										"fill-opacity": 0.75,
										"stroke-width": 2
									}
								},
								"mapper": {
									"type": "code",
									"value": "var style = { \"stroke\": \"#20B2AA\",\n\t\t    \"fill\": \"#E6E6FA\",\n\t\t    \"fill-opacity\": 0.75,\n   \t\t    \"stroke-width\": 2};\n\nif( getAttr('isStart') )\n\tstyle['stroke-width'] = 4;\n\nif( getAttr('isCurrent') )\n\tstyle['fill'] = 'green';\n\n({'style' : style})"
								},
								"parser": {
									"type": "code",
									"value": ""
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										3,
										3
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"5": {
								"textContent": {
									"type": "string",
									"value": "limitedMaxSpeed"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 0.75,
										"font-size": "13px",
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": "({'textContent':getAttr('name')})"
								},
								"parser": {
									"type": "code",
									"value": "({'name':getAttr('textContent')})"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										2,
										44
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"6": {
								"distance": {
									"type": "double",
									"value": 10
								},
								"alignment": {
									"type": "ENUM(\"right\",\"left\",\"center\")",
									"value": "\"center\""
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Below",
								"position": {
									"type": "list<double>",
									"value": [
										32.99899850809555,
										45.99899850809561
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ff00",
										"stroke-dasharray": "",
										"stroke-opacity": 1,
										"arrow-start": "none",
										"arrow-end": "classic-wide-long"
									}
								}
							}
						},
						"edges": [
							{
								"src": "5",
								"dest": "6"
							},
							{
								"src": "6",
								"dest": "4"
							}
						]
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/SCCD/SCCD/BasicState/385.instance"
				},
				"$type": "/Formalisms/SCCD/SCCD.defaultIcons/BasicStateIcon"
			},
			"387": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#ffff00",
						"stroke-dasharray": "",
						"stroke-opacity": 0.75,
						"stroke-width": 1
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "containLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						389.44441703943426,
						322.75382686533527
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/SCCD/SCCD/contain/386.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/SCCD/SCCD.defaultIcons/CompositeStateIcon/314.instance--/Formalisms/SCCD/SCCD.defaultIcons/containLink/387.instance": "M221.1190097808838,240L389.44441703943426,322.75382686533527",
						"/Formalisms/SCCD/SCCD.defaultIcons/containLink/387.instance--/Formalisms/SCCD/SCCD.defaultIcons/BasicStateIcon/386.instance": "M389.37674453315276,322.72055702830016L627.4993510373547,356.37468095046813"
					}
				},
				"$type": "/Formalisms/SCCD/SCCD.defaultIcons/containLink"
			},
			"388": {
				"typename": {
					"type": "string",
					"value": "BasicStateIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						350,
						524
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": ""
				},
				"parser": {
					"type": "code",
					"value": ""
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"4": {
								"r": {
									"type": "double",
									"value": 20
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#20B2AA",
										"fill": "#E6E6FA",
										"fill-opacity": 0.75,
										"stroke-width": 2
									}
								},
								"mapper": {
									"type": "code",
									"value": "var style = { \"stroke\": \"#20B2AA\",\n\t\t    \"fill\": \"#E6E6FA\",\n\t\t    \"fill-opacity\": 0.75,\n   \t\t    \"stroke-width\": 2};\n\nif( getAttr('isStart') )\n\tstyle['stroke-width'] = 4;\n\nif( getAttr('isCurrent') )\n\tstyle['fill'] = 'green';\n\n({'style' : style})"
								},
								"parser": {
									"type": "code",
									"value": ""
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										3,
										3
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"5": {
								"textContent": {
									"type": "string",
									"value": "LimitedMinSpeed"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 0.75,
										"font-size": "13px",
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": "({'textContent':getAttr('name')})"
								},
								"parser": {
									"type": "code",
									"value": "({'name':getAttr('textContent')})"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										2,
										44
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"6": {
								"distance": {
									"type": "double",
									"value": 10
								},
								"alignment": {
									"type": "ENUM(\"right\",\"left\",\"center\")",
									"value": "\"center\""
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Below",
								"position": {
									"type": "list<double>",
									"value": [
										32.99899850809555,
										45.99899850809561
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ff00",
										"stroke-dasharray": "",
										"stroke-opacity": 1,
										"arrow-start": "none",
										"arrow-end": "classic-wide-long"
									}
								}
							}
						},
						"edges": [
							{
								"src": "5",
								"dest": "6"
							},
							{
								"src": "6",
								"dest": "4"
							}
						]
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/SCCD/SCCD/BasicState/387.instance"
				},
				"$type": "/Formalisms/SCCD/SCCD.defaultIcons/BasicStateIcon"
			},
			"389": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#ffff00",
						"stroke-dasharray": "",
						"stroke-opacity": 0.75,
						"stroke-width": 1
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "containLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						320.1360052664831,
						407.316768674118
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/SCCD/SCCD/contain/388.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/SCCD/SCCD.defaultIcons/CompositeStateIcon/314.instance--/Formalisms/SCCD/SCCD.defaultIcons/containLink/389.instance": "M221.1190097808838,240L320.1360052664831,407.316768674118",
						"/Formalisms/SCCD/SCCD.defaultIcons/containLink/389.instance--/Formalisms/SCCD/SCCD.defaultIcons/BasicStateIcon/388.instance": "M320.0976367814501,407.2519344413364L399.99964528425437,551.3744006090361"
					}
				},
				"$type": "/Formalisms/SCCD/SCCD.defaultIcons/containLink"
			},
			"390": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 1
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "transitionLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						476.7157720174521,
						514.309991510868
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"16": {
								"textContent": {
									"type": "string",
									"value": "Minspeed"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 0.75,
										"font-size": "13px",
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": "({'textContent':getAttr('display')})"
								},
								"parser": {
									"type": "code",
									"value": "({'display':getAttr('textContent')})"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										"0;32.83089124101923,0%",
										"0;22.913626634889397,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-169.15969454566945"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 0.44785276073619634,
										"yoffset": -16.5
									}
								}
							},
							"281": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-86.6934235715803,-96.67860303352907%",
										"0;26.55715261047311,25.558711146795048%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;165.1916229609576"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/SCCD/SCCD/transition/389.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/SCCD/SCCD.defaultIcons/BasicStateIcon/384.instance--/Formalisms/SCCD/SCCD.defaultIcons/transitionLink/390.instance": "M612,549L523,523L476,514",
						"/Formalisms/SCCD/SCCD.defaultIcons/transitionLink/390.instance--/Formalisms/SCCD/SCCD.defaultIcons/BasicStateIcon/388.instance": "M476,514L389,537"
					}
				},
				"$type": "/Formalisms/SCCD/SCCD.defaultIcons/transitionLink"
			},
			"391": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 1
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "transitionLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						489.7922606275142,
						586.9644511870106
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"16": {
								"textContent": {
									"type": "string",
									"value": "Speedup"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 0.75,
										"font-size": "13px",
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": "({'textContent':getAttr('display')})"
								},
								"parser": {
									"type": "code",
									"value": "({'display':getAttr('textContent')})"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-1.3231459669740957,0%",
										"0;-17.556127409342025,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-8.13010235415598"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 0.44785276073619634,
										"yoffset": -16.5
									}
								}
							},
							"281": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;124.19937598560057,96.77035728978883%",
										"0;-36.83526547860208,-25.209084672129865%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-14.601272285833936"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/SCCD/SCCD/transition/390.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/SCCD/SCCD.defaultIcons/BasicStateIcon/388.instance--/Formalisms/SCCD/SCCD.defaultIcons/transitionLink/391.instance": "M393,551L489,586",
						"/Formalisms/SCCD/SCCD.defaultIcons/transitionLink/391.instance--/Formalisms/SCCD/SCCD.defaultIcons/BasicStateIcon/384.instance": "M489,586L496,585L615,554"
					}
				},
				"$type": "/Formalisms/SCCD/SCCD.defaultIcons/transitionLink"
			},
			"392": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 1
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "transitionLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						591.617,
						445.21500000000003
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"16": {
								"textContent": {
									"type": "string",
									"value": "Slowdown"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 0.75,
										"font-size": "13px",
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": "({'textContent':getAttr('display')})"
								},
								"parser": {
									"type": "code",
									"value": "({'display':getAttr('textContent')})"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										"0;17.109967721324438,0%",
										"0;-1.1381739040604089,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;108.65788847411955"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 0.44785276073619634,
										"yoffset": -16.5
									}
								}
							},
							"281": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;38.024465909850505,41.380294430118404%",
										"0;76.12978822279524,91.03664774626047%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;65.55604521958347"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/SCCD/SCCD/transition/391.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/SCCD/SCCD.defaultIcons/BasicStateIcon/386.instance--/Formalisms/SCCD/SCCD.defaultIcons/transitionLink/392.instance": "M617,368L591,445",
						"/Formalisms/SCCD/SCCD.defaultIcons/transitionLink/392.instance--/Formalisms/SCCD/SCCD.defaultIcons/BasicStateIcon/384.instance": "M591,445L591,446L626,523"
					}
				},
				"$type": "/Formalisms/SCCD/SCCD.defaultIcons/transitionLink"
			},
			"393": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 1
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "transitionLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						663.1499999111111,
						448.49500000296297
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"16": {
								"textContent": {
									"type": "string",
									"value": "Maxspeed"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 0.75,
										"font-size": "13px",
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": "({'textContent':getAttr('display')})"
								},
								"parser": {
									"type": "code",
									"value": "({'display':getAttr('textContent')})"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-18.23167254086195,0%",
										"0;3.299493653372849,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-75.11373315098244"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 0.44785276073619634,
										"yoffset": -16.5
									}
								}
							},
							"281": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-29.944733103313183,-31.622776601683807%",
										"0;-77.23008893889562,-94.86832980505137%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-108.43494882292202"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/SCCD/SCCD/transition/392.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/SCCD/SCCD.defaultIcons/BasicStateIcon/384.instance--/Formalisms/SCCD/SCCD.defaultIcons/transitionLink/393.instance": "M642,527L663,448",
						"/Formalisms/SCCD/SCCD.defaultIcons/transitionLink/393.instance--/Formalisms/SCCD/SCCD.defaultIcons/BasicStateIcon/386.instance": "M663,448L637,370"
					}
				},
				"$type": "/Formalisms/SCCD/SCCD.defaultIcons/transitionLink"
			},
			"395": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 1
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "transitionLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						421.01859622033504,
						429.34388112181534
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"16": {
								"textContent": {
									"type": "string",
									"value": "passedYellow"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 0.75,
										"font-size": "13px",
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": "({'textContent':getAttr('display')})"
								},
								"parser": {
									"type": "code",
									"value": "({'display':getAttr('textContent')})"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										"0;24.915421357150706,0%",
										"0;-3.9302076878629464,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;32.7352262721076"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 0.44785276073619634,
										"yoffset": -16.5
									}
								}
							},
							"281": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;193.84536187826228,88.47902366759519%",
										"0;102.11695793148084,46.598952464933475%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;27.774281199431357"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/SCCD/SCCD/transition/394.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/SCCD/SCCD.defaultIcons/BasicStateIcon/125.instance--/Formalisms/SCCD/SCCD.defaultIcons/transitionLink/395.instance": "M310,338L421,429",
						"/Formalisms/SCCD/SCCD.defaultIcons/transitionLink/395.instance--/Formalisms/SCCD/SCCD.defaultIcons/BasicStateIcon/384.instance": "M421,429L463,456L613,535"
					}
				},
				"$type": "/Formalisms/SCCD/SCCD.defaultIcons/transitionLink"
			},
			"396": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 1
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "transitionLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						467.46000000000004,
						407.272
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"16": {
								"textContent": {
									"type": "string",
									"value": "passedGreen"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 0.75,
										"font-size": "13px",
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": "({'textContent':getAttr('display')})"
								},
								"parser": {
									"type": "code",
									"value": "({'display':getAttr('textContent')})"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										"0;13.969422516323334,0%",
										"0;30.712158437181472,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-141.47836457977286"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 0.44785276073619634,
										"yoffset": -16.5
									}
								}
							},
							"281": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-159.1274162271617,-90.89734293901985%",
										"0;-68.63610628243919,-41.685405679040926%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-155.36387035010952"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/SCCD/SCCD/transition/395.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/SCCD/SCCD.defaultIcons/BasicStateIcon/384.instance--/Formalisms/SCCD/SCCD.defaultIcons/transitionLink/396.instance": "M621,528L469,407L467,407",
						"/Formalisms/SCCD/SCCD.defaultIcons/transitionLink/396.instance--/Formalisms/SCCD/SCCD.defaultIcons/BasicStateIcon/125.instance": "M467,407L310,335"
					}
				},
				"$type": "/Formalisms/SCCD/SCCD.defaultIcons/transitionLink"
			},
			"397": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 1
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "transitionLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						482.85295091135254,
						323.81534415894544
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"16": {
								"textContent": {
									"type": "string",
									"value": "passedGreen"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 0.75,
										"font-size": "13px",
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": "({'textContent':getAttr('display')})"
								},
								"parser": {
									"type": "code",
									"value": "({'display':getAttr('textContent')})"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										"0;13.77169625798797,0%",
										"0;16.046064924545817,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;178.0733455475358"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 0.44785276073619634,
										"yoffset": -16.5
									}
								}
							},
							"281": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-166.72871805560453,-99.95175773076946%",
										"0;9.182726150285362,3.1058213937003027%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;178.22020920916785"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/SCCD/SCCD/transition/396.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/SCCD/SCCD.defaultIcons/BasicStateIcon/386.instance--/Formalisms/SCCD/SCCD.defaultIcons/transitionLink/397.instance": "M628,335L626,319L482.85295091135254,323.81534415894544",
						"/Formalisms/SCCD/SCCD.defaultIcons/transitionLink/397.instance--/Formalisms/SCCD/SCCD.defaultIcons/BasicStateIcon/125.instance": "M482.90898146596896,323.8134593390653L316,329"
					}
				},
				"$type": "/Formalisms/SCCD/SCCD.defaultIcons/transitionLink"
			},
			"398": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 1
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "transitionLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						642.7283950617284,
						596
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"16": {
								"textContent": {
									"type": "string",
									"value": "sliderChanged"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 0.75,
										"font-size": "13px",
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": "({'textContent':getAttr('display')})"
								},
								"parser": {
									"type": "code",
									"value": "({'display':getAttr('textContent')})"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										"0;6.2664013849877165,0%",
										"0;16.5,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;180"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 0.44785276073619634,
										"yoffset": -16.5
									}
								}
							},
							"281": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-21.244182901238787,47.70918629042325%",
										"0;-36.907678296371614,-87.88534316656953%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-61.50436138175513"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/SCCD/SCCD/transition/397.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/SCCD/SCCD.defaultIcons/BasicStateIcon/384.instance--/Formalisms/SCCD/SCCD.defaultIcons/transitionLink/398.instance": "M644,556L669,596L642.7283950617284,596",
						"/Formalisms/SCCD/SCCD.defaultIcons/transitionLink/398.instance--/Formalisms/SCCD/SCCD.defaultIcons/BasicStateIcon/384.instance": "M642.7283950617284,596L606,596L624.9996258871524,561.0006891552454"
					}
				},
				"$type": "/Formalisms/SCCD/SCCD.defaultIcons/transitionLink"
			},
			"399": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 1
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "transitionLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1076.9597111878786,
						1038.1503247939406
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"16": {
								"textContent": {
									"type": "string",
									"value": "PersistentPolling"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 0.75,
										"font-size": "13px",
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": "({'textContent':getAttr('display')})"
								},
								"parser": {
									"type": "code",
									"value": "({'display':getAttr('textContent')})"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										"0;15.853840376990092,0%",
										"0;-10.568483393544966,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;91.68468431789628"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 0.44785276073619634,
										"yoffset": -16.5
									}
								}
							},
							"281": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-56.77391567486893,-89.1163574843702%",
										"0;16.414666405875323,-45.36821385858094%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-153.0198272796836"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/SCCD/SCCD/transition/398.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/SCCD/SCCD.defaultIcons/BasicStateIcon/377.instance--/Formalisms/SCCD/SCCD.defaultIcons/transitionLink/399.instance": "M1020,1043L1077,1004L1076,1038",
						"/Formalisms/SCCD/SCCD.defaultIcons/transitionLink/399.instance--/Formalisms/SCCD/SCCD.defaultIcons/BasicStateIcon/377.instance": "M1076,1038L1077,1079L1022.0005240673529,1051.0003369004412"
					}
				},
				"$type": "/Formalisms/SCCD/SCCD.defaultIcons/transitionLink"
			}
		},
		"edges": [],
		"metamodels": [
			"/Formalisms/SCCD/SCCD.defaultIcons"
		]
	},
	"asm": {
		"nodes": {
			"0": {
				"name": {
					"type": "string",
					"value": "main"
				},
				"entryAction": {
					"type": "code",
					"value": ""
				},
				"exitAction": {
					"type": "code",
					"value": ""
				},
				"isStart": {
					"type": "boolean",
					"value": false
				},
				"isCurrent": {
					"type": "boolean",
					"value": false
				},
				"option": {
					"type": "ENUM(ITF, OTF, RTO)",
					"value": "ITF"
				},
				"raiseEntry": {
					"type": "list<map<[event,scope,arguments],[string,string,list<string>]>>",
					"value": []
				},
				"raiseExit": {
					"type": "list<map<[event,scope,arguments],[string,string,list<string>]>>",
					"value": []
				},
				"$type": "/Formalisms/SCCD/SCCD/CompositeState"
			},
			"92": {
				"name": {
					"type": "string",
					"value": "Train"
				},
				"attributes": {
					"type": "list<$ATTRIBUTE>",
					"value": []
				},
				"cardinalities": {
					"type": "list<$CARDINALITY>",
					"value": []
				},
				"abstract": {
					"type": "boolean",
					"value": false
				},
				"methods": {
					"type": "list<$METHOD>",
					"value": [
						{
							"name": "Train",
							"args": [
								{
									"name": "root",
									"type": ""
								}
							],
							"returntype": "",
							"body": "self.root, self.acceleration, self.velocity = root, 0.0, 0.0/*newline*/self.root.trainIs(self)"
						},
						{
							"name": "updateState",
							"args": [
								{
									"name": "",
									"type": ""
								}
							],
							"returntype": "",
							"body": "self.root.updateState()"
						},
						{
							"name": "openDoors",
							"args": [
								{
									"name": "",
									"type": ""
								}
							],
							"returntype": "",
							"body": "self.root.openDoors()"
						},
						{
							"name": "closeDoors",
							"args": [
								{
									"name": "",
									"type": ""
								}
							],
							"returntype": "",
							"body": "self.root.closeDoors()"
						},
						{
							"name": "notify",
							"args": [
								{
									"name": "message",
									"type": ""
								},
								{
									"name": "colour",
									"type": ""
								}
							],
							"returntype": "",
							"body": "self.root.notify(message, colour)"
						}
					]
				},
				"external": {
					"type": "boolean",
					"value": false
				},
				"$type": "/Formalisms/SCCD/SCCD/Class"
			},
			"93": {
				"$type": "/Formalisms/SCCD/SCCD/behaviour"
			},
			"118": {
				"name": {
					"type": "string",
					"value": "Velocity"
				},
				"$type": "/Formalisms/SCCD/SCCD/OrthogonalComponent"
			},
			"120": {
				"name": {
					"type": "string",
					"value": "Velocity"
				},
				"entryAction": {
					"type": "code",
					"value": ""
				},
				"exitAction": {
					"type": "code",
					"value": ""
				},
				"isStart": {
					"type": "boolean",
					"value": true
				},
				"isCurrent": {
					"type": "boolean",
					"value": false
				},
				"option": {
					"type": "ENUM(ITF, OTF, RTO)",
					"value": "ITF"
				},
				"raiseEntry": {
					"type": "list<map<[event,scope,arguments],[string,string,list<string>]>>",
					"value": []
				},
				"raiseExit": {
					"type": "list<map<[event,scope,arguments],[string,string,list<string>]>>",
					"value": []
				},
				"$type": "/Formalisms/SCCD/SCCD/CompositeState"
			},
			"124": {
				"$type": "/Formalisms/SCCD/SCCD/ocContain"
			},
			"125": {
				"name": {
					"type": "string",
					"value": "Accelerate"
				},
				"entryAction": {
					"type": "code",
					"value": ""
				},
				"exitAction": {
					"type": "code",
					"value": ""
				},
				"isStart": {
					"type": "boolean",
					"value": false
				},
				"isCurrent": {
					"type": "boolean",
					"value": false
				},
				"option": {
					"type": "ENUM(ITF, OTF, RTO)",
					"value": "ITF"
				},
				"raiseEntry": {
					"type": "list<map<[event,scope,arguments],[string,string,list<string>]>>",
					"value": []
				},
				"raiseExit": {
					"type": "list<map<[event,scope,arguments],[string,string,list<string>]>>",
					"value": []
				},
				"$type": "/Formalisms/SCCD/SCCD/BasicState"
			},
			"127": {
				"event": {
					"type": "string",
					"value": "accel"
				},
				"guard": {
					"type": "code",
					"value": "self.velocity < 120\n"
				},
				"action": {
					"type": "code",
					"value": "self.acceleration = a\n"
				},
				"display": {
					"type": "string",
					"value": "SliderChanged"
				},
				"after": {
					"type": "code",
					"value": ""
				},
				"raise": {
					"type": "list<map<[event,scope,arguments],[string,string,list<string>]>>",
					"value": []
				},
				"parameters": {
					"type": "list<string>",
					"value": [
						"a"
					]
				},
				"port": {
					"type": "string",
					"value": ""
				},
				"$type": "/Formalisms/SCCD/SCCD/transition"
			},
			"128": {
				"name": {
					"type": "string",
					"value": "TrainSystem"
				},
				"entryAction": {
					"type": "code",
					"value": ""
				},
				"exitAction": {
					"type": "code",
					"value": ""
				},
				"isStart": {
					"type": "boolean",
					"value": true
				},
				"isCurrent": {
					"type": "boolean",
					"value": false
				},
				"option": {
					"type": "ENUM(ITF, OTF, RTO)",
					"value": "ITF"
				},
				"raiseEntry": {
					"type": "list<map<[event,scope,arguments],[string,string,list<string>]>>",
					"value": []
				},
				"raiseExit": {
					"type": "list<map<[event,scope,arguments],[string,string,list<string>]>>",
					"value": []
				},
				"$type": "/Formalisms/SCCD/SCCD/CompositeState"
			},
			"129": {
				"$type": "/Formalisms/SCCD/SCCD/contain"
			},
			"130": {
				"$type": "/Formalisms/SCCD/SCCD/containOC"
			},
			"144": {
				"name": {
					"type": "string",
					"value": "Maxspeed"
				},
				"entryAction": {
					"type": "code",
					"value": ""
				},
				"exitAction": {
					"type": "code",
					"value": ""
				},
				"isStart": {
					"type": "boolean",
					"value": false
				},
				"isCurrent": {
					"type": "boolean",
					"value": false
				},
				"option": {
					"type": "ENUM(ITF, OTF, RTO)",
					"value": "ITF"
				},
				"raiseEntry": {
					"type": "list<map<[event,scope,arguments],[string,string,list<string>]>>",
					"value": []
				},
				"raiseExit": {
					"type": "list<map<[event,scope,arguments],[string,string,list<string>]>>",
					"value": []
				},
				"$type": "/Formalisms/SCCD/SCCD/BasicState"
			},
			"146": {
				"event": {
					"type": "string",
					"value": "speedCheck"
				},
				"guard": {
					"type": "code",
					"value": "self.velocity >= 120 and self.acceleration >= 0"
				},
				"action": {
					"type": "code",
					"value": "self.acceleration = 0\nself.velocity = 120\nself.notify('Max speed of 120Km/H reached'  ,    'blue')"
				},
				"display": {
					"type": "string",
					"value": "Maxspeed"
				},
				"after": {
					"type": "code",
					"value": ""
				},
				"raise": {
					"type": "list<map<[event,scope,arguments],[string,string,list<string>]>>",
					"value": []
				},
				"parameters": {
					"type": "list<string>",
					"value": []
				},
				"port": {
					"type": "string",
					"value": ""
				},
				"$type": "/Formalisms/SCCD/SCCD/transition"
			},
			"147": {
				"event": {
					"type": "string",
					"value": "accel"
				},
				"guard": {
					"type": "code",
					"value": "a < 0"
				},
				"action": {
					"type": "code",
					"value": "self.acceleration = a\nself.notify('', 'grey')"
				},
				"display": {
					"type": "string",
					"value": "Slowdown"
				},
				"after": {
					"type": "code",
					"value": ""
				},
				"raise": {
					"type": "list<map<[event,scope,arguments],[string,string,list<string>]>>",
					"value": []
				},
				"parameters": {
					"type": "list<string>",
					"value": [
						"a"
					]
				},
				"port": {
					"type": "string",
					"value": ""
				},
				"$type": "/Formalisms/SCCD/SCCD/transition"
			},
			"149": {
				"name": {
					"type": "string",
					"value": "Minspeed"
				},
				"entryAction": {
					"type": "code",
					"value": ""
				},
				"exitAction": {
					"type": "code",
					"value": ""
				},
				"isStart": {
					"type": "boolean",
					"value": true
				},
				"isCurrent": {
					"type": "boolean",
					"value": false
				},
				"option": {
					"type": "ENUM(ITF, OTF, RTO)",
					"value": "ITF"
				},
				"raiseEntry": {
					"type": "list<map<[event,scope,arguments],[string,string,list<string>]>>",
					"value": []
				},
				"raiseExit": {
					"type": "list<map<[event,scope,arguments],[string,string,list<string>]>>",
					"value": []
				},
				"$type": "/Formalisms/SCCD/SCCD/BasicState"
			},
			"152": {
				"event": {
					"type": "string",
					"value": "speedCheck"
				},
				"guard": {
					"type": "code",
					"value": "self.velocity <= 0 and self.acceleration <= 0"
				},
				"action": {
					"type": "code",
					"value": "self.acceleration = 0   \nself.velocity = 0\nself.notify('Came to a stop'    ,    'blue')"
				},
				"display": {
					"type": "string",
					"value": "Minspeed"
				},
				"after": {
					"type": "code",
					"value": ""
				},
				"raise": {
					"type": "list<map<[event,scope,arguments],[string,string,list<string>]>>",
					"value": []
				},
				"parameters": {
					"type": "list<string>",
					"value": []
				},
				"port": {
					"type": "string",
					"value": ""
				},
				"$type": "/Formalisms/SCCD/SCCD/transition"
			},
			"153": {
				"event": {
					"type": "string",
					"value": "accel"
				},
				"guard": {
					"type": "code",
					"value": "a > 0"
				},
				"action": {
					"type": "code",
					"value": "self.acceleration = a\nself.notify('', 'grey')"
				},
				"display": {
					"type": "string",
					"value": "Speedup"
				},
				"after": {
					"type": "code",
					"value": ""
				},
				"raise": {
					"type": "list<map<[event,scope,arguments],[string,string,list<string>]>>",
					"value": []
				},
				"parameters": {
					"type": "list<string>",
					"value": [
						"a"
					]
				},
				"port": {
					"type": "string",
					"value": ""
				},
				"$type": "/Formalisms/SCCD/SCCD/transition"
			},
			"154": {
				"name": {
					"type": "string",
					"value": "Doors"
				},
				"$type": "/Formalisms/SCCD/SCCD/OrthogonalComponent"
			},
			"155": {
				"name": {
					"type": "string",
					"value": "Doors"
				},
				"entryAction": {
					"type": "code",
					"value": ""
				},
				"exitAction": {
					"type": "code",
					"value": ""
				},
				"isStart": {
					"type": "boolean",
					"value": true
				},
				"isCurrent": {
					"type": "boolean",
					"value": false
				},
				"option": {
					"type": "ENUM(ITF, OTF, RTO)",
					"value": "ITF"
				},
				"raiseEntry": {
					"type": "list<map<[event,scope,arguments],[string,string,list<string>]>>",
					"value": []
				},
				"raiseExit": {
					"type": "list<map<[event,scope,arguments],[string,string,list<string>]>>",
					"value": []
				},
				"$type": "/Formalisms/SCCD/SCCD/CompositeState"
			},
			"158": {
				"name": {
					"type": "string",
					"value": "Closed"
				},
				"entryAction": {
					"type": "code",
					"value": ""
				},
				"exitAction": {
					"type": "code",
					"value": ""
				},
				"isStart": {
					"type": "boolean",
					"value": true
				},
				"isCurrent": {
					"type": "boolean",
					"value": false
				},
				"option": {
					"type": "ENUM(ITF, OTF, RTO)",
					"value": "ITF"
				},
				"raiseEntry": {
					"type": "list<map<[event,scope,arguments],[string,string,list<string>]>>",
					"value": []
				},
				"raiseExit": {
					"type": "list<map<[event,scope,arguments],[string,string,list<string>]>>",
					"value": []
				},
				"$type": "/Formalisms/SCCD/SCCD/BasicState"
			},
			"159": {
				"$type": "/Formalisms/SCCD/SCCD/contain"
			},
			"162": {
				"name": {
					"type": "string",
					"value": "Open"
				},
				"entryAction": {
					"type": "code",
					"value": ""
				},
				"exitAction": {
					"type": "code",
					"value": ""
				},
				"isStart": {
					"type": "boolean",
					"value": false
				},
				"isCurrent": {
					"type": "boolean",
					"value": false
				},
				"option": {
					"type": "ENUM(ITF, OTF, RTO)",
					"value": "ITF"
				},
				"raiseEntry": {
					"type": "list<map<[event,scope,arguments],[string,string,list<string>]>>",
					"value": []
				},
				"raiseExit": {
					"type": "list<map<[event,scope,arguments],[string,string,list<string>]>>",
					"value": []
				},
				"$type": "/Formalisms/SCCD/SCCD/BasicState"
			},
			"163": {
				"$type": "/Formalisms/SCCD/SCCD/contain"
			},
			"168": {
				"event": {
					"type": "string",
					"value": "close"
				},
				"guard": {
					"type": "code",
					"value": ""
				},
				"action": {
					"type": "code",
					"value": "self.closeDoors()"
				},
				"display": {
					"type": "string",
					"value": "closeDoors()"
				},
				"after": {
					"type": "code",
					"value": ""
				},
				"raise": {
					"type": "list<map<[event,scope,arguments],[string,string,list<string>]>>",
					"value": []
				},
				"parameters": {
					"type": "list<string>",
					"value": []
				},
				"port": {
					"type": "string",
					"value": ""
				},
				"$type": "/Formalisms/SCCD/SCCD/transition"
			},
			"169": {
				"name": {
					"type": "string",
					"value": "Update"
				},
				"$type": "/Formalisms/SCCD/SCCD/OrthogonalComponent"
			},
			"170": {
				"name": {
					"type": "string",
					"value": "Update"
				},
				"entryAction": {
					"type": "code",
					"value": ""
				},
				"exitAction": {
					"type": "code",
					"value": ""
				},
				"isStart": {
					"type": "boolean",
					"value": true
				},
				"isCurrent": {
					"type": "boolean",
					"value": false
				},
				"option": {
					"type": "ENUM(ITF, OTF, RTO)",
					"value": "ITF"
				},
				"raiseEntry": {
					"type": "list<map<[event,scope,arguments],[string,string,list<string>]>>",
					"value": []
				},
				"raiseExit": {
					"type": "list<map<[event,scope,arguments],[string,string,list<string>]>>",
					"value": []
				},
				"$type": "/Formalisms/SCCD/SCCD/CompositeState"
			},
			"171": {
				"$type": "/Formalisms/SCCD/SCCD/ocContain"
			},
			"172": {
				"$type": "/Formalisms/SCCD/SCCD/containOC"
			},
			"173": {
				"name": {
					"type": "string",
					"value": "Update"
				},
				"entryAction": {
					"type": "code",
					"value": ""
				},
				"exitAction": {
					"type": "code",
					"value": ""
				},
				"isStart": {
					"type": "boolean",
					"value": true
				},
				"isCurrent": {
					"type": "boolean",
					"value": false
				},
				"option": {
					"type": "ENUM(ITF, OTF, RTO)",
					"value": "ITF"
				},
				"raiseEntry": {
					"type": "list<map<[event,scope,arguments],[string,string,list<string>]>>",
					"value": []
				},
				"raiseExit": {
					"type": "list<map<[event,scope,arguments],[string,string,list<string>]>>",
					"value": []
				},
				"$type": "/Formalisms/SCCD/SCCD/BasicState"
			},
			"174": {
				"$type": "/Formalisms/SCCD/SCCD/contain"
			},
			"175": {
				"event": {
					"type": "string",
					"value": ""
				},
				"guard": {
					"type": "code",
					"value": ""
				},
				"action": {
					"type": "code",
					"value": "self.updateState()\n"
				},
				"display": {
					"type": "string",
					"value": "updateState()"
				},
				"after": {
					"type": "code",
					"value": "0.02"
				},
				"raise": {
					"type": "list<map<[event,scope,arguments],[string,string,list<string>]>>",
					"value": [
						{
							"event": "speedCheck",
							"scope": "",
							"arguments": [
								""
							]
						}
					]
				},
				"parameters": {
					"type": "list<string>",
					"value": []
				},
				"port": {
					"type": "string",
					"value": ""
				},
				"$type": "/Formalisms/SCCD/SCCD/transition"
			},
			"177": {
				"name": {
					"type": "string",
					"value": "DoorsOpened"
				},
				"entryAction": {
					"type": "code",
					"value": ""
				},
				"exitAction": {
					"type": "code",
					"value": ""
				},
				"isStart": {
					"type": "boolean",
					"value": false
				},
				"isCurrent": {
					"type": "boolean",
					"value": false
				},
				"option": {
					"type": "ENUM(ITF, OTF, RTO)",
					"value": "ITF"
				},
				"raiseEntry": {
					"type": "list<map<[event,scope,arguments],[string,string,list<string>]>>",
					"value": []
				},
				"raiseExit": {
					"type": "list<map<[event,scope,arguments],[string,string,list<string>]>>",
					"value": []
				},
				"$type": "/Formalisms/SCCD/SCCD/BasicState"
			},
			"178": {
				"$type": "/Formalisms/SCCD/SCCD/contain"
			},
			"180": {
				"event": {
					"type": "string",
					"value": ""
				},
				"guard": {
					"type": "code",
					"value": ""
				},
				"action": {
					"type": "code",
					"value": ""
				},
				"display": {
					"type": "string",
					"value": "DoorscanClose"
				},
				"after": {
					"type": "code",
					"value": "5.00"
				},
				"raise": {
					"type": "list<map<[event,scope,arguments],[string,string,list<string>]>>",
					"value": []
				},
				"parameters": {
					"type": "list<string>",
					"value": []
				},
				"port": {
					"type": "string",
					"value": ""
				},
				"$type": "/Formalisms/SCCD/SCCD/transition"
			},
			"181": {
				"event": {
					"type": "string",
					"value": ""
				},
				"guard": {
					"type": "code",
					"value": ""
				},
				"action": {
					"type": "code",
					"value": "self.updateState()"
				},
				"display": {
					"type": "string",
					"value": "updateState()"
				},
				"after": {
					"type": "code",
					"value": "0.02"
				},
				"raise": {
					"type": "list<map<[event,scope,arguments],[string,string,list<string>]>>",
					"value": []
				},
				"parameters": {
					"type": "list<string>",
					"value": []
				},
				"port": {
					"type": "string",
					"value": ""
				},
				"$type": "/Formalisms/SCCD/SCCD/transition"
			},
			"187": {
				"name": {
					"type": "string",
					"value": "InStation"
				},
				"entryAction": {
					"type": "code",
					"value": ""
				},
				"exitAction": {
					"type": "code",
					"value": ""
				},
				"isStart": {
					"type": "boolean",
					"value": false
				},
				"isCurrent": {
					"type": "boolean",
					"value": false
				},
				"option": {
					"type": "ENUM(ITF, OTF, RTO)",
					"value": "ITF"
				},
				"raiseEntry": {
					"type": "list<map<[event,scope,arguments],[string,string,list<string>]>>",
					"value": []
				},
				"raiseExit": {
					"type": "list<map<[event,scope,arguments],[string,string,list<string>]>>",
					"value": []
				},
				"$type": "/Formalisms/SCCD/SCCD/BasicState"
			},
			"188": {
				"$type": "/Formalisms/SCCD/SCCD/contain"
			},
			"189": {
				"event": {
					"type": "string",
					"value": "enter"
				},
				"guard": {
					"type": "code",
					"value": ""
				},
				"action": {
					"type": "code",
					"value": ""
				},
				"display": {
					"type": "string",
					"value": "EnterStation"
				},
				"after": {
					"type": "code",
					"value": ""
				},
				"raise": {
					"type": "list<map<[event,scope,arguments],[string,string,list<string>]>>",
					"value": []
				},
				"parameters": {
					"type": "list<string>",
					"value": []
				},
				"port": {
					"type": "string",
					"value": ""
				},
				"$type": "/Formalisms/SCCD/SCCD/transition"
			},
			"190": {
				"event": {
					"type": "string",
					"value": "open"
				},
				"guard": {
					"type": "code",
					"value": "self.velocity == 0.00"
				},
				"action": {
					"type": "code",
					"value": "self.openDoors()"
				},
				"display": {
					"type": "string",
					"value": "openDoors()"
				},
				"after": {
					"type": "code",
					"value": ""
				},
				"raise": {
					"type": "list<map<[event,scope,arguments],[string,string,list<string>]>>",
					"value": []
				},
				"parameters": {
					"type": "list<string>",
					"value": []
				},
				"port": {
					"type": "string",
					"value": ""
				},
				"$type": "/Formalisms/SCCD/SCCD/transition"
			},
			"191": {
				"event": {
					"type": "string",
					"value": "leave"
				},
				"guard": {
					"type": "code",
					"value": ""
				},
				"action": {
					"type": "code",
					"value": ""
				},
				"display": {
					"type": "string",
					"value": "leaveStation"
				},
				"after": {
					"type": "code",
					"value": ""
				},
				"raise": {
					"type": "list<map<[event,scope,arguments],[string,string,list<string>]>>",
					"value": []
				},
				"parameters": {
					"type": "list<string>",
					"value": []
				},
				"port": {
					"type": "string",
					"value": ""
				},
				"$type": "/Formalisms/SCCD/SCCD/transition"
			},
			"208": {
				"$type": "/Formalisms/SCCD/SCCD/containOC"
			},
			"301": {
				"name": {
					"type": "string",
					"value": "H"
				},
				"type": {
					"type": "ENUM(deep, shallow)",
					"value": "deep"
				},
				"$type": "/Formalisms/SCCD/SCCD/HistoryState"
			},
			"302": {
				"$type": "/Formalisms/SCCD/SCCD/includes"
			},
			"303": {
				"name": {
					"type": "string",
					"value": "paused"
				},
				"entryAction": {
					"type": "code",
					"value": ""
				},
				"exitAction": {
					"type": "code",
					"value": ""
				},
				"isStart": {
					"type": "boolean",
					"value": false
				},
				"isCurrent": {
					"type": "boolean",
					"value": false
				},
				"option": {
					"type": "ENUM(ITF, OTF, RTO)",
					"value": "ITF"
				},
				"raiseEntry": {
					"type": "list<map<[event,scope,arguments],[string,string,list<string>]>>",
					"value": []
				},
				"raiseExit": {
					"type": "list<map<[event,scope,arguments],[string,string,list<string>]>>",
					"value": []
				},
				"$type": "/Formalisms/SCCD/SCCD/BasicState"
			},
			"304": {
				"$type": "/Formalisms/SCCD/SCCD/contain"
			},
			"305": {
				"event": {
					"type": "string",
					"value": "pause"
				},
				"guard": {
					"type": "code",
					"value": ""
				},
				"action": {
					"type": "code",
					"value": ""
				},
				"display": {
					"type": "string",
					"value": "pause"
				},
				"after": {
					"type": "code",
					"value": ""
				},
				"raise": {
					"type": "list<map<[event,scope,arguments],[string,string,list<string>]>>",
					"value": []
				},
				"parameters": {
					"type": "list<string>",
					"value": []
				},
				"port": {
					"type": "string",
					"value": ""
				},
				"$type": "/Formalisms/SCCD/SCCD/transition"
			},
			"306": {
				"event": {
					"type": "string",
					"value": "continue"
				},
				"guard": {
					"type": "code",
					"value": ""
				},
				"action": {
					"type": "code",
					"value": ""
				},
				"display": {
					"type": "string",
					"value": "continue"
				},
				"after": {
					"type": "code",
					"value": ""
				},
				"raise": {
					"type": "list<map<[event,scope,arguments],[string,string,list<string>]>>",
					"value": []
				},
				"parameters": {
					"type": "list<string>",
					"value": []
				},
				"port": {
					"type": "string",
					"value": ""
				},
				"$type": "/Formalisms/SCCD/SCCD/transition"
			},
			"313": {
				"name": {
					"type": "string",
					"value": "Accelerator"
				},
				"entryAction": {
					"type": "code",
					"value": ""
				},
				"exitAction": {
					"type": "code",
					"value": ""
				},
				"isStart": {
					"type": "boolean",
					"value": true
				},
				"isCurrent": {
					"type": "boolean",
					"value": false
				},
				"option": {
					"type": "ENUM(ITF, OTF, RTO)",
					"value": "ITF"
				},
				"raiseEntry": {
					"type": "list<map<[event,scope,arguments],[string,string,list<string>]>>",
					"value": []
				},
				"raiseExit": {
					"type": "list<map<[event,scope,arguments],[string,string,list<string>]>>",
					"value": []
				},
				"$type": "/Formalisms/SCCD/SCCD/CompositeState"
			},
			"314": {
				"$type": "/Formalisms/SCCD/SCCD/contain"
			},
			"315": {
				"$type": "/Formalisms/SCCD/SCCD/contain"
			},
			"316": {
				"$type": "/Formalisms/SCCD/SCCD/contain"
			},
			"317": {
				"$type": "/Formalisms/SCCD/SCCD/contain"
			},
			"318": {
				"name": {
					"type": "string",
					"value": "emergency"
				},
				"entryAction": {
					"type": "code",
					"value": ""
				},
				"exitAction": {
					"type": "code",
					"value": ""
				},
				"isStart": {
					"type": "boolean",
					"value": false
				},
				"isCurrent": {
					"type": "boolean",
					"value": false
				},
				"option": {
					"type": "ENUM(ITF, OTF, RTO)",
					"value": "ITF"
				},
				"raiseEntry": {
					"type": "list<map<[event,scope,arguments],[string,string,list<string>]>>",
					"value": []
				},
				"raiseExit": {
					"type": "list<map<[event,scope,arguments],[string,string,list<string>]>>",
					"value": []
				},
				"$type": "/Formalisms/SCCD/SCCD/BasicState"
			},
			"319": {
				"$type": "/Formalisms/SCCD/SCCD/contain"
			},
			"322": {
				"name": {
					"type": "string",
					"value": "emergency"
				},
				"entryAction": {
					"type": "code",
					"value": ""
				},
				"exitAction": {
					"type": "code",
					"value": ""
				},
				"isStart": {
					"type": "boolean",
					"value": true
				},
				"isCurrent": {
					"type": "boolean",
					"value": false
				},
				"option": {
					"type": "ENUM(ITF, OTF, RTO)",
					"value": "ITF"
				},
				"raiseEntry": {
					"type": "list<map<[event,scope,arguments],[string,string,list<string>]>>",
					"value": []
				},
				"raiseExit": {
					"type": "list<map<[event,scope,arguments],[string,string,list<string>]>>",
					"value": []
				},
				"$type": "/Formalisms/SCCD/SCCD/CompositeState"
			},
			"323": {
				"name": {
					"type": "string",
					"value": "emergency"
				},
				"$type": "/Formalisms/SCCD/SCCD/OrthogonalComponent"
			},
			"324": {
				"$type": "/Formalisms/SCCD/SCCD/ocContain"
			},
			"325": {
				"$type": "/Formalisms/SCCD/SCCD/containOC"
			},
			"326": {
				"name": {
					"type": "string",
					"value": "v"
				},
				"entryAction": {
					"type": "code",
					"value": ""
				},
				"exitAction": {
					"type": "code",
					"value": ""
				},
				"isStart": {
					"type": "boolean",
					"value": true
				},
				"isCurrent": {
					"type": "boolean",
					"value": false
				},
				"option": {
					"type": "ENUM(ITF, OTF, RTO)",
					"value": "ITF"
				},
				"raiseEntry": {
					"type": "list<map<[event,scope,arguments],[string,string,list<string>]>>",
					"value": []
				},
				"raiseExit": {
					"type": "list<map<[event,scope,arguments],[string,string,list<string>]>>",
					"value": []
				},
				"$type": "/Formalisms/SCCD/SCCD/BasicState"
			},
			"327": {
				"$type": "/Formalisms/SCCD/SCCD/contain"
			},
			"328": {
				"name": {
					"type": "string",
					"value": "SlowDown"
				},
				"entryAction": {
					"type": "code",
					"value": "self.notify('Emergency Brake'  ,    'Red')"
				},
				"exitAction": {
					"type": "code",
					"value": ""
				},
				"isStart": {
					"type": "boolean",
					"value": false
				},
				"isCurrent": {
					"type": "boolean",
					"value": false
				},
				"option": {
					"type": "ENUM(ITF, OTF, RTO)",
					"value": "ITF"
				},
				"raiseEntry": {
					"type": "list<map<[event,scope,arguments],[string,string,list<string>]>>",
					"value": []
				},
				"raiseExit": {
					"type": "list<map<[event,scope,arguments],[string,string,list<string>]>>",
					"value": []
				},
				"$type": "/Formalisms/SCCD/SCCD/BasicState"
			},
			"329": {
				"$type": "/Formalisms/SCCD/SCCD/contain"
			},
			"330": {
				"event": {
					"type": "string",
					"value": "red_light"
				},
				"guard": {
					"type": "code",
					"value": ""
				},
				"action": {
					"type": "code",
					"value": "self.notify('Passed red light'  ,'red')"
				},
				"display": {
					"type": "string",
					"value": "redLight"
				},
				"after": {
					"type": "code",
					"value": ""
				},
				"raise": {
					"type": "list<map<[event,scope,arguments],[string,string,list<string>]>>",
					"value": [
						{
							"event": "emergencyBrake",
							"scope": "",
							"arguments": [
								""
							]
						}
					]
				},
				"parameters": {
					"type": "list<string>",
					"value": []
				},
				"port": {
					"type": "string",
					"value": ""
				},
				"$type": "/Formalisms/SCCD/SCCD/transition"
			},
			"332": {
				"event": {
					"type": "string",
					"value": "emergencyBrake"
				},
				"guard": {
					"type": "code",
					"value": ""
				},
				"action": {
					"type": "code",
					"value": "self.acceleration = -1.0"
				},
				"display": {
					"type": "string",
					"value": "emergencyBrake"
				},
				"after": {
					"type": "code",
					"value": ""
				},
				"raise": {
					"type": "list<map<[event,scope,arguments],[string,string,list<string>]>>",
					"value": []
				},
				"parameters": {
					"type": "list<string>",
					"value": []
				},
				"port": {
					"type": "string",
					"value": ""
				},
				"$type": "/Formalisms/SCCD/SCCD/transition"
			},
			"337": {
				"name": {
					"type": "string",
					"value": "inCooldown"
				},
				"entryAction": {
					"type": "code",
					"value": ""
				},
				"exitAction": {
					"type": "code",
					"value": ""
				},
				"isStart": {
					"type": "boolean",
					"value": false
				},
				"isCurrent": {
					"type": "boolean",
					"value": false
				},
				"option": {
					"type": "ENUM(ITF, OTF, RTO)",
					"value": "ITF"
				},
				"raiseEntry": {
					"type": "list<map<[event,scope,arguments],[string,string,list<string>]>>",
					"value": []
				},
				"raiseExit": {
					"type": "list<map<[event,scope,arguments],[string,string,list<string>]>>",
					"value": []
				},
				"$type": "/Formalisms/SCCD/SCCD/BasicState"
			},
			"338": {
				"$type": "/Formalisms/SCCD/SCCD/contain"
			},
			"339": {
				"event": {
					"type": "string",
					"value": ""
				},
				"guard": {
					"type": "code",
					"value": "self.velocity <= 0"
				},
				"action": {
					"type": "code",
					"value": "self.acceleration = 0\nself.velocity = 0"
				},
				"display": {
					"type": "string",
					"value": "goCd"
				},
				"after": {
					"type": "code",
					"value": "0.01"
				},
				"raise": {
					"type": "list<map<[event,scope,arguments],[string,string,list<string>]>>",
					"value": [
						{
							"event": "cooldown",
							"scope": "",
							"arguments": [
								""
							]
						}
					]
				},
				"parameters": {
					"type": "list<string>",
					"value": []
				},
				"port": {
					"type": "string",
					"value": ""
				},
				"$type": "/Formalisms/SCCD/SCCD/transition"
			},
			"341": {
				"event": {
					"type": "string",
					"value": ""
				},
				"guard": {
					"type": "code",
					"value": ""
				},
				"action": {
					"type": "code",
					"value": "self.notify(''  ,    'grey')"
				},
				"display": {
					"type": "string",
					"value": "resumeNormal"
				},
				"after": {
					"type": "code",
					"value": "5.00"
				},
				"raise": {
					"type": "list<map<[event,scope,arguments],[string,string,list<string>]>>",
					"value": [
						{
							"event": "resume",
							"scope": "",
							"arguments": [
								""
							]
						}
					]
				},
				"parameters": {
					"type": "list<string>",
					"value": []
				},
				"port": {
					"type": "string",
					"value": ""
				},
				"$type": "/Formalisms/SCCD/SCCD/transition"
			},
			"342": {
				"event": {
					"type": "string",
					"value": ""
				},
				"guard": {
					"type": "code",
					"value": "self.velocity > 0"
				},
				"action": {
					"type": "code",
					"value": ""
				},
				"display": {
					"type": "string",
					"value": "CheckAcceleration"
				},
				"after": {
					"type": "code",
					"value": "0.01"
				},
				"raise": {
					"type": "list<map<[event,scope,arguments],[string,string,list<string>]>>",
					"value": []
				},
				"parameters": {
					"type": "list<string>",
					"value": []
				},
				"port": {
					"type": "string",
					"value": ""
				},
				"$type": "/Formalisms/SCCD/SCCD/transition"
			},
			"343": {
				"name": {
					"type": "string",
					"value": "BacktoSpeed"
				},
				"type": {
					"type": "ENUM(deep, shallow)",
					"value": " shallow"
				},
				"$type": "/Formalisms/SCCD/SCCD/HistoryState"
			},
			"344": {
				"$type": "/Formalisms/SCCD/SCCD/includes"
			},
			"346": {
				"name": {
					"type": "string",
					"value": "dooremergency"
				},
				"entryAction": {
					"type": "code",
					"value": ""
				},
				"exitAction": {
					"type": "code",
					"value": ""
				},
				"isStart": {
					"type": "boolean",
					"value": false
				},
				"isCurrent": {
					"type": "boolean",
					"value": false
				},
				"option": {
					"type": "ENUM(ITF, OTF, RTO)",
					"value": "ITF"
				},
				"raiseEntry": {
					"type": "list<map<[event,scope,arguments],[string,string,list<string>]>>",
					"value": []
				},
				"raiseExit": {
					"type": "list<map<[event,scope,arguments],[string,string,list<string>]>>",
					"value": []
				},
				"$type": "/Formalisms/SCCD/SCCD/BasicState"
			},
			"354": {
				"name": {
					"type": "string",
					"value": "Doors"
				},
				"entryAction": {
					"type": "code",
					"value": ""
				},
				"exitAction": {
					"type": "code",
					"value": ""
				},
				"isStart": {
					"type": "boolean",
					"value": true
				},
				"isCurrent": {
					"type": "boolean",
					"value": false
				},
				"option": {
					"type": "ENUM(ITF, OTF, RTO)",
					"value": "ITF"
				},
				"raiseEntry": {
					"type": "list<map<[event,scope,arguments],[string,string,list<string>]>>",
					"value": []
				},
				"raiseExit": {
					"type": "list<map<[event,scope,arguments],[string,string,list<string>]>>",
					"value": []
				},
				"$type": "/Formalisms/SCCD/SCCD/CompositeState"
			},
			"357": {
				"$type": "/Formalisms/SCCD/SCCD/contain"
			},
			"358": {
				"$type": "/Formalisms/SCCD/SCCD/ocContain"
			},
			"359": {
				"$type": "/Formalisms/SCCD/SCCD/contain"
			},
			"360": {
				"event": {
					"type": "string",
					"value": "emergencyBrake"
				},
				"guard": {
					"type": "code",
					"value": ""
				},
				"action": {
					"type": "code",
					"value": ""
				},
				"display": {
					"type": "string",
					"value": "emergencyBrake"
				},
				"after": {
					"type": "code",
					"value": ""
				},
				"raise": {
					"type": "list<map<[event,scope,arguments],[string,string,list<string>]>>",
					"value": []
				},
				"parameters": {
					"type": "list<string>",
					"value": []
				},
				"port": {
					"type": "string",
					"value": ""
				},
				"$type": "/Formalisms/SCCD/SCCD/transition"
			},
			"367": {
				"event": {
					"type": "string",
					"value": "resume"
				},
				"guard": {
					"type": "code",
					"value": ""
				},
				"action": {
					"type": "code",
					"value": ""
				},
				"display": {
					"type": "string",
					"value": "resume"
				},
				"after": {
					"type": "code",
					"value": ""
				},
				"raise": {
					"type": "list<map<[event,scope,arguments],[string,string,list<string>]>>",
					"value": []
				},
				"parameters": {
					"type": "list<string>",
					"value": []
				},
				"port": {
					"type": "string",
					"value": ""
				},
				"$type": "/Formalisms/SCCD/SCCD/transition"
			},
			"368": {
				"event": {
					"type": "string",
					"value": "resume"
				},
				"guard": {
					"type": "code",
					"value": ""
				},
				"action": {
					"type": "code",
					"value": ""
				},
				"display": {
					"type": "string",
					"value": "resume"
				},
				"after": {
					"type": "code",
					"value": ""
				},
				"raise": {
					"type": "list<map<[event,scope,arguments],[string,string,list<string>]>>",
					"value": []
				},
				"parameters": {
					"type": "list<string>",
					"value": []
				},
				"port": {
					"type": "string",
					"value": ""
				},
				"$type": "/Formalisms/SCCD/SCCD/transition"
			},
			"370": {
				"event": {
					"type": "string",
					"value": "yellow_light"
				},
				"guard": {
					"type": "code",
					"value": "self.velocity > 50"
				},
				"action": {
					"type": "code",
					"value": "self.notify('Passed yellow light too fast'  ,'red')"
				},
				"display": {
					"type": "string",
					"value": "BadYellow"
				},
				"after": {
					"type": "code",
					"value": ""
				},
				"raise": {
					"type": "list<map<[event,scope,arguments],[string,string,list<string>]>>",
					"value": [
						{
							"event": "emergencyBrake",
							"scope": "",
							"arguments": [
								""
							]
						}
					]
				},
				"parameters": {
					"type": "list<string>",
					"value": []
				},
				"port": {
					"type": "string",
					"value": ""
				},
				"$type": "/Formalisms/SCCD/SCCD/transition"
			},
			"371": {
				"name": {
					"type": "string",
					"value": "deadmansButton"
				},
				"entryAction": {
					"type": "code",
					"value": ""
				},
				"exitAction": {
					"type": "code",
					"value": ""
				},
				"isStart": {
					"type": "boolean",
					"value": true
				},
				"isCurrent": {
					"type": "boolean",
					"value": false
				},
				"option": {
					"type": "ENUM(ITF, OTF, RTO)",
					"value": "ITF"
				},
				"raiseEntry": {
					"type": "list<map<[event,scope,arguments],[string,string,list<string>]>>",
					"value": []
				},
				"raiseExit": {
					"type": "list<map<[event,scope,arguments],[string,string,list<string>]>>",
					"value": []
				},
				"$type": "/Formalisms/SCCD/SCCD/CompositeState"
			},
			"372": {
				"name": {
					"type": "string",
					"value": "Deadman"
				},
				"$type": "/Formalisms/SCCD/SCCD/OrthogonalComponent"
			},
			"373": {
				"$type": "/Formalisms/SCCD/SCCD/ocContain"
			},
			"374": {
				"$type": "/Formalisms/SCCD/SCCD/containOC"
			},
			"375": {
				"name": {
					"type": "string",
					"value": "Alive"
				},
				"entryAction": {
					"type": "code",
					"value": ""
				},
				"exitAction": {
					"type": "code",
					"value": ""
				},
				"isStart": {
					"type": "boolean",
					"value": true
				},
				"isCurrent": {
					"type": "boolean",
					"value": false
				},
				"option": {
					"type": "ENUM(ITF, OTF, RTO)",
					"value": "ITF"
				},
				"raiseEntry": {
					"type": "list<map<[event,scope,arguments],[string,string,list<string>]>>",
					"value": []
				},
				"raiseExit": {
					"type": "list<map<[event,scope,arguments],[string,string,list<string>]>>",
					"value": []
				},
				"$type": "/Formalisms/SCCD/SCCD/BasicState"
			},
			"376": {
				"name": {
					"type": "string",
					"value": "Polling"
				},
				"entryAction": {
					"type": "code",
					"value": ""
				},
				"exitAction": {
					"type": "code",
					"value": ""
				},
				"isStart": {
					"type": "boolean",
					"value": false
				},
				"isCurrent": {
					"type": "boolean",
					"value": false
				},
				"option": {
					"type": "ENUM(ITF, OTF, RTO)",
					"value": "ITF"
				},
				"raiseEntry": {
					"type": "list<map<[event,scope,arguments],[string,string,list<string>]>>",
					"value": []
				},
				"raiseExit": {
					"type": "list<map<[event,scope,arguments],[string,string,list<string>]>>",
					"value": []
				},
				"$type": "/Formalisms/SCCD/SCCD/BasicState"
			},
			"377": {
				"event": {
					"type": "string",
					"value": "DeadDriver"
				},
				"guard": {
					"type": "code",
					"value": ""
				},
				"action": {
					"type": "code",
					"value": "self.notify('DriverSleeps'  ,'red')"
				},
				"display": {
					"type": "string",
					"value": "DeadDriver"
				},
				"after": {
					"type": "code",
					"value": ""
				},
				"raise": {
					"type": "list<map<[event,scope,arguments],[string,string,list<string>]>>",
					"value": [
						{
							"event": "emergencyBrake",
							"scope": "",
							"arguments": [
								""
							]
						}
					]
				},
				"parameters": {
					"type": "list<string>",
					"value": []
				},
				"port": {
					"type": "string",
					"value": ""
				},
				"$type": "/Formalisms/SCCD/SCCD/transition"
			},
			"378": {
				"$type": "/Formalisms/SCCD/SCCD/contain"
			},
			"379": {
				"$type": "/Formalisms/SCCD/SCCD/contain"
			},
			"380": {
				"event": {
					"type": "string",
					"value": ""
				},
				"guard": {
					"type": "code",
					"value": ""
				},
				"action": {
					"type": "code",
					"value": "self.notify('Are you still alive?', 'red')"
				},
				"display": {
					"type": "string",
					"value": "TimetoPoll"
				},
				"after": {
					"type": "code",
					"value": "30.0"
				},
				"raise": {
					"type": "list<map<[event,scope,arguments],[string,string,list<string>]>>",
					"value": []
				},
				"parameters": {
					"type": "list<string>",
					"value": []
				},
				"port": {
					"type": "string",
					"value": ""
				},
				"$type": "/Formalisms/SCCD/SCCD/transition"
			},
			"381": {
				"event": {
					"type": "string",
					"value": "awake"
				},
				"guard": {
					"type": "code",
					"value": ""
				},
				"action": {
					"type": "code",
					"value": "self.notify(''  ,'gray')"
				},
				"display": {
					"type": "string",
					"value": "awake"
				},
				"after": {
					"type": "code",
					"value": ""
				},
				"raise": {
					"type": "list<map<[event,scope,arguments],[string,string,list<string>]>>",
					"value": []
				},
				"parameters": {
					"type": "list<string>",
					"value": []
				},
				"port": {
					"type": "string",
					"value": ""
				},
				"$type": "/Formalisms/SCCD/SCCD/transition"
			},
			"382": {
				"event": {
					"type": "string",
					"value": ""
				},
				"guard": {
					"type": "code",
					"value": ""
				},
				"action": {
					"type": "code",
					"value": "self.notify(''  ,'gray')"
				},
				"display": {
					"type": "string",
					"value": "DriverSleeps"
				},
				"after": {
					"type": "code",
					"value": "5.0"
				},
				"raise": {
					"type": "list<map<[event,scope,arguments],[string,string,list<string>]>>",
					"value": [
						{
							"event": "DeadDriver",
							"scope": "",
							"arguments": [
								""
							]
						}
					]
				},
				"parameters": {
					"type": "list<string>",
					"value": []
				},
				"port": {
					"type": "string",
					"value": ""
				},
				"$type": "/Formalisms/SCCD/SCCD/transition"
			},
			"383": {
				"name": {
					"type": "string",
					"value": "limitedSpeed"
				},
				"entryAction": {
					"type": "code",
					"value": ""
				},
				"exitAction": {
					"type": "code",
					"value": ""
				},
				"isStart": {
					"type": "boolean",
					"value": false
				},
				"isCurrent": {
					"type": "boolean",
					"value": false
				},
				"option": {
					"type": "ENUM(ITF, OTF, RTO)",
					"value": "ITF"
				},
				"raiseEntry": {
					"type": "list<map<[event,scope,arguments],[string,string,list<string>]>>",
					"value": []
				},
				"raiseExit": {
					"type": "list<map<[event,scope,arguments],[string,string,list<string>]>>",
					"value": []
				},
				"$type": "/Formalisms/SCCD/SCCD/BasicState"
			},
			"384": {
				"$type": "/Formalisms/SCCD/SCCD/contain"
			},
			"385": {
				"name": {
					"type": "string",
					"value": "limitedMaxSpeed"
				},
				"entryAction": {
					"type": "code",
					"value": ""
				},
				"exitAction": {
					"type": "code",
					"value": ""
				},
				"isStart": {
					"type": "boolean",
					"value": false
				},
				"isCurrent": {
					"type": "boolean",
					"value": false
				},
				"option": {
					"type": "ENUM(ITF, OTF, RTO)",
					"value": "ITF"
				},
				"raiseEntry": {
					"type": "list<map<[event,scope,arguments],[string,string,list<string>]>>",
					"value": []
				},
				"raiseExit": {
					"type": "list<map<[event,scope,arguments],[string,string,list<string>]>>",
					"value": []
				},
				"$type": "/Formalisms/SCCD/SCCD/BasicState"
			},
			"386": {
				"$type": "/Formalisms/SCCD/SCCD/contain"
			},
			"387": {
				"name": {
					"type": "string",
					"value": "LimitedMinSpeed"
				},
				"entryAction": {
					"type": "code",
					"value": ""
				},
				"exitAction": {
					"type": "code",
					"value": ""
				},
				"isStart": {
					"type": "boolean",
					"value": false
				},
				"isCurrent": {
					"type": "boolean",
					"value": false
				},
				"option": {
					"type": "ENUM(ITF, OTF, RTO)",
					"value": "ITF"
				},
				"raiseEntry": {
					"type": "list<map<[event,scope,arguments],[string,string,list<string>]>>",
					"value": []
				},
				"raiseExit": {
					"type": "list<map<[event,scope,arguments],[string,string,list<string>]>>",
					"value": []
				},
				"$type": "/Formalisms/SCCD/SCCD/BasicState"
			},
			"388": {
				"$type": "/Formalisms/SCCD/SCCD/contain"
			},
			"389": {
				"event": {
					"type": "string",
					"value": "speedCheck"
				},
				"guard": {
					"type": "code",
					"value": "self.velocity <= 0 and self.acceleration <= 0"
				},
				"action": {
					"type": "code",
					"value": "self.velocity = 0\nself.acceleration = 0\nself.notify('Came to a stop'  ,    'blue')"
				},
				"display": {
					"type": "string",
					"value": "Minspeed"
				},
				"after": {
					"type": "code",
					"value": ""
				},
				"raise": {
					"type": "list<map<[event,scope,arguments],[string,string,list<string>]>>",
					"value": []
				},
				"parameters": {
					"type": "list<string>",
					"value": []
				},
				"port": {
					"type": "string",
					"value": ""
				},
				"$type": "/Formalisms/SCCD/SCCD/transition"
			},
			"390": {
				"event": {
					"type": "string",
					"value": "accel"
				},
				"guard": {
					"type": "code",
					"value": "a > 0"
				},
				"action": {
					"type": "code",
					"value": "self.acceleration = a\nprint('called')\nself.notify(''  ,    'grey')"
				},
				"display": {
					"type": "string",
					"value": "Speedup"
				},
				"after": {
					"type": "code",
					"value": ""
				},
				"raise": {
					"type": "list<map<[event,scope,arguments],[string,string,list<string>]>>",
					"value": []
				},
				"parameters": {
					"type": "list<string>",
					"value": [
						"a"
					]
				},
				"port": {
					"type": "string",
					"value": ""
				},
				"$type": "/Formalisms/SCCD/SCCD/transition"
			},
			"391": {
				"event": {
					"type": "string",
					"value": "accel"
				},
				"guard": {
					"type": "code",
					"value": "a < 0"
				},
				"action": {
					"type": "code",
					"value": "self.acceleration = a\nself.notify(''  ,    'grey')"
				},
				"display": {
					"type": "string",
					"value": "Slowdown"
				},
				"after": {
					"type": "code",
					"value": ""
				},
				"raise": {
					"type": "list<map<[event,scope,arguments],[string,string,list<string>]>>",
					"value": []
				},
				"parameters": {
					"type": "list<string>",
					"value": [
						"a"
					]
				},
				"port": {
					"type": "string",
					"value": ""
				},
				"$type": "/Formalisms/SCCD/SCCD/transition"
			},
			"392": {
				"event": {
					"type": "string",
					"value": "speedCheck"
				},
				"guard": {
					"type": "code",
					"value": "self.velocity >= 50"
				},
				"action": {
					"type": "code",
					"value": "self.acceleration = 0\nself.velocity = 50\nself.notify('Max speed of 50Km/H reached'  ,    'blue')"
				},
				"display": {
					"type": "string",
					"value": "Maxspeed"
				},
				"after": {
					"type": "code",
					"value": ""
				},
				"raise": {
					"type": "list<map<[event,scope,arguments],[string,string,list<string>]>>",
					"value": []
				},
				"parameters": {
					"type": "list<string>",
					"value": []
				},
				"port": {
					"type": "string",
					"value": ""
				},
				"$type": "/Formalisms/SCCD/SCCD/transition"
			},
			"394": {
				"event": {
					"type": "string",
					"value": "yellow_light"
				},
				"guard": {
					"type": "code",
					"value": "self.velocity <= 50"
				},
				"action": {
					"type": "code",
					"value": "self.notify('Speed limited to 50Km/H', 'yellow')"
				},
				"display": {
					"type": "string",
					"value": "passedYellow"
				},
				"after": {
					"type": "code",
					"value": ""
				},
				"raise": {
					"type": "list<map<[event,scope,arguments],[string,string,list<string>]>>",
					"value": []
				},
				"parameters": {
					"type": "list<string>",
					"value": []
				},
				"port": {
					"type": "string",
					"value": ""
				},
				"$type": "/Formalisms/SCCD/SCCD/transition"
			},
			"395": {
				"event": {
					"type": "string",
					"value": "green_light"
				},
				"guard": {
					"type": "code",
					"value": ""
				},
				"action": {
					"type": "code",
					"value": "self.notify('', 'grey')"
				},
				"display": {
					"type": "string",
					"value": "passedGreen"
				},
				"after": {
					"type": "code",
					"value": ""
				},
				"raise": {
					"type": "list<map<[event,scope,arguments],[string,string,list<string>]>>",
					"value": []
				},
				"parameters": {
					"type": "list<string>",
					"value": []
				},
				"port": {
					"type": "string",
					"value": ""
				},
				"$type": "/Formalisms/SCCD/SCCD/transition"
			},
			"396": {
				"event": {
					"type": "string",
					"value": "green_light"
				},
				"guard": {
					"type": "code",
					"value": ""
				},
				"action": {
					"type": "code",
					"value": ""
				},
				"display": {
					"type": "string",
					"value": "passedGreen"
				},
				"after": {
					"type": "code",
					"value": ""
				},
				"raise": {
					"type": "list<map<[event,scope,arguments],[string,string,list<string>]>>",
					"value": []
				},
				"parameters": {
					"type": "list<string>",
					"value": []
				},
				"port": {
					"type": "string",
					"value": ""
				},
				"$type": "/Formalisms/SCCD/SCCD/transition"
			},
			"397": {
				"event": {
					"type": "string",
					"value": "accel"
				},
				"guard": {
					"type": "code",
					"value": ""
				},
				"action": {
					"type": "code",
					"value": "self.acceleration = a"
				},
				"display": {
					"type": "string",
					"value": "sliderChanged"
				},
				"after": {
					"type": "code",
					"value": ""
				},
				"raise": {
					"type": "list<map<[event,scope,arguments],[string,string,list<string>]>>",
					"value": []
				},
				"parameters": {
					"type": "list<string>",
					"value": [
						"a"
					]
				},
				"port": {
					"type": "string",
					"value": ""
				},
				"$type": "/Formalisms/SCCD/SCCD/transition"
			},
			"398": {
				"event": {
					"type": "string",
					"value": ""
				},
				"guard": {
					"type": "code",
					"value": ""
				},
				"action": {
					"type": "code",
					"value": "self.notify('Are you still alive?', 'red')"
				},
				"display": {
					"type": "string",
					"value": "PersistentPolling"
				},
				"after": {
					"type": "code",
					"value": "0.02"
				},
				"raise": {
					"type": "list<map<[event,scope,arguments],[string,string,list<string>]>>",
					"value": []
				},
				"parameters": {
					"type": "list<string>",
					"value": []
				},
				"port": {
					"type": "string",
					"value": ""
				},
				"$type": "/Formalisms/SCCD/SCCD/transition"
			}
		},
		"edges": [
			{
				"src": "92",
				"dest": "93"
			},
			{
				"src": "93",
				"dest": "0"
			},
			{
				"src": "118",
				"dest": "124"
			},
			{
				"src": "124",
				"dest": "120"
			},
			{
				"src": "125",
				"dest": "127"
			},
			{
				"src": "127",
				"dest": "125"
			},
			{
				"src": "0",
				"dest": "129"
			},
			{
				"src": "129",
				"dest": "128"
			},
			{
				"src": "128",
				"dest": "130"
			},
			{
				"src": "130",
				"dest": "118"
			},
			{
				"src": "125",
				"dest": "146"
			},
			{
				"src": "146",
				"dest": "144"
			},
			{
				"src": "144",
				"dest": "147"
			},
			{
				"src": "147",
				"dest": "125"
			},
			{
				"src": "125",
				"dest": "152"
			},
			{
				"src": "152",
				"dest": "149"
			},
			{
				"src": "149",
				"dest": "153"
			},
			{
				"src": "153",
				"dest": "125"
			},
			{
				"src": "155",
				"dest": "159"
			},
			{
				"src": "159",
				"dest": "158"
			},
			{
				"src": "155",
				"dest": "163"
			},
			{
				"src": "163",
				"dest": "162"
			},
			{
				"src": "162",
				"dest": "168"
			},
			{
				"src": "168",
				"dest": "158"
			},
			{
				"src": "169",
				"dest": "171"
			},
			{
				"src": "171",
				"dest": "170"
			},
			{
				"src": "128",
				"dest": "172"
			},
			{
				"src": "172",
				"dest": "169"
			},
			{
				"src": "170",
				"dest": "174"
			},
			{
				"src": "174",
				"dest": "173"
			},
			{
				"src": "173",
				"dest": "175"
			},
			{
				"src": "175",
				"dest": "173"
			},
			{
				"src": "155",
				"dest": "178"
			},
			{
				"src": "178",
				"dest": "177"
			},
			{
				"src": "177",
				"dest": "180"
			},
			{
				"src": "180",
				"dest": "162"
			},
			{
				"src": "173",
				"dest": "181"
			},
			{
				"src": "181",
				"dest": "173"
			},
			{
				"src": "155",
				"dest": "188"
			},
			{
				"src": "188",
				"dest": "187"
			},
			{
				"src": "158",
				"dest": "189"
			},
			{
				"src": "189",
				"dest": "187"
			},
			{
				"src": "187",
				"dest": "190"
			},
			{
				"src": "190",
				"dest": "177"
			},
			{
				"src": "187",
				"dest": "191"
			},
			{
				"src": "191",
				"dest": "158"
			},
			{
				"src": "128",
				"dest": "208"
			},
			{
				"src": "208",
				"dest": "154"
			},
			{
				"src": "128",
				"dest": "302"
			},
			{
				"src": "302",
				"dest": "301"
			},
			{
				"src": "0",
				"dest": "304"
			},
			{
				"src": "304",
				"dest": "303"
			},
			{
				"src": "128",
				"dest": "305"
			},
			{
				"src": "305",
				"dest": "303"
			},
			{
				"src": "303",
				"dest": "306"
			},
			{
				"src": "306",
				"dest": "301"
			},
			{
				"src": "120",
				"dest": "314"
			},
			{
				"src": "314",
				"dest": "313"
			},
			{
				"src": "313",
				"dest": "315"
			},
			{
				"src": "315",
				"dest": "144"
			},
			{
				"src": "313",
				"dest": "316"
			},
			{
				"src": "316",
				"dest": "125"
			},
			{
				"src": "313",
				"dest": "317"
			},
			{
				"src": "317",
				"dest": "149"
			},
			{
				"src": "120",
				"dest": "319"
			},
			{
				"src": "319",
				"dest": "318"
			},
			{
				"src": "323",
				"dest": "324"
			},
			{
				"src": "324",
				"dest": "322"
			},
			{
				"src": "128",
				"dest": "325"
			},
			{
				"src": "325",
				"dest": "323"
			},
			{
				"src": "322",
				"dest": "327"
			},
			{
				"src": "327",
				"dest": "326"
			},
			{
				"src": "322",
				"dest": "329"
			},
			{
				"src": "329",
				"dest": "328"
			},
			{
				"src": "326",
				"dest": "330"
			},
			{
				"src": "330",
				"dest": "328"
			},
			{
				"src": "313",
				"dest": "332"
			},
			{
				"src": "332",
				"dest": "318"
			},
			{
				"src": "322",
				"dest": "338"
			},
			{
				"src": "338",
				"dest": "337"
			},
			{
				"src": "328",
				"dest": "339"
			},
			{
				"src": "339",
				"dest": "337"
			},
			{
				"src": "337",
				"dest": "341"
			},
			{
				"src": "341",
				"dest": "326"
			},
			{
				"src": "328",
				"dest": "342"
			},
			{
				"src": "342",
				"dest": "328"
			},
			{
				"src": "313",
				"dest": "344"
			},
			{
				"src": "344",
				"dest": "343"
			},
			{
				"src": "354",
				"dest": "357"
			},
			{
				"src": "357",
				"dest": "155"
			},
			{
				"src": "154",
				"dest": "358"
			},
			{
				"src": "358",
				"dest": "354"
			},
			{
				"src": "354",
				"dest": "359"
			},
			{
				"src": "359",
				"dest": "346"
			},
			{
				"src": "155",
				"dest": "360"
			},
			{
				"src": "360",
				"dest": "346"
			},
			{
				"src": "346",
				"dest": "367"
			},
			{
				"src": "367",
				"dest": "155"
			},
			{
				"src": "318",
				"dest": "368"
			},
			{
				"src": "368",
				"dest": "343"
			},
			{
				"src": "326",
				"dest": "370"
			},
			{
				"src": "370",
				"dest": "328"
			},
			{
				"src": "372",
				"dest": "373"
			},
			{
				"src": "373",
				"dest": "371"
			},
			{
				"src": "128",
				"dest": "374"
			},
			{
				"src": "374",
				"dest": "372"
			},
			{
				"src": "326",
				"dest": "377"
			},
			{
				"src": "377",
				"dest": "328"
			},
			{
				"src": "371",
				"dest": "378"
			},
			{
				"src": "378",
				"dest": "375"
			},
			{
				"src": "371",
				"dest": "379"
			},
			{
				"src": "379",
				"dest": "376"
			},
			{
				"src": "375",
				"dest": "380"
			},
			{
				"src": "380",
				"dest": "376"
			},
			{
				"src": "376",
				"dest": "381"
			},
			{
				"src": "381",
				"dest": "375"
			},
			{
				"src": "376",
				"dest": "382"
			},
			{
				"src": "382",
				"dest": "375"
			},
			{
				"src": "313",
				"dest": "384"
			},
			{
				"src": "384",
				"dest": "383"
			},
			{
				"src": "313",
				"dest": "386"
			},
			{
				"src": "386",
				"dest": "385"
			},
			{
				"src": "313",
				"dest": "388"
			},
			{
				"src": "388",
				"dest": "387"
			},
			{
				"src": "383",
				"dest": "389"
			},
			{
				"src": "389",
				"dest": "387"
			},
			{
				"src": "387",
				"dest": "390"
			},
			{
				"src": "390",
				"dest": "383"
			},
			{
				"src": "385",
				"dest": "391"
			},
			{
				"src": "391",
				"dest": "383"
			},
			{
				"src": "383",
				"dest": "392"
			},
			{
				"src": "392",
				"dest": "385"
			},
			{
				"src": "125",
				"dest": "394"
			},
			{
				"src": "394",
				"dest": "383"
			},
			{
				"src": "383",
				"dest": "395"
			},
			{
				"src": "395",
				"dest": "125"
			},
			{
				"src": "385",
				"dest": "396"
			},
			{
				"src": "396",
				"dest": "125"
			},
			{
				"src": "383",
				"dest": "397"
			},
			{
				"src": "397",
				"dest": "383"
			},
			{
				"src": "376",
				"dest": "398"
			},
			{
				"src": "398",
				"dest": "376"
			}
		],
		"metamodels": [
			"/Formalisms/SCCD/SCCD"
		]
	}
}